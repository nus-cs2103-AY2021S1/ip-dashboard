[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents the command to add tasks to the existing task list. An object of this class has the fields type, name,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * date, and time. Implements the execute method from the Command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final TaskType type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final LocalTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param name Name of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param date Date of the deadline or event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param time Time of the deadline or event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public AddCommand(TaskType type, String name, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws BlankTaskException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        tasks.add(type, name, date, time);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui.showAdd(tasks.size(), tasks.getLastTask());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        storage.updateMemory(tasks.getList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns true if the other object is an AddCommand instance with the same name, date, time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param o Object in comparison."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return true if the given object represents an AddCommand equivalent to this AddCommand, false otherwise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        AddCommand that \u003d (AddCommand) o;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return type \u003d\u003d that.type \u0026\u0026"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Objects.equals(name, that.name) \u0026\u0026"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Objects.equals(date, that.date) \u0026\u0026"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Objects.equals(time, that.time);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a hash code for this AddCommand. The hashcode depends on the type, name, date, and time of the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * AddCommand."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return Hash code for this AddCommand."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.hash(type, name, date, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 69
    }
  },
  {
    "path": "src/main/java/BlankTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Exception that is thrown when a task has no description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class BlankTaskException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public BlankTaskException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 14
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Abstract class to represent permissible commands on the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Executes the given command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param tasks   List of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param ui      User interface."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws BlankTaskException If task name is empty when adding tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IOException        If an error occurred while saving the task to disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws BlankTaskException, IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns true if the command is an exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return True if the command is an exit command, false otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Exits the program after the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 35
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents a deadline task. Each deadline object has a name, due date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final LocalDate dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final LocalTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param name    Name of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param dueDate Due date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param time    Time of due."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws BlankTaskException If the name of task is blank."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Deadline(String name, LocalDate dueDate, LocalTime time) throws BlankTaskException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Gets the due date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return Due date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Gets the time due."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return Time due."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a String representation of the Deadline. Includes the task type, name, done status, date, and time (if"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * applicable)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return String representation of the Deadline."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy\"))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                + (time \u003d\u003d null ? \"\" : \", \" + time.format(DateTimeFormatter.ofPattern(\"h.mm a\"))) + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a list of attributes of the deadline. Includes the type, name, done status, date, and time (if"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * applicable)."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return List of attributes of the deadline."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String[] attributeList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return new String[] { \"D\", getName(), dueDate.toString(), time.toString(), String.valueOf(isDone()) };"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Compares this Deadline to another object. The result is true if and only if the other object is a deadline with"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * all the attributes being the same as the attributes of this deadline."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param o Other object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return True if the given object represents a Deadline equivalent to this deadline."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (!super.equals(o)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        Deadline deadline \u003d (Deadline) o;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.equals(dueDate, deadline.dueDate) \u0026\u0026"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Objects.equals(time, deadline.time);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a hash code for this deadline. The hashcode is determined from the deadline\u0027s name, dueDate, and time."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return A hashcode for the deadline."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.hash(super.hashCode(), dueDate, time);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 101
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents a command to delete a particular task. A DeleteCommand instance requires an id. Implements the execute"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * method."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final short id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param id Task number."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public DeleteCommand(short id) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param tasks   List of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param ui      User interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IOException               If there is an error during saving to disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IndexOutOfBoundsException If the task number provided does not exist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui.showDelete((short) (tasks.size() - 1), tasks.getTaskAtIndex(id));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        tasks.delete(id);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        storage.updateMemory(tasks.getList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns true if the other object is a DeleteCommand instance with the same id."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param o Other object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return True if the given object represents an DeleteCommand equivalent to this DeleteCommand, false otherwise."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        DeleteCommand that \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return id \u003d\u003d that.id;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a hash code for this DeleteCommand. The hashcode depends on the id."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return A hash code for this DeleteCommand."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.hash(id);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 63
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents a command to mark a task as done. Every DoneCommand instance will have an id. Implements the Execute"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final short id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param id Id of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public DoneCommand(short id) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param tasks   List of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param ui      User interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IOException               If there is an error during saving to disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IndexOutOfBoundsException If the task number provided does not exist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            throws IOException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        Task curr \u003d tasks.getTaskAtIndex(id);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (curr.isDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            ui.displayOutput(Ui.MESSAGE_ALR_DONE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        tasks.markAsDone(id);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui.showDone(curr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        storage.updateMemory(tasks.getList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns true if the other object is a DoneCommand instance with the same id."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param o Other object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return True if the given object represents an DoneCommand equivalent to this DoneCommand, false otherwise."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        DoneCommand that \u003d (DoneCommand) o;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return id \u003d\u003d that.id;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a hash code for this DoneCommand. The hashcode depends on the id."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return A hash code for this DoneCommand."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.hash(id);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 69
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Main class for the Duke CLI task-tracking application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Initialises the instance attributes: storage, tasks, ui."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param filePath File path of storage data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } catch (BlankTaskException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            ui.displayOutput(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            ui.displayOutput(Ui.MESSAGE_ERROR_IO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Drives the application and all of the underlying processes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            Command c;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            } catch (MissingDelimiterException | MissingDateTimeException | InvalidCommandException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                ui.displayOutput(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                ui.displayOutput(Ui.MESSAGE_WRONG_FORMAT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                ui.displayOutput(Ui.MESSAGE_TASK_ID_MISSING);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            } catch (BlankTaskException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                ui.displayOutput(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                ui.displayOutput(Ui.MESSAGE_ERROR_IO);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                ui.displayOutput(Ui.MESSAGE_INVALID_ID);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Entry point of the program."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        Path dataPath \u003d Paths.get(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        new Duke(dataPath).run();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 71,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents an event task. Each Event instance has a name, date, and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final LocalTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param name Name of event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param time Time of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws BlankTaskException If event name is blank."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Event(String name, LocalDate date, LocalTime time) throws BlankTaskException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Gets the date of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return Date of event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Gets the time of the event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return Time of event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a String representation of the Event. Includes the task type, name, done status, date, and time (if"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * applicable)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"EEE, d MMM yy\"))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                + (time \u003d\u003d null ? \"\" : \", \" + time.format(DateTimeFormatter.ofPattern(\"h.mm a\"))) + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a list of attributes of the event. Includes the type, name, done status, date, and time (if applicable)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return List of attributes of the event."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String[] attributeList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return new String[] { \"E\", getName(), date.toString(), time.toString(), String.valueOf(isDone()) };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Compares this Event to another object. The result is true if and only if the other object is a Event with all the"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * attributes being the same as the attributes of this event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param o Other object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return True if the given object represents a Event equivalent to this Event."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (!super.equals(o)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        Event event \u003d (Event) o;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.equals(date, event.date) \u0026\u0026"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Objects.equals(time, event.time);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns a hash code for this event. The hashcode is determined from the event\u0027s name, date, and time."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return A hashcode for the event."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.hash(super.hashCode(), date, time);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 100
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents an exit command. Program will exit after the command is executed."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui.displayOutput(Ui.MESSAGE_EXIT);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 17
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final String query;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui.displayList(tasks.find(query), true);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 11
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * This Exception is thrown when an invalid command is given."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 13
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents a command to list the tasks saved."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ui.displayList(tasks.getList(), false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 16
    }
  },
  {
    "path": "src/main/java/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * This exception is to be thrown when a task provided does not have a date or time where required."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class MissingDateTimeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public MissingDateTimeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 14
    }
  },
  {
    "path": "src/main/java/MissingDelimiterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Exception to be thrown when a command to add task does not have a delimiter for date/time where required."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class MissingDelimiterException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public MissingDelimiterException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 14
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents the driver that parses the commands provided by the client."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    //error messages"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_MISSING_DATETIME \u003d \"Did you casually forget to put in the date/time?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_MISSING_DELIM \u003d \"You didn\u0027t put the correct delimiter in the command\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_INVALID \u003d \"I don\u0027t understand anything you just said\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final HashMap\u003cString, TaskType\u003e taskTypeMap \u003d new HashMap\u003c\u003e(Map.of("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            \"event\", TaskType.E,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            \"deadline\", TaskType.D,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            \"todo\", TaskType.T));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Parses the commands provided by the client."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param input Input Command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return Parsed Command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws MissingDelimiterException If a delimiter for date/time is required but missing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws MissingDateTimeException  If a date/time is required but missing."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws InvalidCommandException   If the command provided is not recognised."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws DateTimeParseException    If the date/time is in the wrong format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IndexOutOfBoundsException If the task number provided is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public static Command parse(String input)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            throws MissingDelimiterException, MissingDateTimeException, InvalidCommandException,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            DateTimeParseException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        String[] commandElements \u003d input.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        Command intendedCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        switch (commandElements[0]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            intendedCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            intendedCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            short taskId;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            taskId \u003d Short.parseShort(commandElements[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            intendedCommand \u003d new DoneCommand(taskId);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            taskId \u003d Short.parseShort(commandElements[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            intendedCommand \u003d new DeleteCommand(taskId);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            intendedCommand \u003d new FindCommand(String.join(\" \","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    Arrays.copyOfRange(commandElements, 1, commandElements.length)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            TaskType currType \u003d taskTypeMap.get(commandElements[0]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            if (currType \u003d\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                throw new InvalidCommandException(MESSAGE_INVALID);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            switch (currType) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            case D:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                int delimiter \u003d Arrays.asList(commandElements).indexOf(\"/by\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                if (delimiter \u003c 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    throw new MissingDelimiterException(MESSAGE_MISSING_DELIM);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                if (delimiter + 3 \u003e commandElements.length) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    throw new MissingDateTimeException(MESSAGE_MISSING_DATETIME);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                intendedCommand \u003d new AddCommand(currType,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        String.join(\" \", Arrays.copyOfRange(commandElements, 1, delimiter)),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        LocalDate.parse(commandElements[delimiter + 1], DateTimeFormatter.ofPattern(\"dd-MM-yy\")),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        LocalTime.parse(commandElements[delimiter + 2], DateTimeFormatter.ofPattern(\"HH:mm\")));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            case E:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                delimiter \u003d Arrays.asList(commandElements).indexOf(\"/at\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                if (delimiter \u003c 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    throw new MissingDelimiterException(MESSAGE_MISSING_DELIM);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                if (delimiter + 3 \u003e commandElements.length) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    throw new MissingDateTimeException(MESSAGE_MISSING_DATETIME);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                intendedCommand \u003d new AddCommand(currType,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        String.join(\" \", Arrays.copyOfRange(commandElements, 1, delimiter)),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        LocalDate.parse(commandElements[delimiter + 1], DateTimeFormatter.ofPattern(\"dd-MM-yy\")),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        LocalTime.parse(commandElements[delimiter + 2], DateTimeFormatter.ofPattern(\"HH:mm\")));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                intendedCommand \u003d new AddCommand(currType,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        String.join(\" \", Arrays.copyOfRange(commandElements, 1, commandElements.length)),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        null,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        null);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return intendedCommand;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 102
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Represents the storage of the client data. Every storage instance will have a file path. Contains methods to save or"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * load from disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final Path filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param filepath Path of data storage file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Storage(Path filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Saves the current list of tasks to the disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IOException If an error occurred when saving to disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    void updateMemory(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        StringBuilder taskListString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            for (String attribute : task.attributeList()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                taskListString.append(attribute).append(\"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        Files.writeString(filepath, taskListString, StandardOpenOption.WRITE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Loads the tasks that was previously saved to disk. If the file or directory cannot be found, it will be created"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * and a new list is returned."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return List populated with previously saved tasks, otherwise returns a new list if an existing one cannot be"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * found."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws BlankTaskException If the task provided in the list has a blank name."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws IOException        If there was an error in saving to disk."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws BlankTaskException, IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (Files.notExists(filepath)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            if (Files.notExists(filepath.getParent())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Files.createDirectories(filepath.getParent());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            Files.createFile(filepath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            Scanner data;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            data \u003d new Scanner(filepath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            while (data.hasNextLine()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Task curr;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                switch (data.nextLine()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    curr \u003d new ToDo(data.nextLine());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    curr \u003d new Event(data.nextLine(), LocalDate.parse(data.nextLine()),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                            LocalTime.parse(data.nextLine()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    curr \u003d new Deadline(data.nextLine(), LocalDate.parse(data.nextLine()),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                            LocalTime.parse(data.nextLine()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                if (data.nextBoolean()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    curr.markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                taskList.add(curr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                data.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 87
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " * Abstract class to represent any type of task. All task objects will have a name, and a boolean attribute done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_BLANK_TASK \u003d \"Did you casually forget to put in the description of the task?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Public Constructor for a task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @param name Name of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @throws BlankTaskException If task provided has a blank name."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Task(String name) throws BlankTaskException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (name.isBlank()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            throw new BlankTaskException(MESSAGE_BLANK_TASK);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.name \u003d name.strip();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Gets the name of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return Name of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return (isDone() ? \"[✓] \" : \"[✗] \") + name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns true if the task is completed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return true if task is done, false otherwise."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * Returns an array representing the list of attributes for the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     * @return A list of attributes."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public abstract String[] attributeList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        Task task \u003d (Task) o;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return isDone \u003d\u003d task.isDone \u0026\u0026"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                Objects.equals(name, task.name);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return Objects.hash(name, isDone);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 78
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void markAsDone(short id) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        list.get(id - 1).markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Task getTaskAtIndex(short id) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return list.get(id - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Task getLastTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return list.get(list.size() - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public short size() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return (short) list.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void add(TaskType taskType, String name, LocalDate date, LocalTime time) throws BlankTaskException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            list.add(new Deadline(name, date, time));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            list.add(new Event(name, date, time));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            list.add(new ToDo(name));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void delete(short id) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        list.remove(id - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String query) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            if (task.toString().contains(query)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 59
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    T, E, D"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 3
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public ToDo(String name) throws BlankTaskException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String[] attributeList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return new String[] { \"T\", getName(), String.valueOf(isDone()) };"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    // General style properties of the chatbot."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String LEFT_MARGIN \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String BORDER \u003d LEFT_MARGIN + \"_______________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String LOGO \u003d \"\\n\" + LEFT_MARGIN"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            + \"███╗   ███╗     █████╗     ██████╗     ██╗     ██████╗ \\n\" + LEFT_MARGIN"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            + \"████╗ ████║    ██╔══██╗    ██╔══██╗    ██║    ██╔═══██╗\\n\" + LEFT_MARGIN"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            + \"██╔████╔██║    ███████║    ██████╔╝    ██║    ██║   ██║\\n\" + LEFT_MARGIN"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            + \"██║╚██╔╝██║    ██╔══██║    ██╔══██╗    ██║    ██║   ██║\\n\" + LEFT_MARGIN"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            + \"██║ ╚═╝ ██║    ██║  ██║    ██║  ██║    ██║    ╚██████╔╝\\n\" + LEFT_MARGIN"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            + \"╚═╝     ╚═╝    ╚═╝  ╚═╝    ╚═╝  ╚═╝    ╚═╝     ╚═════╝ \\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String LEFT_MARGIN_DOUBLE \u003d LEFT_MARGIN + LEFT_MARGIN;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    // Messages"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_WELCOME \u003d \"It\u0027s a-me, Mario! how can I help you today?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_EMPTY \u003d \"What do you expect me to say when you didn\u0027t save any tasks?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_TASKS \u003d \"As you wish, here\u0027s what you gotta do:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_DONE \u003d \"You did it! Good job little guy!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_ADD \u003d \"Got it! I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_COUNT \u003d \"Now you have %s tasks in the list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_DELETE \u003d \"Got it. I removed this task:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    static final String MESSAGE_EXIT \u003d \"Hey! Come back here! You big-a monkey!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    static final String MESSAGE_INVALID_ID \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            \"That task wasn\u0027t even on the list! You can save the princess if you\u0027re that free...\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    static final String MESSAGE_TASK_ID_MISSING \u003d \"You didn\u0027t give me the task number to work with...\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    static final String MESSAGE_WRONG_FORMAT \u003d \"The date format should be in DD-MM-YY and the time in HH:MM\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    static final String MESSAGE_ALR_DONE \u003d \"Do you happen to have short term memory?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    static final String MESSAGE_ERROR_IO \u003d \"An error occurred while loading/saving to disk\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_NO_MATCHES \u003d \"Since when did you save a task like that?\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private static final String MESSAGE_MATCHES \u003d \"These are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    // processes the input and generates the output in the correct format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void displayOutput(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        System.out.print(BORDER + LEFT_MARGIN + input + \"\\n\" + BORDER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    // displays the task list in the correct format"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void displayList(ArrayList\u003cTask\u003e tasks, boolean isFiltered) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            displayOutput(isFiltered ? MESSAGE_NO_MATCHES : MESSAGE_EMPTY);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            StringBuilder out \u003d new StringBuilder(isFiltered ? MESSAGE_MATCHES : MESSAGE_TASKS).append(\"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            for (short i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                out.append(LEFT_MARGIN_DOUBLE).append(i + 1)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        .append(\".\").append(tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            displayOutput(out.substring(0, out.length() - 1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void showAdd(short id, Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        displayOutput(MESSAGE_ADD + \"\\n\" + LEFT_MARGIN_DOUBLE + task + \"\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                + LEFT_MARGIN + String.format(MESSAGE_COUNT, id));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void showDelete(short listSize, Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        displayOutput(MESSAGE_DELETE + \"\\n\" + LEFT_MARGIN_DOUBLE + task + \"\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                + LEFT_MARGIN + String.format(MESSAGE_COUNT, listSize));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        displayOutput(MESSAGE_DONE + \"\\n\" + LEFT_MARGIN_DOUBLE + task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        System.out.print(BORDER + LOGO);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        displayOutput(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 83
    }
  },
  {
    "path": "test/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    void testTaskCreation() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    new AddCommand(TaskType.D, \"lorem ipsum\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                            LocalDate.of(2020, 12, 12), LocalTime.of(23, 59)),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    Parser.parse(\"deadline lorem ipsum /by 12-12-20 23:59\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } catch (MissingDelimiterException | MissingDateTimeException | InvalidCommandException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    void parseInput_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    new AddCommand(TaskType.D, \"lorem ipsum\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                            LocalDate.of(2020, 12, 12), LocalTime.of(23, 59)),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    Parser.parse(\"dadlines\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } catch (MissingDelimiterException | MissingDateTimeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            System.out.println(\"pass\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 38
    }
  },
  {
    "path": "test/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    void add() throws BlankTaskException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            taskList.add(TaskType.E, \"lorem ipsum\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                    LocalDate.of(2020, 12, 12), LocalTime.of(12, 12));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        } catch (BlankTaskException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "        assertArrayEquals(new Task[] { new Event(\"lorem ipsum\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                        LocalDate.of(2020, 12, 12), LocalTime.of(12, 12)) },"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "                taskList.getList().toArray());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 25
    }
  },
  {
    "path": "test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "todo Lorem ipsum dolor"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "deadline sit amet, consectetur adipiscing /by taskdate2 tasktime2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "event sed do eiusmod tempor incididunt /at taskdate3 i-jpm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "Ut enim ad minim veniam"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "done ff"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "event /"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "event lorem /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "event       /at mon 9-10am"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "event           ipsum                  /at           12/09 9-10am"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "delete ff"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 22
    }
  },
  {
    "path": "test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qlchan24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qlchan24"
        },
        "content": "javac -encoding \"UTF-8\"  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "qlchan24": 3,
      "-": 20
    }
  }
]
