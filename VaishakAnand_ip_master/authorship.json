[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 17,
      "-": 44
    }
  },
  {
    "path": "data/dukeTaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "E/0/Computing Day /2020-09-02"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "T/1/read Book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "D/0/Stats Homework /2200-02-19"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "T/0/Childrens Day"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "T/1/write Book"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 5
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A command class that represents a interpreted command from the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected Integer index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Command(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.index \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.task \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.message \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Command(String name, int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.task \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.message \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Command(String name, Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.index \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.message \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Command(String name, String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.index \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.task \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Command as a String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representing the deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return String.format(\"Command: %s %s %s %s\", name, index, task, message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 46
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A Deadline class that represents a Task with a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * It has a Task description, as well as a deadline date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Representative text."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String type \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return type + \"/\" + super.taskSaver() + \"/\" + by.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Deadline as a String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 36
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the Duke Chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Allows users to store a list of Tasks, consisting of three types,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * namely Todos, Events and Deadlines. Users input, change and delete"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * such items via text commands to the bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Builds an instance of the Duke Chatbot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Runs the Chatbot instance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Chatbot will execute commands based on inputText."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private String run(String inputText) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Command command \u003d ui.parseCommand(inputText);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            switch (command.name) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return tasks.findTasks(command.message);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                storage.saveTasksToFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return \"That\u0027s it? That\u0027s a shame. Well, see you later then.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return tasks.printList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return tasks.makeTaskDone(command.index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return tasks.removeFromList(command.index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case \"error\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return command.message;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return tasks.addToList(command.task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.run(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 59,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * An Event class that represents a Task that occurs on a day."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * It has a Task Description, as well as a Event date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Representative text."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String type \u003d \"E\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return type + \"/\" + super.taskSaver() + \"/\" + at.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Event as a String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 36
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Image man \u003d new Image(this.getClass().getResourceAsStream(\"/images/Man.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Image woman \u003d new Image(this.getClass().getResourceAsStream(\"/images/Woman.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                DialogBox.getUserDialog(input, man),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                DialogBox.getDukeDialog(response, woman)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 50
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import exception.EmptyTimeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import exception.UnknownTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import exception.UnknownTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the Parser class, that interprets user input commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Interprets user input text, into understandable commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param inputText Commands input by user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Command understood by Chatbot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected Command commandHandler(String inputText) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String[] splitArr \u003d inputText.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String command \u003d splitArr[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String keyword \u003d splitArr[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"find\", keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"bye\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new UnknownTaskException(\"No task number entered\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                int taskNo \u003d Integer.parseInt(splitArr[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"done\", taskNo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (inputText.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String description \u003d inputText.substring(5);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"todo\", new Todo(description));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (inputText.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new UnknownTimeException(\"No by time added\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String[] newSplitArr \u003d inputText.substring(9).split(\"/by \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (newSplitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new EmptyTimeException(\"No time entered\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String description \u003d newSplitArr[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String by \u003d newSplitArr[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"deadline\", new Deadline(description, by));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (inputText.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new UnknownTimeException(\"No at time added\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String[] newSplitArr \u003d inputText.substring(6).split(\"/at \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (newSplitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new EmptyTimeException(\"No time entered\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String description \u003d newSplitArr[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String at \u003d newSplitArr[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"event\", new Event(description, at));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new UnknownTaskException(\"No task number entered\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                int taskNo \u003d Integer.parseInt(splitArr[1]) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return new Command(\"delete\", taskNo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                throw new UnknownCommandException(\"Unknown command entered\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (EmptyDescriptionException empty) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new Command(\"error\", \"Mate, you\u0027ve gotta let me know what you\u0027re gonna be doing.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (UnknownCommandException com) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new Command(\"error\", \"Um, are you sure that\u0027s not gibberish?\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (UnknownTimeException by) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new Command(\"error\", \"You\u0027ve gotta let me know the time.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (EmptyTimeException at) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new Command(\"error\", \"There has to be a time, surely. Don\u0027t leave it blank!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (UnknownTaskException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new Command(\"error\", \"C\u0027mon, I don\u0027t live in your head, you gotta tell me the task number!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Storage class that handles all the hard-disk storage of the Tasklist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Loads an existing stored list of tasks (if any)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return ArrayList of Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String root \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            File f \u003d this.checkAndCreateFile(root);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String[] next \u003d scanner.nextLine().split(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                switch (next[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    task \u003d new Todo(next[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    task \u003d new Deadline(next[2], next[3]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    task \u003d new Event(next[2], next[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (next[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (FileNotFoundException exc) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            System.out.println(exc.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Checks and identifies storage file (if available), or else"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * creates a new and empty file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param root User project root path."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Storage file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected File checkAndCreateFile(String root) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            boolean directoryExists \u003d Files.exists(Paths.get(root, \"data\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            boolean fileExists \u003d Files.exists(Paths.get(root, \"data\", \"dukeTaskList.txt\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                Files.createDirectory(Paths.get(root, \"data\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (!fileExists) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                Files.createFile(Paths.get(root, \"data\", \"dukeTaskList.txt\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new File(Paths.get(root, \"data\", \"dukeTaskList.txt\").toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException exc) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            System.out.println(exc.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void saveTasksToFile() throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String root \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        FileWriter fw \u003d new FileWriter(Paths.get(root, \"data\", \"dukeTaskList.txt\").toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.list.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Task task \u003d TaskList.list.get(i);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String toAdd \u003d task.taskSaver();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fw.write(toAdd + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 86
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A Task class is a general class that represents a Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * It has a Description, and boolean whether it is done or not."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Gets the appropriate icon to represent current Done status of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Icon String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Marks Task as Done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Representative text."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String doneStatus \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return doneStatus + \"/\" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Task as a String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 46
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * The TaskList class holds and manages the current list of Tasks stored"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * by the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list \u003d loadedTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Prints a list of current tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String printList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.list.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            output.append(i).append(\". \").append(this.list.get(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Removes a task from the list of current tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskNo Index of task to remove."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String removeFromList(int taskNo) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task removedTask \u003d this.list.remove(taskNo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(\"Well, if you insist. I\u0027ve removed:\\n\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                .append(removedTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Adds a task to the list of current tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String addToList(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(\"Alright matey, I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(task)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                .append(\"\\n\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                .append(\"Looks like you have \")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                .append(this.list.size())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                .append(\" tasks in total.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Marks a task in list of current tasks as completed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskNo Index of task to mark."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String makeTaskDone(int taskNo) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task toBeDone \u003d this.list.get(taskNo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        toBeDone.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list.set(taskNo, toBeDone);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(\"Good Job, this task is now done:\\n\").append(toBeDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String findTasks(String keyword) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Task task \u003d this.list.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String description \u003d task.description;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            boolean thereIsMatch \u003d description.matches(\".*\\\\b\" + keyword + \"\\\\b.*\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (thereIsMatch) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    output.append(\"Here are the tasks you\u0027re trying to find.\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                output.append(count)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        .append(\". \")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        .append(task)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        .append(\"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            output.append(\"No match found :(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 94
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A Deadline class that represents a Todo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * It has a Task description."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Representative text."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String type \u003d \"T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return type + \"/\" + super.taskSaver();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Todo as a String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 28
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * The Ui class holds commonly used phrases used by the bot to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * communicate with the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private static final String LINE \u003d \"___________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Utilises the parser to parse user commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param line User input text."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Command understood from user text."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Command parseCommand(String line) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.parser.commandHandler(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns a line to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String lineBreak() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return LINE + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the introduction messages to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String intro() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.lineBreak()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"Yo what\u0027s up! The name\u0027s Juke\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"What do you need?\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + this.lineBreak();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 42
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a general Exception specific to the Duke Chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 10
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeExceptions.DukeException when a user does not input a description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * for a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 11
    }
  },
  {
    "path": "src/main/java/exception/EmptyTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeExceptions.DukeException when a user does not input a time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * for a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class EmptyTimeException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public EmptyTimeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 11
    }
  },
  {
    "path": "src/main/java/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeExceptions.DukeException when a user does not input an appropriate"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 11
    }
  },
  {
    "path": "src/main/java/exception/UnknownTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeExceptions.DukeException when a user does not input a proper task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownTaskException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 10
    }
  },
  {
    "path": "src/main/java/exception/UnknownTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeExceptions.DukeException when a user does not input a time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * for a Task that requires a time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownTimeException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownTimeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 11
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                \u003cFont size\u003d\"18.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 29
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testTodoParsing() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(new Command(\"todo\", new Todo(\"read book\")).toString(), parser.commandHandler(\"todo read book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testByeParsing() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(new Command(\"bye\").toString(), parser.commandHandler(\"bye\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testEventParsing() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(new Command(\"event\", new Event(\"Computing Day \", \"2020-09-02\")).toString(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                parser.commandHandler(\"event Computing Day /at 2020-09-02\").toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testEmptyDescriptionErrorParsing() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(new Command(\"error\", \"Mate, you\u0027ve gotta let me know what you\u0027re gonna be doing.\").toString(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                parser.commandHandler(\"event\").toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 33
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testSavedString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(\"T/0/read book\", new Todo(\"read book\").taskSaver());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "todo Shopping"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "deadline CS2103T Project /by Thursday Night"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "event National Day Holiday /at August 9"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDo.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 1,
      "-": 20
    }
  }
]
