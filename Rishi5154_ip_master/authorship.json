[
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "D---1---return book---/by 2017-10-10 05:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "E---0---project meeting---/at 2017-12-11 13:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "T---1---join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "T---0---buy things"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "D---0---submit work---/by 2017-12-11 13:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "D---1---do a run---/by 2020-10-14 17:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "E---0---interview at Google---/by 2021-01-31 21:00"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 7
    }
  },
  {
    "path": "src/main/java/BlahException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class BlahException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public BlahException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super(\"You\u0027re talking gibberish. Cannot make sense of what you just said.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 5
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"list\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"delete\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    BLAH {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"blah\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    TASK {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"task\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"done\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 56
    }
  },
  {
    "path": "src/main/java/Data.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class Data {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    final Path path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    Data(String path) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        //System.out.println(\"Path being located\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.path \u003d Paths.get(\"src/main/data/duke.txt\").toAbsolutePath();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (Files.notExists(this.path)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            new File(String.valueOf(path)).createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public List\u003cTask\u003e loadData() throws FileNotFoundException, DukeInvalidTimeException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        List\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        Scanner scanner \u003d new Scanner(path.toFile());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        for (int i \u003d 1; scanner.hasNextLine(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Task currTask \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            String[] curr \u003d scanner.nextLine().split(\"---\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            String task \u003d curr[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            boolean isDone \u003d Integer.parseInt(curr[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            String activity \u003d curr[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            switch (task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    currTask \u003d new Todo(activity, i, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case \"D\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    String description \u003d activity + \" \" + curr[3];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    currTask \u003d new Deadline(description, i, isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case \"E\": {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    String description \u003d activity + \" \" + curr[3];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    currTask \u003d new Event(description, i, isDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(currTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return todoList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        FileWriter writer \u003d new FileWriter(this.path.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            String line \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            //int index \u003d task.index;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            int done \u003d task.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            String description \u003d task.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            switch (task.type) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    line \u003d String.format(\"T---%d---%s\", done, description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    int idx \u003d description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    String activity \u003d description.substring(0, idx - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    String timing \u003d description.substring(idx);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    line \u003d String.format(\"%s---%d---%s---%s\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                            task.type \u003d\u003d TaskType.DEADLINE ? \"D\" : \"E\", done, activity, timing);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            writer.write(line + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 78
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Deadline(String description, int index, boolean isDone) throws DukeInvalidTimeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super(description, index, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super.type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int idx \u003d this.description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.time \u003d LocalDateTime.parse(this.description.substring(idx + 4, idx + 20),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new DukeInvalidTimeException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String getStatusWithIndex() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int idx \u003d this.description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String task \u003d this.description.substring(0, idx);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String end \u003d String.format(\"by: %s\", this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s. %s%s%s(%s)\", index, super.type, isDone ? super.done : super.start, task, end);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int idx \u003d this.description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String task \u003d this.description.substring(0, idx);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String end \u003d new StringBuilder(this.description.substring(idx + 1)).insert(2,\u0027:\u0027).toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s%s%s(%s)\", super.type, isDone ? super.done : super.start, task, end);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 33
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static List\u003cTask\u003e todoList; //\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static String line \u003d \"---------------------------------------------------\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    private Data data;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            data \u003d new Data(path);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            //System.out.println(\"Before calling load\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            // todoList \u003d data.loadData();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.taskList \u003d new TaskList(data.loadData());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (IOException | DukeInvalidTimeException| ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"FAILURE: Unable to load data from local drive.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            //todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//        String welcome \u003d line + \"\\nHello! I\u0027m Duke!\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//        //System.out.println(logo + \"\\n\" + welcome);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//        System.out.println(welcome);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        //new Duke(\"data/duke.txt\").runDuke();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String word \u003d this.parser.scan.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        while (!word.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            int len \u003d word.length();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Commands currentCommand \u003d this.parser.analyse(word);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            assign(currentCommand, word);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            word \u003d this.parser.scan.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.ui.endDuke();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            data.save(this.taskList.todoList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (IOException | NullPointerException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"FAILURE: Could not save data to main/data directory.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void assign(Commands command, String task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                this.ui.displayList(this.taskList.todoList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                decideTaskType(command, task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                Task todo \u003d this.taskList.markDone(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                this.ui.completeTask(todo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                Task deletedTask \u003d this.taskList.delete(task, this.taskList.todoList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                this.ui.deleteTask(deletedTask, this.taskList.todoList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case BLAH:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            case TASK:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                assignOtherTasks(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void assignOtherTasks(String task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.taskList.storeTask(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.ui.addOtherTask(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (BlahException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.ui.printError(e.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void decideTaskType(Commands commands, String task) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        Task todo \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            switch (commands){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    todo \u003d taskList.storeTodo(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    todo \u003d taskList.storeDeadline(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    todo \u003d taskList.storeEvent(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.ui.addTask(todo, this.taskList.todoList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (EmptyDukeException | DukeInvalidTimeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.ui.printError(e.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void runDuke(){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String word \u003d scan.nextLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int len \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        while (!word.equals(\"bye\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            len \u003d word.length();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            if (word.equals(\"list\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                for (Task task : todoList) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    System.out.println(task.getStatusWithIndex());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            } else if (word.startsWith(\"todo\") || word.startsWith(\"deadline\") || word.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                processTask(word);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            } else if (len \u003e 4 \u0026\u0026 word.substring(0,5).equals(\"done \")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                int taskNo \u003d Character.getNumericValue(word.charAt(5)) - 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                Task task \u003d todoList.get(taskNo);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                task.isDone \u003d true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                System.out.println(line + \"\\nNice! I have marked this task as done: \\n  \" + task.toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                if (len \u003e 6 \u0026\u0026 word.substring(0,7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    int taskNo \u003d Character.getNumericValue(word.charAt(7)) - 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    delete(taskNo);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                        storeTask(word);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                        System.out.println(line + \"\\nadded: \" + word);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    } catch (BlahException e){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                        System.out.println(e.toString());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            word \u003d scan.nextLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(line + \"\\nBye. Hope to see you again soon!\\n\" + line);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            data.save(todoList);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (IOException | NullPointerException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"FAILURE: Could not save data to an appropriate directory.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static void storeTask(String item) throws BlahException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (item.equals(\"blah\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new BlahException();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(new Task(item, count));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static Todo storeTodo(String todo) throws EmptyDukeException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (todo.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new EmptyDukeException(\"The description of your todo is empty.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Todo curr \u003d new Todo(todo.substring(5), count, false);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(curr);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return curr;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static Deadline storeDeadline(String deadline) throws EmptyDukeException, DukeInvalidTimeException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (deadline.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new EmptyDukeException(\"The description of your deadline is empty.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Deadline curr \u003d new Deadline(deadline.substring(9), count, false);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(curr);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return curr;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static Event storeEvent(String event) throws EmptyDukeException, DukeInvalidTimeException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (event.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new EmptyDukeException(\"The description of your event is empty.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Event curr \u003d new Event(event.substring(6), count, false);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(curr);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return curr;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static void processTask(String word) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        Task toDo \u003d null;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            if (word.substring(0,4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                toDo \u003d storeTodo(word);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            } else if (word.substring(0,5).equals(\"event\")) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                toDo \u003d storeEvent(word);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            } else if (word.substring(0,8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                toDo \u003d storeDeadline(word);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(toDo \u003d\u003d null ? \"Failed!\" : line + \"\\nGot it. I\u0027ve added this task:\\n   \""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    + toDo.toString()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    + \"\\nNow you have \" + todoList.size() + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (EmptyDukeException | DukeInvalidTimeException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static void delete(int n) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        Task task \u003d todoList.remove(n);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        for (int i \u003d n; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.get(i).index \u003d todoList.get(i).index - 1;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(line + \"\\nNoted. I\u0027ve removed this task:\\n  \" + task.toString()"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + \"\\nNow you have \" + todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 231,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return \"---------------------------------------------------\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + \"\\nFAILURE: \" + super.getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 10
    }
  },
  {
    "path": "src/main/java/DukeInvalidTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class DukeInvalidTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public DukeInvalidTimeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super(\"Your command has to be in a proper format like \" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                \"the one here \\n\\t \u003ccommand\u003e \u003cactivity\u003e \u003cby/at\u003e \u003cYear-Month-Day Hour:Minute\u003e.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 6
    }
  },
  {
    "path": "src/main/java/EmptyDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class EmptyDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public EmptyDukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Event(String description, int index, boolean isDone) throws DukeInvalidTimeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super(description, index, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super.type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int idx \u003d this.description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.time \u003d LocalDateTime.parse(this.description.substring(idx + 4, idx + 20),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new DukeInvalidTimeException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String getStatusWithIndex() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int idx \u003d this.description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String task \u003d this.description.substring(0, idx);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String end \u003d String.format(\"at: %s\", this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s. %s%s%s(%s)\", index, super.type, isDone ? super.done : super.start, task, end);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int idx \u003d this.description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String task \u003d this.description.substring(0, idx);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String end \u003d new StringBuilder(this.description.substring(idx + 1)).insert(2,\u0027:\u0027).toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s%s%s(%s)\", super.type, isDone ? super.done : super.start, task, end);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 35
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Scanner scan;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Commands analyse(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.LIST;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.TODO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.DEADLINE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.EVENT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.DELETE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (command.startsWith(\"blah\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.BLAH;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.DONE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return Commands.TASK;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 31
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    protected final String done \u003d \"[\\u2713] \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    protected final String start \u003d \"[\\u2718] \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public TaskType type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Task(String description, int index) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Task(String description, int index, boolean isOver) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.isDone \u003d isOver;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String getStatusWithIndex() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s. %s%s\", index, isDone ? this.done : this.start, this.description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//        return isDone ? index + \". \" + this.done /*\"[\\u2713] \"*/ + this.description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "//                : index + \". \" + this.start/*\"[\\u2718] \"*/ + this.description; //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s%s\", isDone ? this.done : this.start, this.description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        //return (isDone ? this.done/*\"[\\u2713] \"*/ + this.description : this.start/*\"[\\u2718] \"*/ + this.description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public List\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        this.todoList \u003d list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void storeTask(String item) throws BlahException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (item.equals(\"blah\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new BlahException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            this.todoList.add(new Task(item, count));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Todo storeTodo(String todo) throws EmptyDukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (todo.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new EmptyDukeException(\"The description of your todo is empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Todo curr \u003d new Todo(todo.substring(5), count, false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(curr);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return curr;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Deadline storeDeadline(String deadline) throws EmptyDukeException, DukeInvalidTimeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (deadline.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new EmptyDukeException(\"The description of your deadline is empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Deadline curr \u003d new Deadline(deadline.substring(9), count, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(curr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return curr;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Event storeEvent(String event) throws EmptyDukeException, DukeInvalidTimeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int count \u003d todoList.size() + 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        if (count \u003e 100) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(\"You have far too many pending tasks!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else if (event.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            throw new EmptyDukeException(\"The description of your event is empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            Event curr \u003d new Event(event.substring(6), count, false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.add(curr);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return curr;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Task markDone(String command) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int taskNo \u003d Character.getNumericValue(command.charAt(5)) - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        Task task \u003d todoList.get(taskNo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        task.isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Task delete(String command, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        int taskNo \u003d Character.getNumericValue(command.charAt(7)) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        Task task \u003d list.remove(taskNo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        for (int i \u003d taskNo; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            todoList.get(i).index \u003d todoList.get(i).index - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 83
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"[D]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            return \"[E]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Todo(String description, int index, boolean isDone) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super(description, index, isDone);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        super.type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String getStatusWithIndex() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s. %s%s%s\", index, super.type, isDone ? super.done : super.start, this.description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        return String.format(\"%s%s%s\", super.type, isDone ? super.done : super.start, this.description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public static String line \u003d \"---------------------------------------------------\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        String welcome \u003d line + \"\\nHello! I\u0027m Duke!\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void displayList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "            System.out.println(task.getStatusWithIndex());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void addTask(Task task, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(task \u003d\u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                ? \"Failed!\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                : line + \"\\nGot it. I\u0027ve added this task:\\n   \" + task.toString()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                    + \"\\nNow you have \" + list.size() + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void addOtherTask(String task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(line + \"\\nadded: \" + task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void completeTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(line + \"\\nNice! I have marked this task as done: \\n  \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + task.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void deleteTask(Task task, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(line + \"\\nNoted. I\u0027ve removed this task:\\n  \" + task.toString()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "                + \"\\nNow you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void endDuke() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(line + \"\\nBye. Hope to see you again soon!\\n\" + line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void errorLoading() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(\"FAILURE: Unable to load data from local drive.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    public void printError(String error) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 59
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "deadline return book /by 2019-10-15 18:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "event interview at Google /by 2021-01-31 21:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "workout"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "event interview at Amazon /by 4325243523452345243"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "blah"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "#if ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "#    find ../src/main/java -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "#    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "#  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishi5154"
        },
        "content": "diff -u --ignore-space-change --strip-trailing-cr --ignore-blank-lines ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Rishi5154": 6,
      "-": 36
    }
  }
]
