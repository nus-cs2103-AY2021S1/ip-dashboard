[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "version \u003d \u00271.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "task fatJar(type: Jar) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        attributes \u0027Implementation-Title\u0027: \u0027Gradle Jar File Example\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                \u0027Implementation-Version\u0027: version,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                \u0027Main-Class\u0027: \u0027Main\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    with jar"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 39,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "[T][✘] ask [T][✘] ask [D][✘] be /by"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 1
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 89,
      "-": 15
    }
  },
  {
    "path": "src/main/java/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Customised Data and Time class to store and print out appropriate"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * dates and times for tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private final LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Construct an date and time object for tasks without specified time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DateAndTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Construct a date and time object for storage by Duke for tasks with specified timing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param dateAndTime A string passed to Duke by the user containing time information"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DateAndTime(String dateAndTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String date \u003d dateAndTime.substring(0, \"2020-02-02\".length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String time \u003d dateAndTime.substring(\"2020-02-02\".length() + 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.time \u003d LocalTime.parse(time);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public LocalTime getTime(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Overridden toString() method to print out the desired format of date and time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return A string that represents the date and time stored"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return date.getYear() + \" \" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                date.getMonth() + \" \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                date.getDayOfMonth() + \" \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                date.getDayOfWeek() + \" \" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                time.toString() + \"hr\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 59
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Deadline class is a subclass of Task which holds information for this type of tasks with"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * a date and time (which is the deadline :) )."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Deadline extends Task implements Comparable\u003cDeadline\u003e{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected DateAndTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a Deadline task with a description and a date and time specified."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that contains the description of a deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param by          the date and time object which specifies the timing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Deadline(String description, DateAndTime by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a Deadline task with a description, a date and time and a specified status"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * done or not done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that contains the description of a deadline task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param by          the date and time object which specifies the timing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      the boolean to indicated if the task is completed or not"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Deadline(String description, DateAndTime by, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Overridden toString() method to print out a deadline task in the right format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string that represents a deadline task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Overridden compareTo method to compare urgency in date and time for a deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param another the deadline task to compare with"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return -1 if urgency of this deadline is higher, 0 if equal and 1 if urgency of another"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *     is higher"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public int compareTo(Deadline another){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(!this.by.getDate().equals(another.by.getDate())){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return this.by.getDate().compareTo(another.by.getDate());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return this.by.getTime().compareTo(another.by.getTime());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 59
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Entry point of the programme, Duke is used as it is the project\u0027s name."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//     * The main method which handles users and calls relevant methods:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//     * Storage is called to print out stored tasks on the hard disk from the previous run,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//     * Ui is called to handle user inputs/ commands specifically."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//     * @param args standard format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//                \"People call me Duke the All-Knowing ,\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//                \"ask me anything by typing a line.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//        Storage.read();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//        ui.deal();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void start(Stage stage){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        //added now (part 2)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return  ui.deal(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 154,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Exceptions that may occur during users\u0027 entering arguments and commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Produces an exception with a specified message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param message the message to be sent should this exception is produced"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Produces an exception with a specified message and the cause for it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param message the message to be sent should this exception is produced"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param cause   the cause of the exception"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The overridden toString() method that prints out the exception produced."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return the string message as a representation of the error"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 35
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Event class is a subclass of Task which holds information of an Event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * with an occuring time and date."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected DateAndTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs an Event task with the specified description and the timing."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes that the event is"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param at          the date and time of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Event(String description, DateAndTime at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs an Event with the specified description, timing and the status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes that the event is"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param at          the date and time of the event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      the boolean to indicate the whether the event is completed or not"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Event(String description, DateAndTime at, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The overridden toString() method to print out the correct representation of an event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of an event object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 42
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Application.launch(Window.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 10
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * A class which stores key words of commands and various comparing methods"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * used for checking and validation."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DEL \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DONE_VALID \u003d \"done 1\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DEL_VALID \u003d \"delete 1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String TODO_VALIDATION \u003d \"todo \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String EVT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String EVT_VALIDATION \u003d \"event \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DDL \u003d \"deadline\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DDL_VALIDATION \u003d \"deadline \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String EMPTY \u003d \" \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String BYORAT \u003d \"/by \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String REMINDER \u003d \"reminder\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a Parser object to tackle the user inputs/commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isReminder(String input){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(REMINDER);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isBye(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.equals(BYE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isList(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.equals(LIST);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isDone(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(DONE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isDelete(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(DEL);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isTodo(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(TODO);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isValidTodo(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.length() \u003e TODO_VALIDATION.length();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isEvent(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(EVT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isValidEvent(String input) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.length() \u003e EVT_VALIDATION.length();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isDeadline(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(DDL);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isValidDeadline(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.length() \u003e DDL_VALIDATION.length();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.equals(EMPTY);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isFind(String input) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(FIND);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 82
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Storage class serves to save users\u0027 task lists to local machines\u0027 disk"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * so that the previous run\u0027s list will be available to users for reference."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    //public static String home \u003d System.getProperty(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static final String home \u003d \"data\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Retrieves stored tasks data from storage and print it for the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void read() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            File storage \u003d new File(home);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\"I am sorry, but the folder does not exist yet.\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        \"Let me create one for you now :).\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                if (storage.mkdir()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    System.out.println(\"Folder is created\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    System.out.println(\"Folder cannot be created\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            File myFile \u003d path.toFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (!myFile.createNewFile()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                Scanner sc \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    String item \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    System.out.println(item);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\"All items successfully shown\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\"I am sorry, but the file does not exist yet.\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        \"Please create one.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            //throw e;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Writes(stores) user data to hard disk."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param newTaskStorage the array list to store all tasks of the user"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void write(ArrayList\u003cTask\u003e newTaskStorage) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path.toFile());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            for (Task task : newTaskStorage) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                String[] formatter \u003d task.toString().split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                fw.write(formatter[0] + \" \" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        formatter[1] + \" \" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        (formatter.length \u003e 2 ? formatter[2] : \"\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Task class is the subclass of Deadline, Event and Todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * thus it holds common methods and constructors for these classes."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a task with the given description string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes the task content"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a task with the given description and completion status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes the task content"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      the boolean value that indicates the completion status of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Gets the completion status icon : tick or cross."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return the string that represents the completion status"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs tasks of the same type as the object calling this method"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * with a \"completed\" status."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return the completed task with same description and type"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (this instanceof ToDo) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new ToDo(this.description, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Event(this.description, ((Event) this).at, true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Deadline(this.description, ((Deadline) this).by, true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Task(this.description, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The overridden toString() method to print out the desired task format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of a task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 70
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * TaskList class is a specific class that contains the task storage, a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * static variable to collect user inputs, and manipulates it accordingly."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The arraylist to store all user input tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Calls the modify function to write to taskStorage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input  description string of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param type   a string to indicate the type/class of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param byOrAt a date and time object to specify the timing of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static String write(String input, String type, DateAndTime byOrAt) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return modify(input, type, byOrAt, taskStorage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper function to write to the taskStorage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input       description string of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param type        a string to indicate the type/class of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param byOrAt      a date and time object to specify the timing of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param taskStorage the static class variable for storage purpose"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static String modify(String input, String type, DateAndTime byOrAt, ArrayList\u003cTask\u003e taskStorage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Task toBeAdded;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new ToDo(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new Deadline(input, byOrAt);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new Event(input, byOrAt);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + toBeAdded + \"\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \"Now you have \" + taskStorage.size() + \" tasks in the list.\" ;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Reads(prints) tasks stored in taskStorage."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static String read() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String starter \u003d \"Here are the tasks in your list:\\n\" ;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for (int i \u003d 0; i \u003c taskStorage.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            content.append(i + 1).append(\".\").append(taskStorage.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return starter + content;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Deletes a task at a specified position in taskStorage."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param ref an integer to specify the position/numbering of the task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static String delete(int ref) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (ref \u003e\u003d taskStorage.size()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"I am afraid that it is not possible to delete an unknown task.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            assert taskStorage.get(ref) !\u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            Task temp \u003d taskStorage.get(ref);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.remove(ref);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"Noted. I\u0027ve removed this task:\\n \" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    temp + \"\\nNow you have \" + taskStorage.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Finds all tasks in taskStorage which contains the specified feature."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param feature a string description of the tasks to find"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static String find(String feature) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String starter \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for (Task task : TaskList.taskStorage) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (task.description.contains(feature)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                content.append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return starter + content;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static String remind(){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        ArrayList\u003cDeadline\u003e mostUrgent \u003d new ArrayList\u003c\u003e(0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for(Task task : TaskList.taskStorage){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if(task instanceof Deadline){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                 if(mostUrgent.isEmpty()){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                     mostUrgent.add((Deadline) task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                 if(((Deadline) task).compareTo(mostUrgent.get(0)) \u003c 0){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                     mostUrgent.remove(0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                     mostUrgent.add((Deadline) task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                 if(((Deadline) task).compareTo(mostUrgent.get(0)) \u003d\u003d 0){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                     mostUrgent.add((Deadline) task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(mostUrgent.isEmpty()){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"Nice ! No upcoming deadline :). \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String starter \u003d \"Your nearest deadline is: \\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for (Deadline deadline : mostUrgent) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            content.append(deadline).append(\"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return starter + content;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 140
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Todo class is a subclass of task, it holds"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * information of a todo task without date and time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a todo task with the specified description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description a string that describes the task content"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a todo task with the given description and completion status."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description a string that describes the task content"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      a boolean value to describe the completion status"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Overridden toString() method to print out the desired format of a todo task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Ui class is the main handler of users inputs,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Ui takes in user inputs, categorises it and stores it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String correctedInput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private DateAndTime byOrAt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a ui object to handle user inputs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the Bye instruction."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string to say bye to the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealBye(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \" Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the List instruction."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return loads and returns all tasks stored"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealList(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return TaskList.read();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the Find instruction."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input a string, which is text entered by the user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return all tasks containing the string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealFind(String input){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return TaskList.find(input.substring(Parser.FIND.length() + 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the Done instruction."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input a string, which is text entered by the user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a task, which now has a completion state of a tick"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealDone(String input){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        int ref \u003d Integer.parseInt(Character.toString("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                input.charAt(Parser.DONE_VALID.length() - 1))) - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (TaskList.taskStorage.get(ref) \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"I am afraid that it is not possible\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    \"to do an unknown task.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        assert TaskList.taskStorage.get(ref) !\u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Task done \u003d TaskList.taskStorage.get(ref).markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        TaskList.taskStorage.remove(TaskList.taskStorage.get(ref));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        TaskList.taskStorage.add(ref, done);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return (\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                + TaskList.taskStorage.get(ref));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the Delete instruction."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input a string, which is text entered by the user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of a task, which now has a completion state of a tick"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealDelete(String input){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        int ref \u003d Integer.parseInt(Character.toString("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                input.charAt(Parser.DEL_VALID.length() - 1))) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (TaskList.taskStorage.get(ref) \u003d\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"I am afraid that it is not possible\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    \"to delete an unknown task.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        assert TaskList.taskStorage.get(ref) !\u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        TaskList.delete(ref);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return TaskList.delete(ref);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the Todo instruction."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input a string, which is text entered by the user"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of a Todo task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealTodo(String input){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (!parser.isValidTodo(input)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"The description of a todo cannot be empty lah.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        description \u003d input.substring(Parser.TODO_VALIDATION.length(),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                Parser.TODO_VALIDATION.length() + 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (parser.isEmptyDescription(description)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        correctedInput \u003d input.substring(Parser.TODO_VALIDATION.length());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        byOrAt \u003d new DateAndTime();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        TaskList.write(correctedInput, Parser.TODO, byOrAt);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return TaskList.write(correctedInput, Parser.TODO, byOrAt);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the Event instruction."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input a string, which is text entered by the user"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of an Event task"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealEvent(String input){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (!parser.isValidEvent(input)){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"The description of an event cannot be empty lah.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        description \u003d input.substring(Parser.EVT_VALIDATION.length(),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                Parser.EVT_VALIDATION.length() + 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(parser.isEmptyDescription(description)){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"The description of an event cannot be empty lah.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String dateAndTime \u003d input.substring(input.indexOf(\"/\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                + Parser.BYORAT.length());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        assert (dateAndTime.contains(\"-\") \u0026\u0026 dateAndTime.contains(\":\"))"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                : \"Invalid date or time format \\n please follow this: 2020-02-02 18:00\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        byOrAt \u003d new DateAndTime(dateAndTime);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        correctedInput \u003d input.substring(Parser.EVT_VALIDATION.length());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        TaskList.write(correctedInput, Parser.EVT, byOrAt);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return TaskList.write(correctedInput, Parser.EVT, byOrAt);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper which deals with the Deadline instruction."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input a string, which is text entered by the user"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of a Deadline task"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealDeadline(String input){"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(!parser.isValidDeadline(input)){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"The description of a deadline cannot be empty lah.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        description \u003d input.substring(Parser.DDL_VALIDATION.length(),"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                Parser.DDL_VALIDATION.length() + 1);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (parser.isEmptyDescription(description)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return (\"The description of a deadline cannot be empty lah.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String dateAndTime \u003d input.substring(input.indexOf(\"/\")"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                + Parser.BYORAT.length());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        assert (dateAndTime.contains(\"-\") \u0026\u0026 dateAndTime.contains(\":\"))"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                : \"Invalid date or time format \\n please follow this: 2020-02-02 18:00\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        byOrAt \u003d new DateAndTime(dateAndTime);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        correctedInput \u003d input.substring(Parser.DDL_VALIDATION.length());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        TaskList.write(correctedInput, Parser.DDL, byOrAt);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return TaskList.write(correctedInput, Parser.DDL, byOrAt);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private String dealReminder(){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return TaskList.remind();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Workhorse of the project, deal with all possible instructions exactly as desired."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input string text from the user"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representing results of the instruction"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String deal(String input) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Storage.read();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (parser.isReminder(input)){"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealReminder();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (parser.isBye(input)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealBye();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (parser.isList(input)) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealList();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (parser.isFind(input)) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealFind(input);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(parser.isDone(input)){"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealDone(input);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(parser.isDelete(input)){"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealDelete(input);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(parser.isTodo(input)){"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealTodo(input);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(parser.isEvent(input)){"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealEvent(input);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if(parser.isDeadline(input)){"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return dealDeadline(input);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return (\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 239
    }
  },
  {
    "path": "src/main/java/Window.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Window extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Start the program as desired."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param stage an anchoring point for the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Window.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 34
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.control.ColorPicker?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" text\u003d\"Enter your problems here...\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send !\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                  \u003cColorPicker /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "               \u003c/children\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 22
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void parser_invalidArgument(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            Parser pr \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            String input \u003d \"deadline \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            assertFalse(pr.isValidDeadline(input));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 18
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void taskList_emptyDescription() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            TaskList.taskStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            TaskList.write(\"borrow book\", \"todo\", new DateAndTime());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            ArrayList\u003cTask\u003e exp \u003d new ArrayList\u003c\u003e(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            exp.add(new ToDo(\"borrow book\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            assertEquals(TaskList.taskStorage.toString(), exp.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "deadline askquestion /by Monday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "todo borrowbook"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "event teammeeting /at Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if ! ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "  )"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 6,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 6
    }
  }
]
