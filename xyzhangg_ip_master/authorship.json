[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    AddCommand(Task task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        taskList.addNewTask(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        storage.updateTasks(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui.showAddedTask(task, taskList.getListLength());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String saveAsString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"D\" + super.saveAsString() + \" | \" + by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 22
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        Task task \u003d taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        storage.updateTasks(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui.showDeleteTask(task, taskList.getListLength());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 15
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        Task task \u003d taskList.doneTask(taskIndex);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        storage.updateTasks(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui.showDoneTask(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public static String filePath \u003d \"myTaskList.txt\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                ui.showDivider(); "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                ui.showDivider();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 15
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    EmptyDescriptionException(String task) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! The description of a \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String saveAsString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"E\" + super.saveAsString() + \" | \" + at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 22
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        storage.updateTasks(taskList);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 13
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final String s;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    FindCommand(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        String matchingTasks \u003d taskList.findTask(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui.showMatchingTask(matchingTasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 14
    }
  },
  {
    "path": "src/main/java/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class InvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    InvalidDateTimeException(String task) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! Please enter a valid date/time for a \" + task + \".\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 6
    }
  },
  {
    "path": "src/main/java/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    InvalidTaskIndexException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! Please enter a valid task index to be \" + (command.startsWith(\"done\")"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                ? \"marked as done.\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                : \"deleted.\"));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 8
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ui.showTaskList(taskList.toString());"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static int getTaskIndex(String input, String command) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        int indexPosition \u003d command.equals(\"done\") ? 5 : command.equals(\"delete\") ? 7 : 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(command) || input.equals(command + \" \")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new InvalidTaskIndexException(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(command + \" \") \u0026\u0026 input.length() \u003e indexPosition) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                return Integer.parseInt(input.substring(indexPosition));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new InvalidTaskIndexException(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static DoneCommand done(String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return new DoneCommand(getTaskIndex(input, \"done\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static DeleteCommand delete(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return new DeleteCommand(getTaskIndex(input, \"delete\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static FindCommand find(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"find\") || input.equals(\"find \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new EmptyDescriptionException(\"find\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"find \") \u0026\u0026 input.length() \u003e 5) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static AddCommand newTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"todo\") || input.equals(\"todo \")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"todo \") \u0026\u0026 input.length() \u003e 5) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            Todo newTodo \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return new AddCommand(newTodo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static AddCommand newDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"deadline\") || input.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"deadline \") \u0026\u0026 input.length() \u003e 9) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (!input.contains(\" /by \")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new InvalidDateTimeException(\"deadline\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                int index \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String description \u003d input.substring(9, index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String date \u003d input.substring(index + 5);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    LocalDate deadlineDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    return new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    throw new InvalidDateTimeException(\"deadline\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static AddCommand newEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"event\") || input.equals(\"event \")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"event \") \u0026\u0026 input.length() \u003e 6) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (!input.contains(\" /at \")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new InvalidDateTimeException(\"event\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                int index \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String description \u003d input.substring(6, index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String date \u003d input.substring(index + 5);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    LocalDate eventDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    Event newEvent \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    return new AddCommand(newEvent);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    throw new InvalidDateTimeException(\"event\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.equals(\"list\") || input.equals(\"list \")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                return done(input);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                return delete(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                return find(input);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                return newTodo(input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                return newDeadline(input);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                return newEvent(input);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 121
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * Reads the tasks from the local storage file and creates a list of Tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @return a list of Tasks stored in the local storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @throws DukeException if the local storage file cannot be created or loaded."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            //noinspection ResultOfMethodCallIgnored"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There was an error creating a save file.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            Scanner fileReader \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String s \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                Task task \u003d getTask(s);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There was an error while loading the file\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * Converts a string into a Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @param s string description of a Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @return a Task described by the input string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @throws DukeException if input string is in the wrong format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private Task getTask(String s) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            Task currentTask;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (s.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                currentTask \u003d new Todo(s.substring(8));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                int index \u003d s.lastIndexOf(\" |\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String dateTime \u003d s.substring(index + 3);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                if (s.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    currentTask \u003d new Deadline(s.substring(8, index), LocalDate.parse(dateTime));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } else if (s.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    currentTask \u003d new Event(s.substring(8, index), LocalDate.parse(dateTime));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (s.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                currentTask.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return currentTask;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * Updates the local storage file and stores the list of Tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @param taskList list of Tasks to be stored."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @throws DukeException if local storage file cannot be accessed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void updateTasks(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            for (Task t : taskList.getMyTaskList()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                fileWriter.write(t.saveAsString() + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Unable to update tasks.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 98
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String saveAsString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final ArrayList\u003cTask\u003e myTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        myTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.myTaskList \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    ArrayList\u003cTask\u003e getMyTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return myTaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    int getListLength() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return myTaskList.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void addNewTask(Task newTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        myTaskList.add(newTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * Marks a task as done. Throws an exception if the task index is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @param taskIndex index of task to be marked as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @return the done task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @throws DukeException if index is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Task doneTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            Task temp \u003d myTaskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            temp.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new InvalidTaskIndexException(\"done\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * Deletes a task from the list. Throws an exception if the task index is invalid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @param taskIndex index of task to be deleted."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @return the deleted task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @throws DukeException if index is invalid."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Task deleteTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            Task temp \u003d myTaskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            myTaskList.remove(temp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new InvalidTaskIndexException(\"delete\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    String findTask(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        for (Task t : myTaskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (t.description.contains(input)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return new TaskList(tasks).toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * Finds all the tasks with description that contains the input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @param input the required keyword to be searched for."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     * @return a string describing the list of tasks that contains the input in their description."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    String findTask(String input) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        for (Task t : myTaskList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (t.description.contains(input)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return new TaskList(tasks).toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (myTaskList.isEmpty()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            StringBuilder taskListString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            for (int i \u003d 1; i \u003c myTaskList.size() + 1; i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                taskListString.append(\"     \").append(i).append(\".\").append(myTaskList.get(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            taskListString.delete(taskListString.length() - 1, taskListString.length());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            return taskListString.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 101
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String saveAsString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"T\" + super.saveAsString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static final String logo \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static final String DIVIDER \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showDivider() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showError(DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke!\\n\" + \"     What can I do for you?\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showGoodbye() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showTaskList(String taskListString) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\\n\" +  taskListString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showDoneTask(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n       \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showDeleteTask(Task task, int listLength) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\\n       \" + task +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                \"\\n     Now you have \" + listLength + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showAddedTask(Task task, int listLength) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\\n       \" + task +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                \"\\n     Now you have \" + listLength + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    void showMatchingTask(String taskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\\n\" + taskList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 65
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import static org.junit.Assert.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void doneTask_success() throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        tasks.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        assertTrue(taskList.doneTask(1).isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void doneTask_taskIndexOutOfBounds_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        tasks.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            assertTrue(taskList.doneTask(2).isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    \"☹ OOPS!!! Please enter a valid task index to be marked as done.\", "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void deleteTask_success() throws Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        tasks.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        assertTrue(taskList.getMyTaskList().isEmpty());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void deleteTask_taskIndexOutOfBounds_exceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        tasks.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            taskList.deleteTask(2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    \"☹ OOPS!!! Please enter a valid task index to be deleted.\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        tasks.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        assertEquals(\"     1.[T][✘] read book\", taskList.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 67
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 2,
      "-": 20
    }
  }
]
