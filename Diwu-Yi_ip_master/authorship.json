[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "[T][âœ˜] book "
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 1
    }
  },
  {
    "path": "src/main/java/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Customised Data and Time class to store and print out appropriate"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * dates and times for tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private final LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Construct an date and time object for tasks without specified time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DateAndTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Construct a date and time object for storage by Duke for tasks with specified timing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param dateAndTime A string passed to Duke by the user containing time information"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DateAndTime(String dateAndTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String date \u003d dateAndTime.substring(0, \"2020-02-02\".length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        String time \u003d dateAndTime.substring(\"2020-02-02\".length() + 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.time \u003d LocalTime.parse(time);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Overridden toString() method to print out the desired format of date and time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return A string that represents the date and time stored"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return date.getYear() + \" \" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                date.getMonth() + \" \" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                date.getDayOfMonth() + \" \" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                date.getDayOfWeek() + \" \" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                time.toString() + \"hr\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 51
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Deadline class is a subclass of Task which holds information for this type of tasks with"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * a date and time (which is the deadline :) )."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected DateAndTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a Deadline task with a description and a date and time specified."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that contains the description of a deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param by          the date and time object which specifies the timing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Deadline(String description, DateAndTime by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a Deadline task with a description, a date and time and a specified status"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * done or not done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that contains the description of a deadline task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param by          the date and time object which specifies the timing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      the boolean to indicated if the task is completed or not"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Deadline(String description, DateAndTime by, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Overridden toString() method to print out a deadline task in the right format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string that represents a deadline task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 43
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Entry point of the programme, Duke is used as it is the project\u0027s name."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The main method which handles users and calls relevant methods:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Storage is called to print out stored tasks on the hard disk from the previous run,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Ui is called to handle user inputs/ commands specifically."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param args standard format"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                \"People call me Duke the All-Knowing ,\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                \"ask me anything by typing a line.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Storage.read();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        ui.deal();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 21,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Exceptions that may occur during users\u0027 entering arguments and commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Produces an exception with a specified message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param message the message to be sent should this exception is produced"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Produces an exception with a specified message and the cause for it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param message the message to be sent should this exception is produced"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param cause   the cause of the exception"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The overridden toString() method that prints out the exception produced."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return the string message as a representation of the error"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 35
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Event class is a subclass of Task which holds information of an Event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * with an occuring time and date."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected DateAndTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs an Event task with the specified description and the timing."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes that the event is"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param at          the date and time of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Event(String description, DateAndTime at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs an Event with the specified description, timing and the status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes that the event is"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param at          the date and time of the event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      the boolean to indicate the whether the event is completed or not"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Event(String description, DateAndTime at, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The overridden toString() method to print out the correct representation of an event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of an event object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 42
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * A class which stores key words of commands and various comparing methods"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * used for checking and validation."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DEL \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DONE_VALID \u003d \"done 1\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DEL_VALID \u003d \"delete 1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String TODO_VALIDATION \u003d \"todo \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String EVT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String EVT_VALIDATION \u003d \"event \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DDL \u003d \"deadline\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String DDL_VALIDATION \u003d \"deadline \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String EMPTY \u003d \" \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String BYORAT \u003d \"/by \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public final static String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a Parser object to tackle the user inputs/commands."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isBye(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.equals(BYE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isList(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.equals(LIST);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isDone(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(DONE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isDelete(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(DEL);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isTodo(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(TODO);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isValidTodo(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.length() \u003e TODO_VALIDATION.length();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isEvent(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(EVT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isValidEvent(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.length() \u003e EVT_VALIDATION.length();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isDeadline(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(DDL);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isValidDeadline(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.length() \u003e DDL_VALIDATION.length();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.equals(EMPTY);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public boolean isFind(String input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return input.contains(FIND);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 77
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Storage class serves to save users\u0027 task lists to local machines\u0027 disk"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * so that the previous run\u0027s list will be available to users for reference."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    //public static String home \u003d System.getProperty(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static final String home \u003d \"data\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Retrieves stored tasks data from storage and print it for the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void read() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            File storage \u003d new File(home);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\"I am sorry, but the folder does not exist yet.\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        \"Let me create one for you now :).\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                if (storage.mkdir()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    System.out.println(\"Folder is created\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    System.out.println(\"Folder cannot be created\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            File myFile \u003d path.toFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (!myFile.createNewFile()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                Scanner sc \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    String item \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    System.out.println(item);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\"All items successfully shown\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\"I am sorry, but the file does not exist yet.\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        \"Please create one.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            //throw e;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Writes(stores) user data to hard disk."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param newTaskStorage the array list to store all tasks of the user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void write(ArrayList\u003cTask\u003e newTaskStorage) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path.toFile());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            for (Task task : newTaskStorage) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                String[] formatter \u003d task.toString().split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                fw.write(formatter[0] + \" \" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        formatter[1] + \" \" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        (formatter.length \u003e 2 ? formatter[2] : \"\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 88
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Task class is the subclass of Deadline, Event and Todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * thus it holds common methods and constructors for these classes."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a task with the given description string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes the task content"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a task with the given description and completion status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description the string that describes the task content"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      the boolean value that indicates the completion status of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Gets the completion status icon : tick or cross."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return the string that represents the completion status"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs tasks of the same type as the object calling this method"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * with a \"completed\" status."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return the completed task with same description and type"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (this instanceof ToDo) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new ToDo(this.description, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Event(this.description, ((Event) this).at, true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Deadline(this.description, ((Deadline) this).by, true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            return new Task(this.description, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The overridden toString() method to print out the desired task format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of a task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 70
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * TaskList class is a specific class that contains the task storage, a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * static variable to collect user inputs, and manipulates it accordingly."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * The arraylist to store all user input tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Calls the modify function to write to taskStorage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input  description string of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param type   a string to indicate the type/class of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param byOrAt a date and time object to specify the timing of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void write(String input, String type, DateAndTime byOrAt) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        modify(input, type, byOrAt, taskStorage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * A helper function to write to the taskStorage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param input       description string of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param type        a string to indicate the type/class of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param byOrAt      a date and time object to specify the timing of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param taskStorage the static class variable for storage purpose"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private static void modify(String input, String type, DateAndTime byOrAt, ArrayList\u003cTask\u003e taskStorage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        Task toBeAdded;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new ToDo(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new Deadline(input, byOrAt);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            toBeAdded \u003d new Event(input, byOrAt);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.add(toBeAdded);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + toBeAdded);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Now you have \" + taskStorage.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Reads(prints) tasks stored in taskStorage."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void read() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for (int i \u003d 0; i \u003c taskStorage.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println((i + 1) + \".\" + taskStorage.get(i));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Deletes a task at a specified position in taskStorage."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param ref an integer to specify the position/numbering of the task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void delete(int ref) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        if (ref \u003e\u003d taskStorage.size()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(\"I am afraid that it is not possible to delete an unknown task.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            Task temp \u003d taskStorage.get(ref);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            taskStorage.remove(ref);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\\n \" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    temp + \"\\nNow you have \" + taskStorage.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Finds all tasks in taskStorage which contains the specified feature."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param feature a string description of the tasks to find"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public static void find(String feature) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for (Task task : TaskList.taskStorage) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (task.description.contains(feature)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 93
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Todo class is a subclass of task, it holds"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * information of a todo task without date and time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a todo task with the specified description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description a string that describes the task content"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a todo task with the given description and completion status."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param description a string that describes the task content"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @param isDone      a boolean value to describe the completion status"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Overridden toString() method to print out the desired format of a todo task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * @return a string representation of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Ui class is the main processor for users inputs,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " * Ui takes in user inputs, categorises it and stores it."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Constructs a ui object to handle user inputs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Work horse of the Duke project, handles all possible user inputs exactly."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * Currently, the designing of deal() function is not in line with our 2103 coding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     * standards, I will continue to work on it :)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void deal() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        for (int i \u003d 0; i \u003c 100000; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            String input \u003d this.scanner.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            if (!parser.isBye(input)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                if (!parser.isList(input) \u0026\u0026 !parser.isFind(input)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    if (!parser.isDone(input) \u0026\u0026 !parser.isDelete(input)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        if (parser.isTodo(input) || parser.isEvent(input)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                || parser.isDeadline(input)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            String description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            String correctedInput;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            DateAndTime byOrAt;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            if (parser.isTodo(input)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                if (parser.isValidTodo(input)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    description \u003d input.substring(Parser.TODO_VALIDATION.length(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            Parser.TODO_VALIDATION.length() + 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    if (!parser.isEmptyDescription(description)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        correctedInput \u003d input.substring(Parser.TODO_VALIDATION.length());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        byOrAt \u003d new DateAndTime();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        TaskList.write(correctedInput, Parser.TODO, byOrAt);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        System.out.println("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                new DukeException("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                        \"OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    System.out.println("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            new DukeException("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                    \"The description of a todo cannot be empty lah.\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                String dateAndTime \u003d input.substring(input.indexOf(\"/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        + Parser.BYORAT.length());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                if (parser.isEvent(input)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    if (parser.isValidEvent(input)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        description \u003d input.substring(Parser.EVT_VALIDATION.length(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                Parser.EVT_VALIDATION.length() + 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        if (!parser.isEmptyDescription(description)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            byOrAt \u003d new DateAndTime(dateAndTime);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            correctedInput \u003d input.substring(Parser.EVT_VALIDATION.length());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            TaskList.write(correctedInput, Parser.EVT, byOrAt);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            System.out.println(new DukeException("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                    \"The description of an event cannot be empty lah.\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        System.out.println(new DukeException("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                \"The description of an event cannot be empty lah.\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    if (parser.isValidDeadline(input)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        description \u003d input.substring(Parser.DDL_VALIDATION.length(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                Parser.DDL_VALIDATION.length() + 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        if (!parser.isEmptyDescription(description)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            byOrAt \u003d new DateAndTime(dateAndTime);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            correctedInput \u003d input.substring(Parser.DDL_VALIDATION.length());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            TaskList.write(correctedInput, Parser.DDL, byOrAt);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            System.out.println("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                    new DukeException("
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                            \"The description of a deadline cannot be empty lah.\")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                            );"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        System.out.println("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                new DukeException("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                                        \"The description of a deadline cannot be empty lah.\")"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        );"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            System.out.println("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            );"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        if (parser.isDone(input)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            int ref \u003d Integer.parseInt(Character.toString("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    input.charAt(Parser.DONE_VALID.length() - 1))) - 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            if (TaskList.taskStorage.get(ref) !\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                Task done \u003d TaskList.taskStorage.get(ref).markAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                TaskList.taskStorage.remove(TaskList.taskStorage.get(ref));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                //^here"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                TaskList.taskStorage.add(ref, done);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        + TaskList.taskStorage.get(ref));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                System.out.println(\"I am afraid that it is not possible\" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                        \"to do an unknown task.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            int ref \u003d Integer.parseInt(Character.toString("
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                                    input.charAt(Parser.DEL_VALID.length() - 1))) - 1;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            TaskList.delete(ref);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                            Storage.write(TaskList.taskStorage);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    if (!parser.isFind(input)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        TaskList.read();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                        TaskList.find(input.substring(Parser.FIND.length() + 1));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                this.scanner.close();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 191
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void parser_invalidArgument(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            Parser pr \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            String input \u003d \"deadline \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            assertFalse(pr.isValidDeadline(input));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    public void taskList_emptyDescription() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            TaskList.taskStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            TaskList.write(\"borrow book\", \"todo\", new DateAndTime());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            ArrayList\u003cTask\u003e exp \u003d new ArrayList\u003c\u003e(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            exp.add(new ToDo(\"borrow book\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            assertEquals(TaskList.taskStorage.toString(), exp.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "deadline askquestion /by Monday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "todo borrowbook"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "event teammeeting /at Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "if ! ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "  )"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 6,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Diwu-Yi"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "Diwu-Yi": 6
    }
  }
]
