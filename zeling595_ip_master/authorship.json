[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "zeling595": 18
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "D | 0 | parents meeting | Dec 25 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": "E | 0 | project meeting | Oct 15 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "T | 0 | borrow book"
      }
    ],
    "authorContributionMap": {
      "zeling595": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "# Moomin User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Moomin is your personalized task manager. He can help you organize your tasks and make your life happier."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "![Image of Moomin](./Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "To use Moomin as your personal assistant, simply compile and run the Duke.java file at src/main/java/duke/Duke.java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "You can also build the application and run it using gradle."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "A packaged jar file has been attached in the latest stable release. Feel free to download it and interact with Moomin by type the command java -jar ip.jar"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 1.`list` - List out all current tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Shows a list of all tasks in the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `list`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": " 1.[T][✘] borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": " 2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": " 3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 2.`todo` - Add a todo task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Add a todo task with specified content to the task list. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `todo borrow book`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 3.`deadline` - Add a deadline task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Add a deadline task with specified content and date by which the task needs to be completed to the task list. "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `deadline TASK_DESCRIPTION /by YYYY-MM-DD`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `deadline return book /by 2020-09-25`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "[D][✘] return book (by: Sep 25 2020)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 4.`event` - Add an event task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Add an event task with specified content and date of the event to the task list. "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `event TASK_DESCRIPTION /at YYYY-MM-DD`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `event project meeting /at 2020-12-20`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "[E][✘] project meeting (at: Dec 20 2020)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 5.`done` - Mark the task as done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Mark a specific task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `done TASK_NO`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `done 1`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeling595"
        },
        "content": "  [✓] borrow book"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 6.`delete` - Delete a task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Delete a specific task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `delete TASK_NO`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `delete 1`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeling595"
        },
        "content": "  [✓] return book"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 7.`find` - Find a task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Find a task that contains a specific keyword."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `find SEARCH_KEYWORD`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `find friend`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeling595"
        },
        "content": "1.[D][✘] meet friend (by: Sep 24 2020)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 8.`edit` - Edit a task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Edit the date, description of a task or undo a task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeling595"
        },
        "content": "edit 1 date 2020-12-15"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeling595"
        },
        "content": "edit 1 task borrow books"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeling595"
        },
        "content": "edit 1 undo"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `edit TASK_NO data YYYY-MM-DD`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `edit 1 date 2020-12-15`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Date is updated successfully:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeling595"
        },
        "content": "  [D][✘] meet friend (by: Dec 25 2020)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `edit TASK_NO task NEW_DESCRIPTION`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `edit 1 task parents meeting`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Description is updated successfully:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zeling595"
        },
        "content": "  [D][✘] parents meeting (by: Dec 25 2020)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `edit TASK_NO undo`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `edit 1 undo`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zeling595"
        },
        "content": "The following task is marked as undone:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zeling595"
        },
        "content": "  [D][✘] parents meeting (by: Dec 25 2020)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zeling595"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### 9.`bye` - Exit the application"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Exit the application. Data will be saved to storage."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Example: `bye`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zeling595"
        },
        "content": "### Author"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zeling595"
        },
        "content": "Long Zeling"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "zeling595": 146
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javax.swing.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the main Duke who acts as the user\u0027s personal assistant."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.storage \u003d new Storage(this.tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getSavedFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String savedFiles \u003d storage.readFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return savedFiles;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Run Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        storage.readFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Entry point of the whole program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        // return response here"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            response \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": "//            ui.showLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "//            response \u003d response + \"reached finally block\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "zeling595": 76
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Encapsulates all exceptions that are related to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    // consider exception when 2022-9-15 is given instead of 2022-09-15"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    // index out of bound exception"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 12
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.controllers.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 32
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Used for parsing strings for Duke project."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns corresponding command specified in the input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param str The input string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @throws DukeException If the input is incomplete."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static Command parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String[] split1 \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String commandWord \u003d split1[0].toLowerCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (split1.length \u003c 2 || split1[1].equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // one word command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (commandWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"Please tell me the task number that you have completed.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"date\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"Please provide a date.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"Please tell me the task number that you want to delete.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"edit\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"Please tell me which task you want to edit\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // more than one word command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String commandBody \u003d split1[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (commandWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                // create done command: \"done 1\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return new DoneCommand(Integer.parseInt(commandBody));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                // delete 2"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(commandBody));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"date\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                // create date command: \"date 2020-09-24\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                LocalDate time \u003d LocalDate.parse(commandBody);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return new DateCommand(time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return new FindCommand(commandBody);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (commandWord.equals(\"edit\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String parts[] \u003d commandBody.split(\" \", 3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                int taskNo \u003d Integer.parseInt(parts[0].trim());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String type \u003d parts[1].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                if (parts.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    return new UpdateCommand(taskNo, type);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    String content \u003d parts[2];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    return new UpdateCommand(taskNo, type, content);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                // add command"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                Task newTask \u003d Parser.parseTask(str);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return new AddCommand(newTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns a task corresponding to the task string from storage file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param taskStr The task string from storage file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static Task parseTaskFromStorage(String taskStr) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task savedTask;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String[] split \u003d taskStr.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description \u003d split[2];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        boolean isDone \u003d (Integer.parseInt(split[1]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (split[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // create a todo"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            savedTask \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else if (split[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // create a deadline"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String dateStr \u003d split[3];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateStr, formatter);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            savedTask \u003d new Deadline(description, isDone, date);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // create an event"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String dateStr \u003d split[3];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateStr, formatter);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            savedTask \u003d new Event(description, isDone, date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return savedTask;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns a task corresponding to the task string from command line input."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param taskStr The task string from storage file."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static Task parseTask(String taskStr) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String[] splits \u003d taskStr.split(\" \", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String taskType \u003d splits[0].toLowerCase();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String taskBody \u003d splits[1];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // todo borrow book"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            newTask \u003d new Todo(taskBody.trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // deadline return book /by 2020-12-15"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (taskBody.contains(\"/by\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String[] splits1 \u003d taskBody.split(\"/by\", 2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String description \u003d splits1[0].trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String timeStr \u003d Parser.standardizeTimeString(splits1[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                LocalDate time \u003d LocalDate.parse(timeStr);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                newTask \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (taskBody.contains(\"/at\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"The format is wrong. Please use \\\"by/\\\"!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"Please provide a time for a deadline :D\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // event project meeting /at 2020-10-15"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (taskBody.contains(\"/at\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String[] splits1 \u003d taskBody.split(\"/at\", 2);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String description \u003d splits1[0].trim();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String timeStr \u003d Parser.standardizeTimeString(splits1[1]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                LocalDate time \u003d LocalDate.parse(timeStr);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                newTask \u003d new Event(description, time);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (taskBody.contains(\"/by\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"The format is wrong. Please use \\\"at/\\\"!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"Please provide a time for an event :D\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static String standardizeTimeString(String timeStr) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return timeStr.replaceAll(\" \", \"\").replaceAll(\"/\", \"-\").trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 160
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents a storage. Allow Duke to read and write to local disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private static final String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Storage(TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Reads files from local disk and print out the content."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String readFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        // load the file first"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        File directory \u003d new File(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String savedFiles;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (f.createNewFile()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                // file does not exist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                savedFiles \u003d \"A data file has been created for you\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                // file exist"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                savedFiles \u003d \"Here are your existing tasks\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    String taskStr \u003d s.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    savedFiles \u003d savedFiles + taskStr + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    // load the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    Task savedTask \u003d Parser.parseTaskFromStorage(taskStr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    taskList.getTasks().add(savedTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            savedFiles \u003d savedFiles + \"What do you want to do today?\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            savedFiles \u003d e.getMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return savedFiles;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Saves tasks to local disk."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param taskList The task list that is to be saved."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void saveTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (taskList.getTasks().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            writeToFile(FILE_PATH, taskList.getTasks().get(0).getData());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            for (int i \u003d 1; i \u003c taskList.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String taskData \u003d taskList.getTasks().get(i).getData();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                appendToFile(FILE_PATH, taskData);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Append text to local file at filePath."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param filePath The relative path of the file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param textToAdd The text to be added."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void appendToFile(String filePath, String textToAdd) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fw.write(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Write text to local file at filePath. This overwrites the whole file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param filePath The relative path of the file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param textToAdd The text to be added."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void writeToFile(String filePath, String textToAdd) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fw.write(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 102
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents a list of tasks. A task list supports various modifications of the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private void checkTaskList(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            throw new DukeException(Ui.EMPTY_TASK_LIST_MSG);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (taskNo \u003e tasks.size()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            throw new DukeException(Ui.INVALID_TASK_NO_MSG);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private void checkTaskList() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            throw new DukeException(Ui.EMPTY_TASK_LIST_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Lists out all the tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert tasks.size() \u003e\u003d 0 : \"Number of tasks cannot be negative\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String response \u003d Ui.LIST_TASK_MSG + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                int taskNo \u003d i + 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d response + taskNo + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Lists out all the tasks on a specific date."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param date The specific date."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String listTasksOn(LocalDate date) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                LocalDate taskDate \u003d task.getDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                if (taskDate !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    if (taskDate.isEqual(date)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String response;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d \"Here are the tasks happening on: \" + date.format(formatter) + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    int taskNo \u003d i + 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    response \u003d response + taskNo + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d \"You don\u0027t have anything on: \" + date.format(formatter) + \" :)))\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param taskNo The task number in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String doneTask(int taskNo) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert taskNo \u003e\u003d 0: \"taskNo cannot be negative\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList(taskNo);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Task completedTask \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String response \u003d Ui.DONE_MSG + \"\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    + \" \" + \" \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    + completedTask + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param newTask The new task to add."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String addTask(Task newTask) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert newTask !\u003d null: \"newTask cannot be null\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String response \u003d Ui.ADD_MSG + \"\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + newTask + \"\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Deletes a task on the task list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param taskNo The task number of the to be deleted task on the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String deleteTask(int taskNo) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert taskNo \u003e\u003d 0: \"taskNo cannot be negative\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList(taskNo);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(\"Nothing to delete.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else if (taskNo \u003e tasks.size()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                throw new DukeException(Ui.INVALID_TASK_NO_MSG);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                String response;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                Task taskToBeDeleted \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                tasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d Ui.DELETE_MSG + \"\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \" \" + \" \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + taskToBeDeleted + \"\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Searches tasks that match the keyword."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param keyword The keyword provided by the user."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String searchKeyword(String keyword) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert keyword !\u003d \"\": \"keyword cannot be empty\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String response;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    int taskNo \u003d i + 1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    response \u003d response + taskNo + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d \"You don\u0027t have anything related to \" + \"\\\"\" + keyword + \"\\\"\" + \"\\n\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String updateDate(int taskNo, LocalDate date) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert taskNo \u003e\u003d 0 : \"taskNo cannot be negative\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList(taskNo);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String response;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Task taskToBeUpdated \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            boolean flag \u003d taskToBeUpdated.setDate(date);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            if (flag) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d \"Date is updated successfully\" + \"\\n\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \" \" + \" \""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + taskToBeUpdated + \"\\n\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                response \u003d \"Update is unsuccessful T.T. Todo tasks have no date\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String updateTaskDescription(int taskNo, String content) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert taskNo \u003e\u003d 0 : \"taskNo cannot be negative\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList(taskNo);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String response;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Task taskToBeUpdated \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            taskToBeUpdated.setDescription(content);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            response \u003d \"Description is updated successfully\" + \"\\n\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    + \" \" + \" \""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    + taskToBeUpdated + \"\\n\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String undoTask(int taskNo) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assert taskNo \u003e\u003d 0 : \"taskNo cannot be negative\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            checkTaskList(taskNo);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String response;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Task taskToBeUpdated \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            taskToBeUpdated.undo();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            response \u003d \"The following task is marked as undone:\" + \"\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    + \" \" + \" \""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                    + taskToBeUpdated + \"\\n\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 230
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.security.PublicKey;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Provides user interaction for Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private int lengthOfLine \u003d 55;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    // Messages"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    // Exceptions"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static final String EMPTY_TASK_LIST_MSG \u003d \"You don\u0027t have any tasks.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static final String INVALID_TASK_NO_MSG \u003d \"Please provide a correct task number.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    // Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static final String LIST_TASK_MSG \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static final String DONE_MSG \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static final String ADD_MSG \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static final String DELETE_MSG \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor of Ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.line \u003d getHorizontalLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Outputs a horizontal line."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return An horizontal line in a string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getHorizontalLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        for (int i \u003d 0; i \u003c lengthOfLine; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            line \u003d line + \"-\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Reads command line inputs from the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return The user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @throws DukeException If there is no more input when user press \u0027Enter\u0027."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            throw new DukeException(\"There is no next line\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Prints the graphical representation of Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                \"                 .   ,\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"               .\u0027;_.\u0027;\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"                    _   \\\\\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"             .     (.) (.)--._\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"            .       \\\"   \\\"     `.\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"           .                   :\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"          .           `\\\"-.___.\\\"\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"         .   .         `.\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"         .    .  `.      .\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \",,.      .      ` . `.    .\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"\\\\W;      .         \\\"`     .\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"   `--\u0027    ,    __,..-   \u0027  .\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"          .   .\u0027     `.   `\u0027 ;\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"          `.   `,      `.  .\u0027\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                        + \"            \\\"._.\u0027        `\u0027\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        System.out.println(\"Hello from Moomin\\n\" + logo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        System.out.println(\"I\u0027m your personal assistant.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 96
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the command to add task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for AddCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param newTask The new task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public AddCommand(Task newTask) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"add\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Executes the command to add task to task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param tasks The task list that is involved."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param ui The UI of Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param storage The storage of Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return tasks.addTask(newTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the command given by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    protected String commandName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Command(String commandName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Executes the command. This is an abstract method."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param tasks The task list that is involved."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param ui The UI of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param storage The storage of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @throws DukeException Depends on the actual command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the command to list out tasks on a specific date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for DateCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public DateCommand(LocalDate time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"done\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Executes the command to list out tasks on a specific date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param tasks The task list that is involved."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param ui The UI of Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param storage The storage of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @throws DukeException If there is no date provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return tasks.listTasksOn(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 41
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the command to delete task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private int taskNo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param taskNo The task number of the task to be deleted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public DeleteCommand(int taskNo) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"delete\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Executes the command to delete a task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param tasks The task list that is involved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param ui The UI of Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param storage The storage of Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @throws DukeException If there is the task number does not exist."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return tasks.deleteTask(taskNo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 39
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the command to mark a task as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private int taskNo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor of DoneCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param taskNo The task number of the task to be marked as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public DoneCommand(int taskNo) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"done\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Executes the command to mark a task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param tasks The task list that is involved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param ui The UI of Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param storage The storage of Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return tasks.doneTask(taskNo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        // ui.showDoneMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 38
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the command to exit the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor of ExitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"exit\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Executes the command to exit the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param tasks The task list that is involved."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param ui The UI of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param storage The storage of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 38
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for FindCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param keyword The keyword to be found."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"find\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return tasks.searchKeyword(keyword);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the command to list out all the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor of ListCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"list\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Executes the command to list out tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param tasks The task list that is involved."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param ui The UI of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param storage The storage of Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @throws DukeException If the task list is empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return tasks.listTasks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private int taskNo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public UpdateCommand(int taskNo, String type, String content) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"update\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public UpdateCommand(int taskNo, String type) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(\"update\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        if (type.equals(\"date\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(content);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return tasks.updateDate(taskNo, date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else if (type.equals(\"task\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return tasks.updateTaskDescription(taskNo, content);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else if (type.equals(\"undo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            return tasks.undoTask(taskNo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // invalid type"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            throw new DukeException(\"Invalid Update type\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 48
    }
  },
  {
    "path": "src/main/java/duke/controllers/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Circle clip \u003d new Circle();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private final static double SIZE \u003d 99;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private final static double RADIUS \u003d SIZE / 2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        clip.setRadius(RADIUS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        clip.setCenterX(displayPicture.getX() + RADIUS);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        clip.setCenterY(displayPicture.getY() + RADIUS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        DialogBox userDialog \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        userDialog.dialog.setStyle(\"-fx-background-color: #afeeee\"); // blue"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        userDialog.setStyle(\"-fx-alignment: CENTER_RIGHT\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        userDialog.dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return userDialog;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        db.dialog.setStyle(\"-fx-background-color: #e6e6ff\"); // purple"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        db.setStyle(\"-fx-alignment: CENTER_RIGHT\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        db.dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 78
    }
  },
  {
    "path": "src/main/java/duke/controllers/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Controller for duke.controllers.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/HuGe.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jerry.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        readDukeStorage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private void readDukeStorage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String savedFiles \u003d duke.getSavedFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(savedFiles, dukeImage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 58
    }
  },
  {
    "path": "src/main/java/duke/todo/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents a deadline which is due by a particular day."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param by The date of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Alternative constructor for Deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param isDone The marker whether the task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param by The date of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the date of the deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return the date of the deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean setDate(LocalDate date) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the data representation of the deadline for storage."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return the data representation of the deadline."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"D \" + super.getData() + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 61
    }
  },
  {
    "path": "src/main/java/duke/todo/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents an event happening at a particular time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Alternative constructor for Event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param isDone The marker whether the task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the date of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return the date of the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean setDate(LocalDate date) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.at \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the data representation of the event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return the data representation of the event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"E \" + super.getData() + \" | \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 61
    }
  },
  {
    "path": "src/main/java/duke/todo/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represents the task. A Task consist of a description and a marker of whether it is done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Alternative constructor for Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @param isDone The marker whether the task is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the corresponding status icon depending on whether the task is completed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return A tick if the task is completed and a cross if the task is incomplete."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void undo() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the date of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return null for task of type Task that has no date."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    // return true if set successfully"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public boolean setDate(LocalDate date) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public int getDataStatus() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the data representation of the task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return the data representation of the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"| \" + getDataStatus() + \" | \" + this.description;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 87
    }
  },
  {
    "path": "src/main/java/duke/todo/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke.todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": " * Represent a todo item."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * Returns the date of the todo for storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     * @return the date of todo event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        return \"T \" + super.getData();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 30
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"5.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialogBubble\" stylesheets\u003d\"@stylesheet.css\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zeling595": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.effect.Blend?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter your task here...\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" stylesheets\u003d\"@stylesheet.css\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"chatBox\" stylesheets\u003d\"@stylesheet.css\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "               \u003ceffect\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                  \u003cBlend /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "               \u003c/effect\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zeling595": 23
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void parseTest1() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String input \u003d \"todo borrow book\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Task newTask \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String description \u003d newTask.getDescription();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String expected \u003d \"borrow book\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            assertEquals(expected, description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            // will not be used"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void parseTest2() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String input \u003d \"deadline borrow book /at 2020-20-20\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Task newTask \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String output \u003d e.getMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String expected \u003d \"The format is wrong. Please use \\\"by/\\\"!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            assertEquals(expected, output);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void parseTest3() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String input \u003d \"deadline borrow book\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            Task newTask \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String output \u003d e.getMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            String expected \u003d \"Please provide a time for a deadline :D\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "            assertEquals(expected, output);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void parseTaskFromStorageTest() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String input \u003d \"D | 0 | meet friend | Sep 24 2020\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task newTask \u003d Parser.parseTaskFromStorage(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description \u003d newTask.getDescription();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String expected \u003d \"meet friend\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assertEquals(expected, description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void standardizeTimeStringTest() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String input \u003d \"2000/ 12/ 20\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String output \u003d Parser.standardizeTimeString(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String expected \u003d \"2000-12-20\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 63
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description \u003d \"borrow book\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task newTask \u003d new Task(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String output \u003d tasks.addTask(newTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String expected \u003d Ui.ADD_MSG + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + newTask + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + \"Now you have 1 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void deleteTaskTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description1 \u003d \"borrow book\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task task1 \u003d new Task(description1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description2 \u003d \"water plant\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task task2 \u003d new Task(description2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description3 \u003d \"walk dog\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task task3 \u003d new Task(description3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        tasks.addTask(task1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        tasks.addTask(task2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        tasks.addTask(task3);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String output \u003d tasks.deleteTask(1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String expected \u003d Ui.DELETE_MSG + \"\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + \" \" + \" \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + task1 + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + \"Now you have 2 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void searchKeywordTest() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description1 \u003d \"borrow book\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task task1 \u003d new Task(description1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description2 \u003d \"water plant\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task task2 \u003d new Task(description2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String description3 \u003d \"walk dog\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task task3 \u003d new Task(description3);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        tasks.addTask(task1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        tasks.addTask(task2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        tasks.addTask(task3);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String output \u003d tasks.searchKeyword(\"book\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        String expected \u003d \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeling595"
        },
        "content": "                + \"1.\" + task1 + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 61
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "import duke.todo.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    public void markAsDoneTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        Task task \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assertEquals(\"\\u2718\", task.getStatusIcon()); // cross"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatusIcon()); // tick"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeling595"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeling595"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeling595": 18
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "[T][✘] borrow book[T][✘] borrow book[D][✘] return book (by: Sunday)[T][✘] borrow book[D][✘] return book (by: Sunday)[E][✘] project meeting (at: Mon 2-4pm)[T][✘] borrow book[D][✘] return book (by: Sunday)[E][✘] project meeting (at: Mon 2-4pm)[T][✓] borrow book[D][✘] return book (by: Sunday)[E][✘] project meeting (at: Mon 2-4pm)[T][✓] borrow book[D][✓] return book (by: Sunday)[E][✘] project meeting (at: Mon 2-4pm)[T][✓] borrow book[D][✓] return book (by: Sunday)[E][✘] project meeting (at: Mon 2-4pm)[T][✓] borrow book[E][✘] project meeting (at: Mon 2-4pm)[T][✓] borrow book[E][✘] project meeting (at: Mon 2-4pm)"
      }
    ],
    "authorContributionMap": {
      "zeling595": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeling595"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeling595"
        },
        "content": "deadline return book /by 2020-12-15"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeling595"
        },
        "content": "event project meeting /at 2020-10-15"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeling595"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeling595"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeling595"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeling595"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeling595"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeling595"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeling595"
        },
        "content": "todo exercise"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeling595"
        },
        "content": "deadline LCC essay /by 2020/09/24"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeling595"
        },
        "content": "event judo competition /at 2020-11-23"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeling595"
        },
        "content": "date 2020-09-24"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeling595"
        },
        "content": "edit 1 date 2020-12-15"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeling595"
        },
        "content": "edit 1 task borrow books"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "edit 1 undo"
      }
    ],
    "authorContributionMap": {
      "zeling595": 16
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeling595"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeling595"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeling595"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeling595"
        },
        "content": "# diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeling595"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "zeling595": 5
    }
  }
]
