[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public Deadline(String description, boolean done, LocalDate time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String saveToHardDisk() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return \"D\" + super.saveToHardDisk() + \" | \" + this.time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static final String logo \u003d \" _   _       _   _ _            \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"| | | |     | | | (_)           \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"| |_| | ___ | |_| |_ _ __   ___ \\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"|  _  |/ _ \\\\| __| | | \u0027_ \\\\ / _ \\\\\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"| | | | (_) | |_| | | | | |  __/\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"\\\\_| |_/\\\\___/ \\\\__|_|_|_| |_|\\\\___| \\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static final String divider \u003d \"\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\u003c\u003c\u003e\u003e\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static final String welcomeMessage \u003d divider + \"\\n Thanks for contacting Hotline! \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \" How can I help you today? \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            + divider + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static final String goodbyeMessage \u003d \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██                  ████      ████████  ██████████████████      ████    ██  ▒▒██████████  ████████  ████████        ░░██    ██████████\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██                  ████      ████████    ████████  ██████      ██      ██    ████████    ░░████▒▒    ████            ██      ▓▓      \\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██                  ████      ██████      ████████    ▒▒██      ██              ██████      ████                              ██      \\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████      ████      ████      ██████        ██████              ██            ████████                        ████            ██      \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████      ████      ▒▒        ████          ▒▒████              ██          ████████████            ██      ██████            ██      \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████      ████                ████    ░░      ████              ██        ████████████████          ██      ██████            ██      \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████      ████                ██                ██              ██          ██████████████        ████      ████▒▒            ██      \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████      ████      ████    ██░░                ▒▒      ██      ██            ▓▓██████████        ████                ██              \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████      ████      ████    ██        ████              ████░░  ██            ████████████        ████▒▒              ██              \\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████      ████      ████    ██▒▒      ████    ████      ██████████      ██    ████████████        ██████░░          ██████          ██\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████████████████████████████████████████████████████████████████████████████████████████████████████    ████████████    ██████\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████████████████████████████████████████████████████████      ████████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████████████████████████████████████████████████████            ██████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████████████████████████████████████████████████████      ██    ██████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████████████████████████████████████████████████████            ██████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████████████████████████████████████████████████████▓▓        ██  ████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████████████████████████████████████████████                  ██████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████████████████████████████████████████████      ██          ██████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████████████████████████████████████████████                  ██████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████████████████████████████████████████████▒▒              ████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████████        ████████████      ██████████      ██████▒▒        ██████▒▒        ██████  ██████░░████████████▒▒  ██████████\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████              ░░████            ████            ██              ██              ██    ██████    ░░            ██████████\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████░░              ████                                                                      ██                    ██████████\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████      ░░████░░████        ████            ████            ██░░            ██    ▒▒██              ██      ████████████████\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████      ████                ██████          ██████            ████                  ░░████          ▒▒██          ████████████\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████      ████                ██████          ██████            ████                      ████        ████          ████████████\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████      ██████              ████            ████              ██      ██      ████      ████      ██████            ██████████\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████░░                ▒▒                ██              ██              ██                ████      ██████            ██████████\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"████████████                ████            ████            ░░██            ████              ██████      ██████            ██████████\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            \"██████████████            ████████          ██████          ████          ██████            ████████      ██████            ██████████\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private enum Errors {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        UNDEFINED_INDEX,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        UNDEFINED_DESCRIPTION,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        UNDEFINED_DEADLINE_TIME,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        UNDEFINED_EVENT_TIME,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        WRONG_TYPE,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        UNRECOGNIZED,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        DIRECTORY_NOT_FOUND,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        WRONG_TIME_FORMAT,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private enum Commands {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        BYE,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        DELETE,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static void greetings() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public static void list() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\" You\u0027ve got no tasks now. \\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" If you want to get busy add more task. \\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" I\u0027ll remember them for you :)\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\" Let me list out all your tasks...\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(divider + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public static void done(int index) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        if (index \u003c 1 || taskCount \u003c index) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\" Sorry I cannot find your specified task :(\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\" Congratulations for finishing this task! \\n\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Let me mark this as done for you.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            tasks.get(index - 1).completeTask();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\"   \" + tasks.get(index - 1));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(divider + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public static void describe(int taskIndex) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(divider + \"\\n Your task has been recorded. \\n   \" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                tasks.get(taskIndex) + \"\\n You have \" + taskCount +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                \" tasks currently. \\n\" + divider + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public static void delete(int index) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        if (index \u003c 1 || taskCount \u003c index) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\" Sorry I cannot find your specified task :(\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\" Okay, I will remove this task for you\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\"   \" + tasks.get(index - 1));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            tasks.remove(index - 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            taskCount -\u003d 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\" You have \" + taskCount +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" tasks currently.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        System.out.println(divider + \"\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public static String generateException(Errors type) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        case WRONG_TYPE:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" Task index must be an integer :( \\n\" +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        case UNDEFINED_DESCRIPTION:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" Task description cannot be empty :( \\n\" +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        case UNDEFINED_INDEX:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" Task index must be specified :( \\n\" +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        case UNDEFINED_DEADLINE_TIME:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" Deadline date cannot be empty :( \\n\" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;    "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        case UNDEFINED_EVENT_TIME:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" Event date cannot be empty :( \\n\" +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        case DIRECTORY_NOT_FOUND:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" I cannot find the directory :( \\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        case WRONG_TIME_FORMAT:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" I cannot recognize the date you put in :( \\n\" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            message \u003d \" Command not recognized :( \\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        throw new DukeException(\"\\n\" + divider + \"\\n\" + message + divider + \"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static void parseTasks() throws DukeException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            File data \u003d new File(\"./tasks.txt\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            if (!data.exists()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                data.createNewFile();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                String[] inputs \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                String type \u003d inputs[0];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                boolean isDone \u003d inputs[1].equals(\"1\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                String description \u003d inputs[2];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                LocalDate time;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    tasks.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                } else if (type.equals((\"D\"))) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    time \u003d LocalDate.parse(inputs[3]);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    tasks.add(new Deadline(description, isDone, time));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    time \u003d LocalDate.parse(inputs[3]);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    tasks.add(new Event(description, isDone, time));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                taskCount +\u003d 1;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            generateException(Errors.DIRECTORY_NOT_FOUND);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            generateException(Errors.WRONG_TIME_FORMAT);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static void saveTasks() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            File location \u003d new File(\"./tasks.txt\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            if (!location.exists()) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                location.createNewFile();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(new FileWriter(location));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                writer.println(tasks.get(i).saveToHardDisk());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            String message \u003d \" I cannot find the directory :( \\n\" +"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    \" Terminating Hotline... \\n\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(\"\\n\" + divider + \"\\n\" + message + divider + \"\\n\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private static void echo() throws DukeException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            boolean isFinished \u003d false;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                String[] separated \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                Commands command \u003d Commands.valueOf(separated[0].toUpperCase());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    System.out.println(goodbyeMessage);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    isFinished \u003d true;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    list();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    if (separated.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        generateException(Errors.UNDEFINED_INDEX);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        int index \u003d Integer.parseInt(separated[1]);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        switch (command) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        case DONE:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                            done(index);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                            delete(index);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    } catch(NumberFormatException error) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        generateException(Errors.WRONG_TYPE);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    if (separated.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        generateException(Errors.UNDEFINED_DESCRIPTION);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    String description;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    String[] content;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    LocalDate time;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    switch (command) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        description \u003d input.substring(5);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        tasks.add(new ToDo(description, false));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        taskCount +\u003d 1;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        describe(taskCount - 1);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        content \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        if (content.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                            generateException(Errors.UNDEFINED_DEADLINE_TIME);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        description \u003d content[0];"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        time \u003d LocalDate.parse(content[1]);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        tasks.add(new Deadline(description, false, time));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        taskCount +\u003d 1;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        describe(taskCount - 1);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        content \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        if (content.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                            generateException(Errors.UNDEFINED_EVENT_TIME);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        description \u003d content[0];"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        time \u003d LocalDate.parse(content[1]);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        tasks.add(new Event(description, false, time));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        taskCount +\u003d 1;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        describe(taskCount - 1);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    generateException(Errors.UNRECOGNIZED);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                if (isFinished) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } catch(IllegalArgumentException error) { "
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            generateException(Errors.UNRECOGNIZED);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } catch(DateTimeParseException error) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            generateException(Errors.WRONG_TIME_FORMAT);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            parseTasks();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            greetings();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            echo();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            System.out.println(error);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "            saveTasks();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 320,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public Event(String description, boolean done, LocalDate time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String saveToHardDisk() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return \"E\" + super.saveToHardDisk() + \" | \" + this.time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 22
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public Task(String description, boolean done) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        String symbol \u003d (this.done ? \"[\\u2713] \" : \"[\\u2718] \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return symbol + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String saveToHardDisk() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        int isDone \u003d this.done ? 1 : 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return \" | \" + isDone + \" | \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 24
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public ToDo(String description, boolean done) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    public String saveToHardDisk() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "        return \"T\" + super.saveToHardDisk();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "todo get good grades in CS2103T"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "deadline individal project /by Thursday 20 Aug 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "event sleep /at 11:59pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AudreyFelicio"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "AudreyFelicio": 1,
      "-": 37
    }
  }
]
