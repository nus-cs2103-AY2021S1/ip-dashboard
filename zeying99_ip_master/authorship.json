[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeying99"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "zeying99": 29
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "# User Guide for ChatboxDuke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "## Feature 1 - deadline record"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "Users can enter deadline tasks. Users need to enter task name, /by and date in the format of YYYY-MM-DD."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "### `deadline` - Command to record deadline tasks. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "`deadline ip /by 2020-09-18`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    _____________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    [D][✘] deadline ip (by Sep 18 2020)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    _____________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "## Feature 2 - event record"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "Users can enter event name. Users need to enter event name, /at and date in the format of YYYY-MM-DD."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "### `event` - Command to record event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "`event winter holiday /at 2020-11-30`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    _____________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    [E][✘] winter holiday (at Nov 30 2020)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    _____________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": " "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": " ## Feature 3 - todo record"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": " Users can enter todo tasks. Users only need to enter task name."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": " "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": " ### `todo` - Command to record todo tasks. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": " "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": " "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": " `todo night jog`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": " "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     _____________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     [T][✘] night jog"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     _____________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  ## Feature 4 - list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  Users can see all tasks in his/her list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  ### `list` - provides the list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  `list`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       Here are the tasks in your list:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       1. [D][✘] deadline ip (by Sep 18 2020)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       2. [E][✘] winter holiday (at Nov 30 2020)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       3. [T][✘] night jog"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  ## Feature 5 - delete"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Users can delete a task in list with the index of the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ### `delete` - Delete a task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Example of usage: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   `delete 3`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Expected outcome:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       3. [T][✘] night jog"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ## Feature 6 - find"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Users can use keyword to search for matching tasks in the list. The keyword can be incomplete."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ### `find` - find a task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   Example of usage: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   `find wint`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       2. [E][✘] winter holiday (at Nov 30 2020)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________    "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ## Feature 7 - done"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Users can mark a task as done."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeying99"
        },
        "content": "      "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ### `done` - mark a task as done."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Example of usage: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   `done 1`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeying99"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       1. [D][✓] ip (by Sep 18 2020)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zeying99"
        },
        "content": " "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ## Feature 8 - Exit the program"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Users can exit the program and the task list will be recorded in duke.txt for future usages."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ### `bye` - exit the program"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Example of usage: "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   `bye`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zeying99"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       _____________________________________________  "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ## Feature 9 - Help"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Users can see the user menu."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   ### `help` - get menu"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zeying99"
        },
        "content": "       "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Example of usage: "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   `help`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   Expected outcome:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          _____________________________________________"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          1. todo + task name (eg: todo run)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          2. deadline + task name + \\by + YYYY-MM-DD  (eg: deadline ip \\by 2002-09-18)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          3. event + task name + \\at + YYYY-MM-DD  (eg: event ip \\at 2002-09-18)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          4. done + task index (eg: done 1)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          5. delete + task index (eg: delete 1)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          6. find + key word (eg: find ip)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zeying99"
        },
        "content": "          7. bye "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zeying99"
        },
        "content": "           _____________________________________________ "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zeying99"
        },
        "content": "  "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zeying99"
        },
        "content": "   "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "zeying99": 155
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a Duke which has a reference to storage, tasks and user response."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * It is a constructor that takes in the arguments of the file path and file name (data and duke.txt)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return duke;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Duke(String path, String fileName) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.storage \u003d new Storage(path, fileName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d storage.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.parser \u003d new Parser(this.ui, this.tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string response according to the input by the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * The response comes from user interaction class"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * When the input is bye, the storage class will write all the newly added tasks into the duke.txt"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String which a response from ui and will be shown on the GUI;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected String getResponse(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String response \u003d parser.parse(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (parser.getIsEnd()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            this.storage.storeFile(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "zeying99": 41
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String path \u003d \"data\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String fileName \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Duke duke \u003d new Duke(path, fileName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            stage.setTitle(\"ChatboxDuke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user1.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void setDuke(Duke d) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String welcome \u003d d.ui.showWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                DialogBox.getDukeDialog(welcome, dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (duke.parser.getIsEnd()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition((Duration.seconds(1)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 71
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a deadline. This is a constructor of deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param description describes the deadline task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param date        is the deadline of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return a deadline task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that represents the Deadline task which will be written in the documented file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String represents Deadline task in duke.txt."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String date \u003d \" @ \" + this.date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"D @\" + super.writeToFile() + date + System.lineSeparator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that represents the Deadline task with deadline in the format of MMM dd yyyy."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of Deadline task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 44
    }
  },
  {
    "path": "src/main/java/duke/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class DeadlineCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String[] words;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String taskName \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String taskDate \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Ui userInteract \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    DeadlineCommand(String[] words, TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.words \u003d words;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Handles event tasks and return duke responses"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String which is duke response for event command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String handleDeadline() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        parseDeadline();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            LocalDate date \u003d dateConversion(taskDate);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(taskName, date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            this.tasks.add(newDeadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            dukeOutput \u003d this.userInteract.showAdd(newDeadline, this.tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            return dukeOutput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidDateException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a LocalDate object of the date input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param date date of the event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return a LocalDate object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException exception occurs when the date format is not yyyy-mm-dd."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public LocalDate dateConversion (String date) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String datePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (!date.matches(datePattern)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidDateException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return LocalDate.parse(date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Iterates through the user input to get useful information of task description and date."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException exception occurs when the description is empty or there is no /by."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void parseDeadline() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        boolean beforeBy \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            if (!words[i].equals(\"/by\") \u0026\u0026 beforeBy) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                taskName \u003d taskName + words[i] + \" \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (words[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                beforeBy \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (!words[i].equals(\"/by\") \u0026\u0026 !beforeBy) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                taskDate \u003d taskDate + words[i];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (beforeBy) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.missingConnectorException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (taskName \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (taskDate \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidDateException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 82
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class DeleteCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String[] words;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Ui userInteract \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    DeleteCommand(String[] words, TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.words \u003d words;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a response of the delete task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return  String which is the response for user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException exception occurs when the user did not provide an index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String handleDelete() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.operationException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        int index \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (index + 1 \u003e tasks.size()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidIndexException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            return this.userInteract.showDelete(index, this.tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 29
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class DoneCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String[] words;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Ui userInteract \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    DoneCommand(String[] words, TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.words \u003d words;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a response of the done task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return  String which is the response for user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException exception occurs when the user did not provide an index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String handleDone() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.operationException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        int number \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (number + 1 \u003e tasks.size() || number \u003c 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidIndexException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            return this.userInteract.showDone(number, this.tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 29
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": " * This class stores most of the possible errors."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DukeException noResponseException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DukeException operationException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DukeException(\"OOPS!!! You must provided the index of the task after this operation.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"(i.e. delete 3)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DukeException missingConnectorException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DukeException(\"OOPS!!! You need to enter /by or /at after a deadline or event task.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DukeException emptyDescriptionException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DukeException(\"OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DukeException invalidIndexException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DukeException(\"OOPS!!! You entered an invalid index for this operation.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DukeException invalidDateException() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DukeException(\"OOPS! You must provide a valid date \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"after \u0027/by\u0027 or \u0027/at\u0027 for a deadline or event task. \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"(i.e. deadline ip/by 2020-08-19)\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public static DukeException noReservedWordException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return new DukeException(\"Sorry, please do not use \u0027@\u0027 because it is reserved for other usage.\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 44
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a deadline. This is a constructor of deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param description describes the event task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param date        the time when the event task will happen"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return a event task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that represents the Event task which will be written in the documented file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String represents Event task in duke.txt."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String date \u003d \" @ \" + this.date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"E @\" + super.writeToFile() + date + System.lineSeparator();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that represents the Event task with deadline in the format of MMM dd yyyy."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of Event task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 42
    }
  },
  {
    "path": "src/main/java/duke/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class EventCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String[] words;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String taskName \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String taskDate \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Ui userInteract \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    EventCommand(String[] words, TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.words \u003d words;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Handles event tasks and return duke responses"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String which is duke response for deadline command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException exception occurs when the date format is not yyyy-mm-dd."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String handleEvent() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        parseEvent();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            LocalDate date \u003d dateConversion(taskDate);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            Event newEvent \u003d new Event(taskName, date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            this.tasks.add(newEvent);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            dukeOutput \u003d this.userInteract.showAdd(newEvent, this.tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            return dukeOutput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidDateException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a LocalDate object of the date input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param date date of the event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return a LocalDate object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException exception occurs when the date format is not yyyy-mm-dd."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public LocalDate dateConversion(String date) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String datePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (!date.matches(datePattern)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidDateException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return LocalDate.parse(date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Iterates through the user input to get useful information of task description and date."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException exception occurs when the description is empty or there is no /at."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void parseEvent() throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        boolean beforeAt \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            if (!words[i].equals(\"/at\") \u0026\u0026 beforeAt) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                taskName \u003d taskName + words[i] + \" \";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (words[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                beforeAt \u003d false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (!words[i].equals(\"/at\") \u0026\u0026 !beforeAt) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                taskDate \u003d taskDate + words[i];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (beforeAt) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.missingConnectorException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (taskName \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (taskDate \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.invalidDateException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 85
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class FindCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Ui userInteract \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    FindCommand(String keyWord, TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string showing list of matching tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String which is the response for users showing the list of matching tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String handleFind() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        List\u003cTask\u003e matchedTasks \u003d this.tasks.findMatchingTask(keyWord);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return this.userInteract.showFind(matchedTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 26
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected boolean isEnd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private UserInput currentType \u003d null;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Ui userInteract \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a parser which interprets the user\u0027s command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * This is a constructor of parser which takes in two arguments of user interact class and task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Utilizes user interact class to return a response string and adds new tasks into the task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param userInteract A class that return different types of duke response"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param tasks        List of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return A parser"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Parser(Ui userInteract, TaskList tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.userInteract \u003d userInteract;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.isEnd \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    enum UserInput {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        DELETE,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        BYE,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        FIND,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        HELP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string of response from duke based on user\u0027s input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param userCommand User\u0027s command scanned by Ui."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return A string of response from duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws DukeException Exceptions occur when the response is not ideal."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String parse (String userCommand) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String[] words \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (userCommand.contains(\"@\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.noReservedWordException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            String key \u003d words[0].toLowerCase();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            if (key.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.DEADLINE;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d new DeadlineCommand(words, tasks).handleDeadline();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.TODO;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d new TodoCommand(words, tasks).handleToDO();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.EVENT;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d new EventCommand(words, tasks).handleEvent();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"done\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.DONE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d new DoneCommand(words, tasks).handleDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"delete\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.DELETE;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d new DeleteCommand(words, tasks).handleDelete();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"bye\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.BYE;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.isEnd \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d this.userInteract.showBye();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"list\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.LIST;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d this.userInteract.showList(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"find\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.FIND;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d new FindCommand(words[1], tasks).handleFind();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else if (key.equals(\"help\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                this.currentType \u003d UserInput.HELP;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d this.userInteract.showHelp();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                throw DukeException.noResponseException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public boolean getIsEnd() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return this.isEnd;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 94
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String pathName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a storage class which takes in two String arguments of pathName and fileName (data and duke.txt)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * It is a constructor of the storage class which will create duke.txt if it does not exist;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Retrieves tasks from the duke.txt; And write new tasks into the duke.txt when user exits"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param pathName The path of the file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param fileName The name of the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return A Storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Storage(String pathName, String fileName) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.pathName \u003d pathName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a TaskList that stores tasks retrieved from the data/duke.txt if the file exits"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return a TaskList with tasks stored in the txt file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            File file \u003d new File(this.pathName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            File dukeSave \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                file.mkdirs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeSave.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                if (dukeSave.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                    Scanner sc \u003d new Scanner(dukeSave);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                    while (sc.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        String previouTaskString \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        String[] words \u003d previouTaskString.split(\" @ \", 0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        Task previouTask \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                            previouTask \u003d new Deadline(words[2], LocalDate.parse(words[3]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                            tasks.add(previouTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        } else if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                            previouTask \u003d new ToDo(words[2]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                            tasks.add(previouTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        } else if (words[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                            previouTask \u003d new Event(words[2], LocalDate.parse(words[3]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                            tasks.add(previouTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                            previouTask.setIsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                    dukeSave.createNewFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            e.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            e.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Stores newly added tasks and previous tasks from the TaskList in the duke.txt file"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param tasks TaskList with newly added tasks and previous tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @throws IOException exception occurs when the file is not found"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void storeFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        List\u003cString\u003e fileString \u003d tasks.convertToFileFormat();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        for (int k \u003d 0; k \u003c fileString.size(); k++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            fw.write(fileString.get(k));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 95
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected int sequence;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a Task which takes in an argument of String description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * This is a constructor of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return a Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.sequence \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns tick or cross based on the task\u0027s isDone boolean"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of tick or cross"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Sets the current task\u0027s isDone boolean to true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void setIsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Marks the current task as done and returns a String response to inform the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of information about the task which is marked as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String markAsDone () {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String doneString \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \" Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"  \" + this.getStatusIcon() + \"  \" + this.description + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return doneString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Produces a string to represent the task in duke.txt"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String isDoneString \u003d this.isDone ? \" 1 @ \" : \" 0 @ \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return isDoneString + this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return this.getStatusIcon() + \"  \" + this.description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 67
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Delete the task that is at the index position from the task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * And change the sequence number of the task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param index which is the position of the deleted task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        for (int i \u003d index; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            tasks.get(i).sequence \u003d tasks.get(i).sequence - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Maps the tasks into storage format and store it in a list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return fileString which is an arraylist of strings to be recorded in duke.txt"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public List\u003cString\u003e convertToFileFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        List\u003cString\u003e fileString \u003d this.tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                .map(x -\u003e x.writeToFile())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return fileString;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Uses stream.filter to find the matching tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return List of Tasks which contains all matching tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public List\u003cTask\u003e findMatchingTask(String keyWord) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        List\u003cTask\u003e matchingTask \u003d this.tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                .filter(x -\u003e x.description.contains(keyWord))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return matchingTask;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 65
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that represents the Event task which will be written in the documented file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String represents Event task in duke.txt."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String isDoneString \u003d this.isDone ? \" 1 @ \" : \" 0 @ \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"T @\" + super.writeToFile() + System.lineSeparator();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that represents the todo task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 28
    }
  },
  {
    "path": "src/main/java/duke/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class TodoCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private Ui userInteract \u003d new Ui();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private String[] words;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    TodoCommand(String[] words, TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.words \u003d words;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Handles todo task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String which is duke response for Todo command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String handleToDO() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            throw DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String todoTask \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            if (i !\u003d words.length - 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                todoTask \u003d todoTask + words[i] + \" \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                todoTask \u003d todoTask + words[i];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        ToDo newToDo \u003d new ToDo(todoTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        this.tasks.add(newToDo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return this.userInteract.showAdd(newToDo, this.tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 34
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a String which indicates welcome from duke when the app is launched"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"     Type help to get command menu\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"_____________________________________________\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that inform the user about the newly added task depends on the type of task input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param task The newly added task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of information about the newly added task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showAdd(Task task, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"     Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"       \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"     Now you have \" + tasks.size() + \" \" + \"task\" + \" in the list.\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"_____________________________________________\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        System.out.println(dukeOutput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that inform the user about the task which is marked as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param index The position of the task which is going to be marked as done in the TaskList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of information about marked task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showDone(int index, TaskList tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        System.out.println(dukeOutput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that inform the user about the newly deleted task depends on the type of task input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @param index The position of the task which is going to be deleted in the TaskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of information about the deleted task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showDelete(int index, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Task removed \u003d tasks.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        tasks.delete(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"     Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"       \" + removed.toString() + \"\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"     Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"_____________________________________________\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        System.out.println(dukeOutput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a string that contains all the current tasks in the TaskList"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String of current tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showList(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            String label \u003d Integer.toString(1 + i);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            dukeOutput \u003d dukeOutput + label + \". \" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        dukeOutput \u003d dukeOutput + \"_____________________________________________\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        System.out.println(dukeOutput);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a String which indicates whether the keyword"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showFind(List\u003cTask\u003e matchedTasks) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"_____________________________________________\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        if (matchedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            dukeOutput \u003d dukeOutput + \"Sorry, Duke can not find a matching task.\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            dukeOutput \u003d dukeOutput + \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                dukeOutput \u003d dukeOutput + index + \".\" + matchedTasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        dukeOutput \u003d dukeOutput + \"_____________________________________________\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        System.out.println(dukeOutput);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a String when the user exit"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"       Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"_____________________________________________\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        System.out.println(dukeOutput);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * Returns a String of reminder of task commands"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     * @return String;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeying99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public String showHelp() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String dukeOutput \u003d \"_____________________________________________\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"1. todo + task name (eg: todo run)\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"2. deadline + task name + \\by + YYYY-MM-DD  (eg: deadline ip \\\\by 2002-09-18)\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"3. event + task name + \\\\at + YYYY-MM-DD  (eg: event ip \\\\at 2002-09-18)\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"4. done + task index (eg: done 1)\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"5. delete + task index (eg: delete 1)\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"6. find + key word (eg: find ip)\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"7. bye \\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                + \"_____________________________________________\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        return dukeOutput;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 141
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" spacing\u003d\"4.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#654040\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"87.0\" fitWidth\u003d\"86.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            \u003cInsets top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zeying99": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"601.0\" prefWidth\u003d\"473.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"473.0\" AnchorPane.bottomAnchor\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"3.0\" layoutY\u003d\"-6.0\" prefHeight\u003d\"567.0\" prefWidth\u003d\"467.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"562.0\" prefWidth\u003d\"465.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"378.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"95.0\" text\u003d\"Send\" textFill\u003d\"#323232\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zeying99": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void nameTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"reading\",\"2019-08-27\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String DukeOutput \u003d \"[D]\"+ \"[\"+\"\\u2718\" + \"]\" + \"  reading\" +\" (by: Aug 27 2019)\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        assertEquals(DukeOutput, deadlineTest.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void addNewDeadlineTest() throws EmptyInputException, IOException, NoResponseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Parser parser \u003d new Parser(ui , tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String expectedOutput \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"       [D][✘]  CS2103 (by: Aug 27 2019)\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Now you have 1 task in the list.\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String actualOutput \u003d parser.parse(\"deadline CS2103 /by 2019-08-27\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        assertEquals(expectedOutput,actualOutput );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void deleteDeadline() throws EmptyInputException, IOException, NoResponseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Deadline DeadlineTest1 \u003d new Deadline(\"homework\",\"2019-08-27\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Deadline DeadlineTest2 \u003d new Deadline(\"PI\",\"2020-09-21\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        ArrayList\u003cTask\u003e tasksArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        tasksArr.add(DeadlineTest1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        tasksArr.add(DeadlineTest2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        TaskList tasks \u003d new TaskList(tasksArr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Parser parser \u003d new Parser(ui , tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String expectedOutput \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"       [D][✘]  homework (by: Aug 27 2019)\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Now you have 1 tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"____________________________________________________________\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String actualOutput \u003d parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        assertEquals(expectedOutput,actualOutput );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 54
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeying99"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void nameTest(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        ToDo todoTest \u003d new ToDo(\"homework\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String DukeOutput \u003d \"[T]\"+ \"[\"+\"\\u2718\" + \"]\" + \"  homework\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        assertEquals(DukeOutput, todoTest.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void addNewTodoTest() throws EmptyInputException, IOException, NoResponseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Parser parser \u003d new Parser(ui , tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String expectedOutput \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"       [T][✘]  PI\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Now you have 1 task in the list.\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String actualOutput \u003d parser.parse(\"todo PI\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        assertEquals(expectedOutput,actualOutput );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    public void deleteTodo() throws EmptyInputException, IOException, NoResponseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        ToDo todoTest \u003d new ToDo(\"homework\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        ArrayList\u003cTask\u003e tasksArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        tasksArr.add(todoTest);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        TaskList tasks \u003d new TaskList(tasksArr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        Parser parser \u003d new Parser(ui , tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String expectedOutput \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"       [T][✘]  homework\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"     Now you have 0 tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeying99"
        },
        "content": "                \"____________________________________________________________\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        String actualOutput \u003d parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeying99"
        },
        "content": "        assertEquals(expectedOutput,actualOutput );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeying99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeying99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeying99": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeying99"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeying99"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeying99"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeying99"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeying99"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeying99"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeying99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zeying99": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeying99"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeying99"
        },
        "content": "JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeying99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeying99"
        },
        "content": "export JAVA_TOOL_OPTIONS"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "zeying99": 4
    }
  }
]
