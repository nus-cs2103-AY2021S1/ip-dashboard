[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "Vielheim": 2
    }
  },
  {
    "path": "src/main/java/duke/CommonMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class CommonMethod {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Merges the String array into one string, from index start, until (not including) index end"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static String mergeArray(String[] array, int start, int end) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        for (int i \u003d start; i \u003c end; i++) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            output.append(array[i]).append(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return output.toString().trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static boolean isLeapYear(int year) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        boolean isLeap \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (year % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            if(year % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                isLeap \u003d year % 400 \u003d\u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                isLeap \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return isLeap;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 24
    }
  },
  {
    "path": "src/main/java/duke/CommonString.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// Enum class to denote commonly used, constant String values in duke.Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public enum CommonString {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    DELETE(\"DELETE\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    DONE(\"DONE\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    LOGO(\" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    DUKE_DATETIME_FORMAT(\"dd MMM yyyy hh:mm:ss a\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    CommonString(String value) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.MissingFieldException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UserInputParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final UIManager uiManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final StorageManager storageManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.uiManager \u003d new UIManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            this.taskList \u003d new TaskList(storageManager.loadData());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            System.out.println(\"Cannot Load Data: \" + e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // METHOD TO RUN DUKE PROCESSES"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // INTRO"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        uiManager.printDukeIntro();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // Execute duke.Duke Functions"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                String userInput \u003d uiManager.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                Command command \u003d UserInputParser.parse(userInput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                command.execute(taskList, uiManager, storageManager);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                isExit \u003d command.getExitStatus();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            } catch (InvalidInstructionException | MissingFieldException | InvalidFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                System.out.println(\"IO Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            uiManager.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // OUTRO"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        uiManager.printDukeOutro();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // MAIN FUNCTION"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // Initialisation of duke.Duke"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Vielheim": 63
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DukeTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final DukeTask task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public AddCommand(DukeTask task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void execute(TaskList taskList, UIManager uiManager, StorageManager storageManager) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        taskList.addToList(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        uiManager.printAddTask(task, taskList.getSize());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 21
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public boolean getExitStatus() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public abstract void execute(TaskList taskList, UIManager uiManager, StorageManager storageManager)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidInstructionException, IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DukeTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void execute(TaskList taskList, UIManager uiManager, StorageManager storageManager)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidInstructionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) { // check if loc is an existing duke.task.DukeTask inside the array inputList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidInstructionException(CommonString.DELETE + \": Invalid Task Number\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            DukeTask task \u003d taskList.deleteFromList(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            uiManager.printDeleteTask(task, taskList.getSize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void execute(TaskList taskList, UIManager uiManager, StorageManager storageManager) throws InvalidInstructionException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) { // check if loc is an existing duke.task.DukeTask inside the array inputList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidInstructionException(CommonString.DONE + \": Invalid Task Number\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } else if (taskList.getTaskList().get(index).getDoneStatus()) { // check if inputList[loc] is already completed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidInstructionException(CommonString.DONE + \": Task is already done!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            taskList.markDone(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            uiManager.printMarkAsDone(taskList.getTaskList().get(index), taskList.getSize());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void execute(TaskList taskList, UIManager uiManager, StorageManager storageManager)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        storageManager.saveData(taskList.getTaskList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 19
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void execute(TaskList taskList, UIManager uiManager, StorageManager storageManager) throws InvalidInstructionException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        uiManager.printDukeInstructions();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 17
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.StorageManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.logic.UIManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void execute(TaskList taskList, UIManager uiManager, StorageManager storageManager) throws InvalidInstructionException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            uiManager.printNumberedTask(taskList.getTaskList().get(i), i);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        uiManager.printTaskStatus(taskList.getSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 20
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String exceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String additionalInfo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DukeException(String message, String exceptionType, String additionalInfo) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"Exception: \" + this.exceptionType +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"\\n\\t\" + getMessage() +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"\\n\\t\" + additionalInfo +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"\\n\\tSee \\\"help\\\" for more\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 20
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class InvalidFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public InvalidFormatException(String instructionFormat) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(\"Please use the correct format for your instructions!\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InvalidFormatException.class.getName(), \"Format - \" + instructionFormat);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class InvalidInstructionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public InvalidInstructionException(String instructionType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(\"Please key in a valid instruction!\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InvalidInstructionException.class.getName(), \"Source - \" + instructionType);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class MissingFieldException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public MissingFieldException(String missingFields) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(\"Please key in the missing fields\", MissingFieldException.class.getName(), \"Fields Missing - \" + missingFields);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 8
    }
  },
  {
    "path": "src/main/java/duke/logic/InputValidator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.CommonMethod;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.MissingFieldException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class InputValidator {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // VALIDATION FUNCTIONS"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // ENSURE INSTRUCTION STRING IS SIZE 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static boolean validateSizeOne (int instrLen, String instrType, boolean isLenOne)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidInstructionException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if ((instrLen \u003d\u003d 1) \u003d\u003d isLenOne) { // i want instrLen \u003d\u003d 1 to be isOne"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidInstructionException(instrType);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // ENSURE STRING SIZE 2, AND SECOND STRING CAN PARSE TO INT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static boolean validateSizeTwoAndInt(String[] instructionArray, String instrType)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidInstructionException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (instructionArray.length \u003d\u003d 2 \u0026\u0026 (isNumeric(instructionArray[1]))) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } // if len !\u003d 2 or the input is not an integer"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        throw new InvalidInstructionException(instrType);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // ENSURE THAT THE STRING IS NOT EMPTY BEFORE AND AFTER THE INDICATOR, EXCLUDING INSTRUCTION TYPE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static boolean validateDescriptionAndDateTime(String[] instructionArray, String instrType, int index)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidFormatException, MissingFieldException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (index \u003d\u003d -1) { // does not exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidFormatException(instrType);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String atDescription \u003d CommonMethod.mergeArray(instructionArray, 1, index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (atDescription.equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new MissingFieldException(instrType + \": Description\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (instructionArray.length \u003c index + 3) { // account for index + date + time"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new MissingFieldException(instrType + \": Date and Time\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // ENSURE THAT THE DATE AND TIME ARE VALID FORMATS"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static boolean validateDateAndTime(String[] instructionArray, String instrType, int index)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidFormatException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String date \u003d instructionArray[index + 1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String time \u003d instructionArray[index + 2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // INPUT DATE FORMAT: DD/MM/YYYY"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // INPUT TIME FORMAT: hh/mm/ss"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        int year, month, day, hour, minute, second;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String[] dateArray \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String[] timeArray \u003d time.split(\"/\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (dateArray.length !\u003d 3 || timeArray.length !\u003d 3) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidFormatException(instrType + \" DATE AND TIME\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            day \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            month \u003d Integer.parseInt(dateArray[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            year \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            hour \u003d Integer.parseInt(timeArray[0]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            minute \u003d Integer.parseInt(timeArray[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            second \u003d Integer.parseInt(timeArray[2]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidFormatException(instrType + \" DATE AND TIME\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // input validation for time"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (hour \u003c 0 || hour \u003e 23 || minute \u003c 0 || minute \u003e 59 || second \u003c 0 || second \u003e 59) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidFormatException(instrType + \" TIME FORMAT\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // input validation for date"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (year \u003c\u003d 0 || month \u003c\u003d 0 || month \u003e 12 || day \u003c\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidFormatException(instrType + \" DATE FORMAT\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 8:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 10:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (day \u003e 31) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    throw new InvalidFormatException(instrType + \" DATE FORMAT\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 9:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (day \u003e 30) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    throw new InvalidFormatException(instrType + \" DATE FORMAT\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if ((CommonMethod.isLeapYear(year) \u0026\u0026 day \u003e 29) || (!CommonMethod.isLeapYear(year) \u0026\u0026 day \u003e 28)){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    throw new InvalidFormatException(instrType + \" DATE FORMAT\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // HELPER FUNCTIONS"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // checks if the input string can be parsed into an Integer or not"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static boolean isNumeric (String instruction) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            Integer.parseInt(instruction);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 128
    }
  },
  {
    "path": "src/main/java/duke/logic/StorageManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.CommonString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DukeTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // FILE AND DATA STORAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String PATH \u003d \"data/dukeData.txt\"; // structure: ip/data/dukeData.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String FILE_DATA_SEPARATOR \u003d \"|\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public ArrayList\u003cDukeTask\u003e loadData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        ArrayList\u003cDukeTask\u003e dataList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        File dataFile \u003d new File(PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // load parent files"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        File directory \u003d new File(dataFile.getParentFile().getAbsolutePath());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        directory.mkdirs();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // generate data file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            System.out.println(\"Problem with creating data file\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // read from data file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (dataFile.exists()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                // regenerate the DukeTasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                String savedTask \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                String[] taskData \u003d savedTask.split(\"\\\\|\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                DukeTask task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(CommonString.DUKE_DATETIME_FORMAT.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                switch (taskData[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        task \u003d new TodoTask(taskData[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        task \u003d new EventTask(taskData[2], LocalDateTime.parse(taskData[3], formatter));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    default: // \"D\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        task \u003d new DeadlineTask(taskData[2], LocalDateTime.parse(taskData[3], formatter));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (taskData[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                dataList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return dataList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // SAVING DATA FOR OUTPUT"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // FORMAT IS GIVEN BY:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // [TYPE]|[DONE]|[DESCRIPTION]|[DATETIME (if applicable)]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // TYPE: T,E,D"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // DONE: 1 or 0"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void saveData(ArrayList\u003cDukeTask\u003e dataList) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        StringBuilder dataString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        for (DukeTask task : dataList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            String addition \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                addition \u003d \"T\" + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + (task.getDoneStatus() ? \"1\" : \"0\") + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + task.getDescription();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                addition \u003d \"E\" + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + (task.getDoneStatus() ? \"1\" : \"0\") + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + task.getDescription() + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + ((EventTask) task).getDatetime();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                addition \u003d \"D\" + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + (task.getDoneStatus() ? \"1\" : \"0\") + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + task.getDescription() + FILE_DATA_SEPARATOR"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        + ((DeadlineTask) task).getDatetime();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            dataString.append(addition).append(System.lineSeparator());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String output \u003d dataString.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        FileWriter writer \u003d new FileWriter(PATH);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        writer.write(output);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 104
    }
  },
  {
    "path": "src/main/java/duke/logic/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.CommonString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DukeTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final ArrayList\u003cDukeTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public TaskList(ArrayList\u003cDukeTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void addToList(DukeTask dukeTask) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        taskList.add(dukeTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DukeTask deleteFromList(int index) throws InvalidInstructionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) { // check if loc is an existing duke.task.DukeTask inside the array inputList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidInstructionException(CommonString.DELETE + \": Invalid Task Number\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public ArrayList\u003cDukeTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 38
    }
  },
  {
    "path": "src/main/java/duke/logic/UIManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.CommonString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DukeTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// Manages the UI interaction with the User for duke.Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class UIManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // PRIVATE ENUMS OF THE UI MANAGER -- TO SAVE CONSTANTS TO BE PRINTED"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Instruction Guides split up the various parts of the \"help\" function guide"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Splitting them up into parts makes it easier to edit according to the specific guide in the future"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private enum InstructionGuide {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // For formatting purposes, except for the last guide, the guides must end with a guideBreaker"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // It splits them into paragraphs"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        Level(\"* Level 8: Formatting Time\", false),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        DeveloperUpdate(\"* DEVELOPER UPDATES:\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"* I can now save data! Just terminate the program with \\\"bye\\\" and I\u0027ll save the data automatically!\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"* Do take note of the DATE AND TIME notations when inserting DukeTasks!\", false),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        AvailableInstruction(\"AVAILABLE INSTRUCTIONS:\\n\" + // Available Instructions"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" help - Display Available Instructions\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" bye - Terminate duke.Duke\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" list - Display current DukeTasks\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" done [Task Number] - Complete the specified task number (Specify in numeric format!) Eg: \\\"done 3\\\"\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" delete [Task Number] - Deletes the task number (Specify in numeric format!) Eg: \\\"delete 3\\\"\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"* SEE TASK INPUT INSTRUCTIONS FOR MORE ABOUT TASKS\", false),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        TaskInputInstruction(\"TASK INPUT INSTRUCTIONS:\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"IMPORTANT: DO AVOID USING THE VERTICAL BAR \\\"|\\\" IN YOUR TASK INSTRUCTIONS\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" todo [Task Description] - Inputs a TODO duke.task.DukeTask\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" deadline [Task Description] /by [Date] - Inputs a DEADLINE duke.task.DukeTask, using INDICATOR /by\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" event [Task Description] /at [Date] - Inputs an EVENT duke.task.DukeTask, using INDICATOR /at\", false),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        TaskInputSpecification(\"TO NOTE:\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"FORMAT FOR DATE: \\\"DD/MM/YYYY hh/mm/ss\\\"\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" \\tDD, MM, YYYY are the date, month and year respectively (IN INTEGERS)\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \" \\thh, mm, ss are the hour (in 24 HOUR NOTATION), minutes and seconds respectively (IN INTEGERS)\", true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final static String guideBreaker \u003d \"\\n\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final String instruction;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final boolean last;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        InstructionGuide(String instruction, boolean last) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            this.last \u003d last;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return instruction + (last ? \"\" : guideBreaker);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // User Interaction Text"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private enum UserInteractionText {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        LINE(\"____________________________________________________________\"), // Single Line for divider{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        INTRODUCTION(LINE + \"\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"Hello! I am duke.Duke, your Personal Assistant!\\n\" + // START OF INTRODUCTIONS"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"What can I do for you today?\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                \"Type \\\"help\\\" to see the available instructions!\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                LINE), // END OF INTRODUCTIONS)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        INSTRUCTIONS(\"How to use duke.Duke:\\n\" + // Guide to duke.Duke"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.Level +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.DeveloperUpdate +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.AvailableInstruction +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.TaskInputInstruction +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                InstructionGuide.TaskInputSpecification), // END OF INSTRUCTIONS)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        OUTRO(\"Goodbye. Hope to see you soon!\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                CommonString.LOGO + LINE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        private final String value;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        UserInteractionText(String value) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            this.value \u003d value;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            return value;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Reads in user command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Not very efficient because we keep creating and closing scanners"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // later when the while loop is done we can do 1x setup and 1x cleaning up."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // for now this is safer cause less bugs"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String output \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // MAIN DUKE FUNCTIONS"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printDukeIntro() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(UserInteractionText.INTRODUCTION);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printDukeInstructions() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(UserInteractionText.INSTRUCTIONS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printDukeOutro() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(UserInteractionText.OUTRO);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // COMMAND BASED"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printAddTask(DukeTask task, int size) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(\"Task Added: \" + task.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        printTaskStatus(size);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printDeleteTask(DukeTask task, int size) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(\"Alright! I\u0027ll delete this task!\\n\" + \"Take note that this is irreversible!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        printTaskStatus(size);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printNumberedTask(DukeTask task, int num) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println((num + 1) + \". \" + task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printMarkAsDone(DukeTask task, int size) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(\"Alright! I\u0027ll mark this task as done!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        printTaskStatus(size);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // GENERAL USE"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(UserInteractionText.LINE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void printTaskStatus(int size) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String taskSize \u003d size \u003d\u003d 1 ? \" task\" : \" tasks\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        System.out.println(\"You now have \" + size + taskSize);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 144
    }
  },
  {
    "path": "src/main/java/duke/logic/UserInputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// INPUT PARSER JUST CHECKS IF THE FIELDS ARE MISSING OR NOT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// OR ARE IN THEIR CORRECT FORMATS"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// DOES NOT CHECK IF THE VALUES ARE VALID OR NOT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// IN THE SENSE IT ASKS: IS YOUR COMMAND SOMETHING DUKE CAN UNDERSTAND?"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// THIS DOES NOT MEAN DUKE CAN EXECUTE IT BECAUSE THE DETAILS MAY NOT BE RIGHT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.CommonMethod;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidFormatException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.exception.MissingFieldException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.DukeTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// PARSER JUST CHECKS: HEY IS THIS FORMAT CORRECT FOR DUKE INSTRUCTIONS?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// ARE THERE MISSING FIELDS, OR INCORRECT FORMAT FOR THE COMMANDS?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "// ARE THESE COMMANDS EXISTING?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class UserInputParser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // INSTRUCTIONS and related CONSTANTS"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Kept as Strings because of certain constants (indicators) that are related to certain instructions"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // Convenient to use - final keeps them as constant values"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String BY_INDICATOR \u003d \"/by\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String AT_INDICATOR \u003d \"/at\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String UNKNOWN \u003d \"unknown\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // TAKES IN USER COMMAND"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // PERFORMS INPUT VERIFICATION"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // AND RETURNS EITHER A COMMAND, OR THROWS A DUKE_EXCEPTION"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public static Command parse(String userInput)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidInstructionException, MissingFieldException, InvalidFormatException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // Instruction Setup - split by whitespace to check"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String instruction \u003d userInput.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String[] instructionArray \u003d instruction.split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        int instrLen \u003d instructionArray.length;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String instructionTag \u003d instruction.split(\" \")[0]; // indicates if instruction or not"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        switch (instructionTag) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateSizeOne(instrLen, instructionTag, true)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case HELP:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateSizeOne(instrLen, instructionTag, true)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new HelpCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateSizeOne(instrLen, instructionTag, true)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateSizeOne(instrLen, instructionTag, false)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    TodoTask todotask \u003d new TodoTask(CommonMethod.mergeArray(instructionArray, 1, instrLen));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new AddCommand(todotask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateSizeTwoAndInt(instructionArray, instructionTag)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new DoneCommand(Integer.parseInt(instruction.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateSizeTwoAndInt(instructionArray, instructionTag)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new DeleteCommand(Integer.parseInt(instruction.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                int byIndex \u003d findIndex(instructionArray, BY_INDICATOR);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateDescriptionAndDateTime(instructionArray, DEADLINE, byIndex)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        \u0026\u0026 (InputValidator.validateDateAndTime(instructionArray, DEADLINE, byIndex))) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new AddCommand(generateTaskWithDate(DEADLINE, instructionArray, BY_INDICATOR));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                int atIndex \u003d findIndex(instructionArray, AT_INDICATOR);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                if (InputValidator.validateDescriptionAndDateTime(instructionArray, EVENT, atIndex)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                        \u0026\u0026 (InputValidator.validateDateAndTime(instructionArray, EVENT, atIndex))) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                    return new AddCommand(generateTaskWithDate(EVENT, instructionArray, AT_INDICATOR));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        throw new InvalidInstructionException(UNKNOWN);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // GENERATOR FUNCTIONS FOR TASKS (DEADLINE AND EVENT)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static DukeTask generateTaskWithDate(String taskType, String[] instructionArray,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                                                 String indicator)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidFormatException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // find the index of the indicator"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        int index \u003d findIndex(instructionArray, indicator);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String description \u003d CommonMethod.mergeArray(instructionArray, 1, index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String date \u003d instructionArray[index + 1];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String time \u003d instructionArray[index + 2];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // parse date and time into LocalDateTime object"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        LocalDateTime dateTime \u003d parseDateAndTime(taskType, date, time);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return taskType.equals(DEADLINE) ? new DeadlineTask(description, dateTime) : new EventTask(description, dateTime);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static LocalDateTime parseDateAndTime(String taskType, String date, String time)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throws InvalidFormatException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // INPUT DATE FORMAT: DD/MM/YYYY"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        // INPUT TIME FORMAT: hh/mm/ss"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        int year, month, day, hour, minute, second;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String[] dateArray \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        String[] timeArray \u003d time.split(\"/\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            day \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            month \u003d Integer.parseInt(dateArray[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            year \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            hour \u003d Integer.parseInt(timeArray[0]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            minute \u003d Integer.parseInt(timeArray[1]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            second \u003d Integer.parseInt(timeArray[2]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            throw new InvalidFormatException(taskType + \" DATE AND TIME\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return LocalDateTime.of(year, month, day, hour, minute, second);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    // HELPER FUNCTIONS"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private static int findIndex(String[] array, String regex) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        for (int i \u003d 0; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            if (array[i].equals(regex)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 154
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.CommonString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class DeadlineTask extends DukeTask {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final LocalDateTime datetime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DeadlineTask(String description, LocalDateTime datetime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(CommonString.DUKE_DATETIME_FORMAT.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return datetime.format(df);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", getDatetime());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 25
    }
  },
  {
    "path": "src/main/java/duke/task/DukeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public abstract class DukeTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public DukeTask(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (this \u003d\u003d o) return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        DukeTask dukeTask \u003d (DukeTask) o;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return isDone \u003d\u003d dukeTask.isDone \u0026\u0026"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "                description.equals(dukeTask.description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return Objects.hash(description, isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 48
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import duke.CommonString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class EventTask extends DukeTask {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    private final LocalDateTime datetime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public EventTask(String description, LocalDateTime datetime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(CommonString.DUKE_DATETIME_FORMAT.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return datetime.format(df);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", getDatetime());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 25
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "public class TodoTask extends DukeTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020 06/06/00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline /by Saturday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by -12/12/2020 06/06/00"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/-12/2020 06/06/00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/-2020 06/06/00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020 -06/06/00"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020 06/-06/00"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020 06/06/-06"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 0/12/2020 06/06/00"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/0/2020 06/06/00"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/13/2020 06/06/00"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 50/12/2020 06/06/00"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020 90/06/00"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020 06/120/00"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline CS2103 webcast /by 12/12/2020 06/06/120"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2100 Lab /at 12/12/2020 06/06/00"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2100 Lab /at"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event /at 12/12/2020 06/06/00"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2100 Lab /at 12/12/2020"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at -12/12/2020 06/06/00"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/-12/2020 06/06/00"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/12/-2020 06/06/00"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/12/2020 -06/06/00"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/12/2020 06/-06/00"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/12/2020 06/06/-06"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 0/12/2020 06/06/00"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/0/2020 06/06/00"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/13/2020 06/06/00"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 50/12/2020 06/06/00"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/12/2020 90/06/00"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/12/2020 06/120/00"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS2103 webcast /at 12/12/2020 06/06/120"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "deadline GER1000 assignment /at 12/12/2020 06/06/00"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event CS1010X /by 12/12/2020 06/06/00"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete all my stuff"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete 1000"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "todo newHomework"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "event dinner /at 12/12/2020 06/06/00"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "help me"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "list all"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "done all my homework"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "bye bye"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Vielheim": 67
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "Vielheim": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "if [ -e \"./data/dukeData.txt\" ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "    rm data/dukeData.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Vielheim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Vielheim"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Vielheim": 8
    }
  }
]
