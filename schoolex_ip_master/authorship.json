[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "-": 26,
      "schoolex": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 63
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "T | ? | join sports club | "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "D | ? | return book | 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "E | ? | project meeting | 2/12/2019 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "D | ? | project | 2/2/2020 1000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "T | ? | buy eggs | "
      }
    ],
    "authorContributionMap": {
      "schoolex": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Meow the meme lord is a chat bot to help you manage your tasks and deadlines. It is a to-do list in a command interface form"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\t1. Download the latest Meow the meme lord.jar"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\t2. Double click the file to start the app"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    3. Use the text field to type in command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Available commands:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "-   `todo`, `deadline`, `event` Adds the specific task type to the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "-   `list` Lists out all current tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "-   `delete 1` Deletes the 1st task in the list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "-   `done 4` Marks the 4th task in the list as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "-   `find book` finds all task with `book` in its description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "## Key Features Examples"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Adding of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "### `todo`, `deadline`, `event` - Adds the specific task type"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Adds a todo, deadline or event task. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Note that for a deadline, a `/by` followed by the date in the `dd/MM/yyyy HHmm` format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Note that for an event, a `/at` followed by the date and time in the format `dd/MM/yyyy HHmm` format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "`todo feed my cat`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "`deadline return library book /by 20/9/2020 0000`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "`event Birthday party /at 20/9/2020 0000`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003eGot it. I\u0027ve added the task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e[T][x] feed my cat"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003eGot it. I\u0027ve added the task: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e[D][x] return library book (by: 00:00 20 Sep 2020)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003eGot it. I\u0027ve added the task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e[E][x] Birthday party (at: 00:00 20 Sep 2020)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Listing of tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "### `list` - Lists all current task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "List all the current task in the list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003eMeow list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e1. [T][x] feed my cat"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "schoolex"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Deleting of tasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "schoolex"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "schoolex"
        },
        "content": "### `delete` - deletes a task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Deletes the task specified by the number after the `delete` command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "schoolex"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "schoolex"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003eNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\u003e1. [T][x] feed my cat"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "schoolex": 76
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "schoolex"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "schoolex"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "schoolex"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "schoolex"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "schoolex"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "schoolex"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "schoolex"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "schoolex": 104
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * Deadline class Represents an Deadline task that contains a description along with the date and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  protected String deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Constructor that takes in the deadline description and the date/time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param description event description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param deadline date/time of event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns a modified string representation of the date/time"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return modfied string representation of the date/time"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      Date d1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      return new SimpleDateFormat(\"HH:mm, dd MMM yyyy\").format(d1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      System.out.println(\"Invalid format\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      return \"Invalid format\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns task type"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return \"D\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"D\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns the string representation of the date/time"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return original string representation of date/time"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getDeadline() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return deadline;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public void changeDeadline(String newDeadline) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(newDeadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      this.deadline \u003d newDeadline;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    } catch (ParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      throw new DukeException("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          \"Invalid date format! Please ensure date in this format dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"[D]\" + super.toString() + \" (by: \" + getTime() + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 71
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * Driver class for Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * @author Biao Yi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Parser parser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/memewomen.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/memecat.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public Duke() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    tasks \u003d new TaskList(Storage.load());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    parser \u003d new Parser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    ui \u003d new Ui(parser, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    ui.run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    Storage.save(ui.getUpdatedTasks().getList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public void start(Stage stage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    userInput \u003d new TextField();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    stage.setScene(scene);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    stage.show();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    stage.setTitle(\"Meow the meme lord\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    stage.setResizable(false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    sendButton.setOnMouseClicked("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        (event) -\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          handleUserInput();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    userInput.setOnAction("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        (event) -\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          handleUserInput();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private void handleUserInput() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    if (dukeText.getText().contains(\"Bye\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      Storage.save(tasks.getList());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    dialogContainer"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        .getChildren()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        .addAll("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke)));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private String getResponse(String input) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return parser.parseCommandUi(inputs,tasks);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    Duke d \u003d new Duke();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    d.run();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "schoolex": 138
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"OOPS!!! \" + this.getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 10
    }
  },
  {
    "path": "src/main/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * JUnit test class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * Used to test the individual class to ensure correctness"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public void toDoTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        ToDo todo \u003d new ToDo(\"return book\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Assert.assertEquals(todo.toString(), \"[T][\\u2718] return book\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Event event \u003d new Event(\"project meeting\",\"2/12/2019 1800\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Assert.assertEquals(event.toString(), \"[E][\\u2718] project meeting (at: 18:00, 02 Jan 2019)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public void DeadlineTest() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\",\"2/12/2019 1800\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Assert.assertEquals(deadline.toString(), \"[D][\\u2718] return book (by: 18:00, 02 Jan 2019)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public void parseCommandInvalidTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        parser.parseCommand(new String[]{\"test\"},new TaskList(new ArrayList\u003cTask\u003e()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Assert.assertEquals(os.toString(), \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 43
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * Event class Represents an event task that contains a description along with the date and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  protected String startTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Constructor that takes in event description and the date/time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param description event description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param startTime date/time of event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public Event(String description, String startTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns the string representation of the date/time"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return original string representation of date/time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getStartTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return startTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns a modified string representation of the date/time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return modified string representation of date/time"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      Date d1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(startTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      return new SimpleDateFormat(\"HH:mm, dd MMM yyyy\").format(d1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    } catch (ParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      System.out.println(\"Invalid format\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public void changeStartTime(String newStartTime) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(newStartTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      this.startTime \u003d newStartTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    } catch (ParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      throw new DukeException("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          \"Invalid date format! Please ensure date in this format dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns task type"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return \"E\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getType() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"E\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"[E]\" + super.toString() + \" (at: \" + getTime() + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 70
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/** Parser class Responsible for parsing user commands */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Takes in user commands in a tokenized string form Updates tasklist accordingly"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param inputs User inputs"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param tasks TaskList"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public void parseCommand(String[] inputs, TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    assert(inputs.length \u003e 0) ;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String command \u003d inputs[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    switch (command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"list\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        tasks.list();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"done\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          tasks.handleDone(inputs);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"deadline\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        tasks.handleDeadline(inputs);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"event\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        tasks.handleEvent(inputs);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          tasks.handleToDo(inputs);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          tasks.handleDelete(inputs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"find\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        tasks.handleFind(inputs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String parseCommandUi(String[] inputs, TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    assert(inputs.length \u003e 0) ;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String command \u003d inputs[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    switch (command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"list\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return tasks.list();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"done\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          return tasks.handleDone(inputs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          return e.getMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"deadline\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return tasks.handleDeadline(inputs);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return tasks.handleEvent(inputs);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"todo\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          return tasks.handleToDo(inputs);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          return e.getMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"delete\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          return tasks.handleDelete(inputs);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          return e.getMessage();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"find\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return tasks.handleFind(inputs);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"update\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return tasks.handleUpdate(inputs);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      case \"bye\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          throw new DukeException(\"Meow Meow does not understand\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          return e.getMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 102
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * Storage class. Used to save/load the TaskList to a predetermined directory saved file stored in"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * ./data/duke.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * @author Biao Yi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public static final String FILENAME \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public static final String DIRECTORY_NAME \u003d \"./data/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Static method to save a TaskList to the hard drive"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param list A TaskList object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public static void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      FileWriter writer \u003d new FileWriter(FILENAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      for (Task task : list) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        String extraInfo \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        if (task.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          Event task1 \u003d (Event) task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          extraInfo \u003d task1.getStartTime();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        } else if (task.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          Deadline task1 \u003d (Deadline) task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          extraInfo \u003d task1.getDeadline();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        String output \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            task.getType()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                + task.getStatusIcon().charAt(1)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                + task.getDescription()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                + extraInfo;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        writer.write(output + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      writer.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      System.out.println(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Static method to load a TaskList from hard drive Creates an empty directory and file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * \"./data/duke.txt\" if the file does not exist"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public static ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    List\u003cString\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // Checks if directory exists, else directory will be created"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    if (!directory.exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      directory.mkdir();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    // Checks if file exists, else create empty file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    File f \u003d new File(FILENAME);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    if (!f.exists()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      } catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      tasksList \u003d Files.readAllLines(Paths.get(FILENAME));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      System.out.println(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    for (String line : tasksList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      String[] tokens \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      String type \u003d tokens[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      String status \u003d tokens[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      String description \u003d tokens[2];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      Task t \u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      switch (type) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          t \u003d new Event(description, tokens[3]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          t \u003d new Deadline(description, tokens[3]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "schoolex"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        t.markDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      tasks.add(t);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return tasks;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 106
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/** Task class Represents a task along with the description and the status of the task */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Constructor that takes in a description of the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Return type of task, to be overwritten by its subclasses"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return \"\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /** Marks task as done */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns description of task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return description of task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Return status as a string representation"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return status"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); // return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * TaskList class Used to store an ArrayList of Tasks Handles the various type of commands for"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": " * modifying the list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Constructor to wrap an ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Handles the addition of an event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param inputs User input split into tokens"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String handleEvent(String[] inputs) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String[] tokens \u003d inputs[1].split(\" /at \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    tasks.add(new Event(tokens[0], tokens[1]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return getResponse();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Handles the addition of a deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param inputs User input split into tokens"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String handleDeadline(String[] inputs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String[] tokens \u003d inputs[1].split(\" /by \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    tasks.add(new Deadline(tokens[0], tokens[1]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return getResponse();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private String getResponse() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1) + \"\\nNow you have \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Handles the addition of a todo"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param inputs User input split into tokens"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String handleToDo(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    if (inputs.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    tasks.add(new ToDo(inputs[1]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return getResponse();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Marks a given task as Done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param inputs User input split into tokens"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String handleDone(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    tasks.get(index).markDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"Nice! I\u0027ve marked this task as done: \\n\" + tasks.get(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Deletes a specified task at indicated index"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param inputs User input split into tokens"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String handleDelete(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String oldIndex \u003d tasks.get(index).toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    tasks.remove(index);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"Noted. I\u0027ve removed this task: \\n\" + oldIndex + \"\\nNow you have \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String handleUpdate(String[] inputs) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    inputs \u003d inputs[1].split(\" \",2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    int index \u003d Integer.parseInt(inputs[0]) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    Task current \u003d tasks.get(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    if (current.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        ((Event) current).changeStartTime(inputs[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return \"I have updated the task as follows: \\n\" + current.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    else if (current.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        ((Deadline) current).changeDeadline(inputs[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return \"I have updated the task as follows: \\n\" + current.toString();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      } catch (DukeException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"Unable to update task\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /** Prints out the TaskList */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String list() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    StringBuilder out \u003d new StringBuilder(\"Meow list\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Meow list\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    int i \u003d 0;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    for (Task task : tasks) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      System.out.println(++i+ \". \" + task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      out.append(i).append(\". \").append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return out.toString();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Searches for a task with the specified keyword Prints it out"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param inputs User input split into tokens"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String handleFind(String[] inputs) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    StringBuilder out \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    int i \u003d 0;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    for (Task task : tasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      if (task.getDescription().contains(inputs[1])) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(++i + \". \" + task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        out.append(i).append(\". \").append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return out.toString();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /** Returns the ArrayList of tasks */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return this.tasks;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 154
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/** ToDo Class Represents a ToDo task that contains a description */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Constructor that takes in the task description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param description task description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Return task type"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return \"T\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "/** Ui class Handles the I/O of the program */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Constructor that takes in a parser and the tasklist"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param parser parser"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @param tasks TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public Ui(Parser parser, TaskList tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.parser \u003d parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private void printWelcomeMsg() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"______________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  private void printByeMsg() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    System.out.println(\"--------------------------------\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /** Runs the Ui */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    printWelcomeMsg();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    String[] inputs \u003d sc.nextLine().split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    while (!inputs[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      parser.parseCommand(inputs, tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "      inputs \u003d sc.nextLine().split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    printByeMsg();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * Returns the final TaskList"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   * @return Updated TaskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  public TaskList getUpdatedTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    return this.tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 52
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "schoolex": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "FC ACTUAL.TXT EXPECTED-UNIX.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "schoolex": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "schoolex": 3
    }
  }
]
