[
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.Dude;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        Dude bot \u003d new Dude();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        bot.run();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 8
    }
  },
  {
    "path": "src/main/java/dude/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The possible commands from the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    LIST, BYE, DONE, TODO, EVENT, DEADLINE, DELETE, FIND"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 9
    }
  },
  {
    "path": "src/main/java/dude/Dude.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The main class containing the key functionality of the bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Dude {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private static final String FILEPATH \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Dude() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks \u003d new TaskList(storage.read());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            ui.showFileNotFound();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (CorruptedFileException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                command.execute(tasks, ui ,storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                ui.showMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            } catch (CommandException | InvalidArgumentException |InvalidCommandException e){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 48,
      "-": 1
    }
  },
  {
    "path": "src/main/java/dude/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.InvalidArgumentException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.InvalidCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class that processes the logic behind the bot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public static Command parse(String input) throws InvalidArgumentException, InvalidCommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            String[] commands \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            Commands current;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                current \u003d Commands.valueOf(commands[0].toUpperCase());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                switch(current) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new ExitCommand(commands[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new ListCommand(commands[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new DoneCommand(commands[0], Integer.valueOf(commands[1]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new TodoCommand(commands[0], commands[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    String[] arr \u003d commands[1].split(\"/at\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new EventCommand(commands[0], arr[0], arr[1].trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    String[] arr2 \u003d commands[1].split(\"/by\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new DeadlineCommand(commands[0], arr2[0], arr2[1].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new DeleteCommand(commands[0], Integer.valueOf(commands[1]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    return new FindCommand(commands[0], commands[1].trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    throw new InvalidCommandException(\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                throw new InvalidArgumentException(\"Sorry, your argument cannot be empty!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            } catch (InvalidCommandException | IllegalArgumentException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                throw new InvalidCommandException(\"Sorry, your command is not recognised!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "fall9x": 56
    }
  },
  {
    "path": "src/main/java/dude/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The abstract task contains the action of the command and whether the command calls for an exit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String action;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Command(String action) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 26
    }
  },
  {
    "path": "src/main/java/dude/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command creates a deadline and adds it to the tasklist when executed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public DeadlineCommand(String action, String description, String by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            LocalDate temp \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            Deadline current \u003d new Deadline(description, temp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks.addTask(current);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            str.append(\"Got it bro, I\u0027ve added this task:\\n  \").append(current.toString() + \"\\n\").append("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    \"Now you have \").append(tasks.getCount()).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            ui.setMessage(str.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            storage.write(tasks.getTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(\"Sorry, Invalid date format!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 44
    }
  },
  {
    "path": "src/main/java/dude/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command deletes a task from the tasklist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public DeleteCommand(String action, int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException  {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            str.append(\"Understood. I\u0027ve removed this task:\\n  \").append("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    tasks.getTask(index - 1).toString()).append(\"Now you have \").append("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    tasks.getCount() - 1).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks.deleteTask(index - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            ui.setMessage(str.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            storage.write(tasks.getTasks());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(\"Sorry! The index to be removed does not exist!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 37
    }
  },
  {
    "path": "src/main/java/dude/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command changes the status of an incomplete task to complete."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public DoneCommand(String action, int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException  {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks.getTask(index - 1).markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            str.append(\"Solid bro!! I\u0027ve marked this task as done:\\n\").append("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    tasks.getTask(index - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            ui.setMessage(str.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            storage.write(tasks.getTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(\"Sorry! The task index you wanted to complete does not exist!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 36
    }
  },
  {
    "path": "src/main/java/dude/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command creates an event and adds it to the tasklist when executed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public EventCommand(String action, String description, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            LocalDate temp \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            Event current \u003d new Event(description, temp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks.addTask(current);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            str.append(\"Got it bro, I\u0027ve added this task:\\n  \").append(current.toString() + \"\\n\").append("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    \"Now you have \").append(tasks.getCount()).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            ui.setMessage(str.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            storage.write(tasks.getTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(\"Sorry, Invalid date format!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 45
    }
  },
  {
    "path": "src/main/java/dude/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command signals for the bot to terminate."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public ExitCommand(String action) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        ui.sendOff();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 20
    }
  },
  {
    "path": "src/main/java/dude/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command gets the items in the tasklist that contains the keyword."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public FindCommand(String action, String keyWord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        ArrayList\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            if (task.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                searchList.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        Command command \u003d new ListCommand(\"list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        command.execute(new TaskList(searchList), ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        if (searchList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(\"The keyword you searched for does not result in any results.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 37
    }
  },
  {
    "path": "src/main/java/dude/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command gets the ui class to list all of the current tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public ListCommand(String action) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        str.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getCount(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            str.append(String.valueOf(i+1) + \".\" + tasks.getTask(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        ui.setMessage(str.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 24
    }
  },
  {
    "path": "src/main/java/dude/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The command creates a todo task and adds it to the tasklist when executed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public TodoCommand(String action, String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            Todo current \u003d new Todo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            tasks.addTask(current);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            str.append(\"Got it bro, I\u0027ve added this task:\\n  \").append(current.toString() + \"\\n\").append("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    \"Now you have \").append(tasks.getCount()).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            ui.setMessage(str.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            storage.write(tasks.getTasks());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CommandException(\"Sorry, ToDo does not accept this argument!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 39
    }
  },
  {
    "path": "src/main/java/dude/task/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class handles Tasks that contains a date parameter."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class DatedTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public DatedTask(String description, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public DatedTask(String description, boolean isDone, LocalDate date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return super.toSave() + \" | \" + date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return super.toString() + \" (date: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "fall9x": 33
    }
  },
  {
    "path": "src/main/java/dude/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class handles tasks with deadlines to meet."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description, isDone, by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return \"D | \" +  super.toSave();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 27
    }
  },
  {
    "path": "src/main/java/dude/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class handles tasks that occurs on a specific date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description, isDone, at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return \"E | \" +  super.toSave();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 27
    }
  },
  {
    "path": "src/main/java/dude/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class that contains the key functionality of a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void unMarkAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return (this.isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return (isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 45
    }
  },
  {
    "path": "src/main/java/dude/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * Todo handles the tasks that only contains descriptions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return \"T | \" + super.toSave();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 27
    }
  },
  {
    "path": "src/main/java/dude/util/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class CommandException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 7
    }
  },
  {
    "path": "src/main/java/dude/util/CorruptedFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class CorruptedFileException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public CorruptedFileException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 7
    }
  },
  {
    "path": "src/main/java/dude/util/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class InvalidArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public InvalidArgumentException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 7
    }
  },
  {
    "path": "src/main/java/dude/util/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 7
    }
  },
  {
    "path": "src/main/java/dude/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Event;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Todo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class that handles the reading and writing of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public ArrayList\u003cTask\u003e read() throws FileNotFoundException, CorruptedFileException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        ArrayList\u003cString\u003e lineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            lineList.add(scanner.nextLine());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            return lineConverter(lineList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        } catch (CorruptedFileException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void write(List\u003cTask\u003e textToAdd) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        File dataDir \u003d new File(f.toPath().getParent().toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        fileWriter.write(taskConverter(textToAdd));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private ArrayList\u003cTask\u003e lineConverter(ArrayList\u003cString\u003e lineList) throws CorruptedFileException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        for (String s : lineList)  {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                String[] temp \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                if (!temp[1].equals(\"1\") \u0026\u0026 !temp[1].equals(\"0\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                if (temp[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    taskList.add(new Todo(temp[2], func.apply(temp[1])));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                } else if (temp[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    taskList.add(new Deadline(temp[2], func.apply(temp[1]), LocalDate.parse(temp[3])));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                } else if (temp[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    taskList.add(new Event(temp[2], func.apply(temp[1]), LocalDate.parse(temp[3])));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                    throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String taskConverter(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fall9x"
        },
        "content": "            str.append(t.toSave()).append(\"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private Function\u003cString, Boolean\u003e func \u003d x -\u003e x.equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 95
    }
  },
  {
    "path": "src/main/java/dude/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class that handles all of the tasks while the program is running."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 43
    }
  },
  {
    "path": "src/main/java/dude/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "package dude.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": " * The class the handles all the on screen interaction with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private static final String LINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        str.append(\"Yo I\u0027m Dood!!\\nAnything I can do for you?\\n\").append(\"The commands available are:\\n\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                .append(\"list     | Shows the list of tasks on the bot.\\n\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                .append(\"bye      | Exits the program\\n\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                .append(\"done     | Marks the Task as done. Format is \u0027done {task index}.\\n\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                .append(\"todo     | Creates a ToDo task. Format is \u0027Todo {description}.\\n\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                .append(\"event    | Creates an Event task. Format is \u0027event {description} /at {date in YYYY-MM-DD}.\\n\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                .append(\"deadline | Creates a DeadLine task. Format is \u0027deadline {description} /by {date in YY-MM-DD}.\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fall9x"
        },
        "content": "                .append(\"\\ndelete   | Deletes a Task. Format is \u0027 delete {task index}\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        System.out.println(template(str.toString()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void sendOff() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        message \u003d \"See you again!!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String template(String reply) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return LINE + reply + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void showFileNotFound() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        System.out.println(template(\"No existing user data file found. Welcome to the bot club:)\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        System.out.println(template(\"Your file has been corrupted :( Unfortunately the data cannot be used\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        System.out.println(template(message));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void showMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        System.out.println(template(message));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void setMessage(String message) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 66
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void eventTest_creation_success(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        Event event \u003d new Event(\"test\", true, LocalDate.parse(\"2020-10-12\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        assertEquals(\"[E][✓] test (date: Oct 12 2020)\", event.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 16
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "import dude.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    public void todoTest_creation_success(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        Todo todo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "        assertEquals(todo.toString(), \"[T][✗] test\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fall9x": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fall9x"
        },
        "content": "todo read lecture notes"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fall9x"
        },
        "content": "deadline read lecture notes /by Sunday 23rd 11pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fall9x"
        },
        "content": "event statistic lecture /at Monday 24th 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fall9x"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fall9x"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fall9x"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fall9x"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fall9x"
        },
        "content": "todo buy new pens"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fall9x"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fall9x"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fall9x"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "fall9x": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fall9x"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fall9x"
        },
        "content": "java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fall9x"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fall9x"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "fall9x": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fall9x"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Dude.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "fall9x": 1
    }
  }
]
