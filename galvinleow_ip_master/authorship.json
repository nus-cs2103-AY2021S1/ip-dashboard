[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    return String.format(\"[D]%s (by: %s)\", super.toString(), by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    String logo \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "        \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    System.out.println(logo + \"\\nHello ! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    ArrayList\u003cTask\u003e dataArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    String input \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "      input \u003d scanner.next();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "      // Switch case use for scalability"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "      switch (input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          int count \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          for (Task task : dataArrayList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            System.out.printf(\"%d.%s\\n\", count, task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          int change \u003d scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          Task task \u003d dataArrayList.get(change);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          task.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          System.out.printf(\"%s\\n\", task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          int delete \u003d scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          System.out.printf(\"\\t%s\\n\", dataArrayList.get(delete));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          dataArrayList.remove(delete);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          System.out.printf(\"Now you have %o tasks in the list\\n\", dataArrayList.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          if (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            String addMessage \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "              case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                String descToDo \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                if (descToDo.equals(\"\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                System.out.println(addMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                dataArrayList.add(new Todo(descToDo));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "              case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  scanner.useDelimiter(\"/by\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  String descDeadline \u003d scanner.next().trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  if (descDeadline.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                    throw new DukeException("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                        \"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  scanner.skip(\"/by\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  String by \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  System.out.println(addMessage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  dataArrayList.add(new Deadline(descDeadline, by));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "              case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  System.out.println(addMessage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  scanner.useDelimiter(\"/at\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  String descEvent \u003d scanner.next().trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  if (descEvent.equals(\"\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                    throw new DukeException("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                        \"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  scanner.skip(\"/at\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  String at \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The event date cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  dataArrayList.add(new Event(descEvent, at));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                  break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "              default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "                throw new Exception(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            int arrListSize \u003d dataArrayList.size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            System.out.println(\"\\t\" + dataArrayList.get(arrListSize - 1));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            scanner.reset();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "            System.out.printf(\"Now you have %o tasks in list.\\n\", arrListSize);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "      }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 94,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    return String.format(\"[E]%s (at: %s)\", super.toString(), at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick of X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  protected void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "galvinleow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "    return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF8"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "galvinleow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "galvinleow": 2,
      "-": 20
    }
  }
]
