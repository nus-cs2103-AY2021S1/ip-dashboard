[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"}"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"}"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"}"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"}"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"}"},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":50,"author":{"gitId":"nguyendqminh"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"nguyendqminh"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"nguyendqminh"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"nguyendqminh"},"content":"}"},{"lineNumber":54,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":55,"author":{"gitId":"nguyendqminh"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"nguyendqminh"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"nguyendqminh"},"content":"}"},{"lineNumber":58,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":59,"author":{"gitId":"nguyendqminh"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"nguyendqminh"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":61}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"3"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"[E][X] IOI day 2 (at: 2020-09-19T17:00)"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"[T][O] do 5 chess puzzles"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"[D][X] CS2030 iP (by: 2020-09-18T23:59)"}],"authorContributionMap":{"nguyendqminh":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"![](Ui.png)"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"Duke is a simple application to help you manage your tasks. The tasks can be categorized into one of the following types:"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"* Todos"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"* Events (and their starting times)"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"* Deadlines (and their due times)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"Duke also supports marking tasks as done, deleting, and finding tasks that match a keyword. Your data will be stored locally and automatically loaded whenever you start the app."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"**Note:** Times can be either of the following formats:"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"* `yy-M-dd H:mm`"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"    * E.g.: `20-09-21 05:45` or `20-9-21 5:45`"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"* `yyyy-MM-dd\u0027T\u0027HH:mm`"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"    * E.g.: `2020-09-21T05:45` "},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"### `event \u003cdescription\u003e [/p \u003cposition\u003e] /at \u003ctime\u003e` "},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"Add an event that will happen at a specified time to a position in the task list."},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"If argument `/p` is either unspecified or is invalid, the task will be added to the back of the list by default."},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"Example: "},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"`event IOI day 2 /p 1 /at 20-9-19 17:00`"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"Outcome example:"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"[E][X] IOI day 2 (at: 2020-09-19T17:00)"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"Now you have 4 tasks in the list."},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"### `deadline \u003cdescription\u003e [/p \u003cposition\u003e] /by \u003ctime\u003e` "},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"Add a deadline that dues at a specified time to a position in the task list."},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"If argument `/p` is either unspecified or is invalid, the task will be added to the back of the list by default."},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"Example: "},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"`deadline CS2030 iP /by 2020-09-18T23:59`"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"Outcome example:"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"[D][X] CS2030 iP (by: 2020-09-18T23:59"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"Now you have 3 tasks in the list."},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"### `todo \u003cdescription\u003e [/p \u003cposition\u003e]` "},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":"Add a todo to a position in the task list."},{"lineNumber":50,"author":{"gitId":"nguyendqminh"},"content":"If argument `/p` is either unspecified or is invalid, the task will be added to the back of the list by default."},{"lineNumber":51,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":52,"author":{"gitId":"nguyendqminh"},"content":"Example: "},{"lineNumber":53,"author":{"gitId":"nguyendqminh"},"content":"`todo do 5 chess puzzles /p 2`"},{"lineNumber":54,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":55,"author":{"gitId":"nguyendqminh"},"content":"Outcome example:"},{"lineNumber":56,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":57,"author":{"gitId":"nguyendqminh"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":58,"author":{"gitId":"nguyendqminh"},"content":"[T][X] do 5 chess puzzles"},{"lineNumber":59,"author":{"gitId":"nguyendqminh"},"content":"Now you have 3 tasks in the list."},{"lineNumber":60,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":61,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":62,"author":{"gitId":"nguyendqminh"},"content":"### `done \u003ctask_id\u003e` "},{"lineNumber":63,"author":{"gitId":"nguyendqminh"},"content":"Mark a task with the specified task_id as done"},{"lineNumber":64,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":65,"author":{"gitId":"nguyendqminh"},"content":"Example: "},{"lineNumber":66,"author":{"gitId":"nguyendqminh"},"content":"`done 1`"},{"lineNumber":67,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":68,"author":{"gitId":"nguyendqminh"},"content":"Outcome example:"},{"lineNumber":69,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":70,"author":{"gitId":"nguyendqminh"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":71,"author":{"gitId":"nguyendqminh"},"content":"[E][O] IOI day 2 (at: 2020-09-19T17:00)"},{"lineNumber":72,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":73,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":74,"author":{"gitId":"nguyendqminh"},"content":"### `list` "},{"lineNumber":75,"author":{"gitId":"nguyendqminh"},"content":"List all tasks currently present in the task list."},{"lineNumber":76,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":77,"author":{"gitId":"nguyendqminh"},"content":"Example: "},{"lineNumber":78,"author":{"gitId":"nguyendqminh"},"content":"`list`"},{"lineNumber":79,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":80,"author":{"gitId":"nguyendqminh"},"content":"Outcome example: "},{"lineNumber":81,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":82,"author":{"gitId":"nguyendqminh"},"content":"Here are the tasks in your list:"},{"lineNumber":83,"author":{"gitId":"nguyendqminh"},"content":"1. [E][O] IOI day 2 (at: 2020-09-19T17:00)"},{"lineNumber":84,"author":{"gitId":"nguyendqminh"},"content":"2. [T][O] do 5 chess puzzles"},{"lineNumber":85,"author":{"gitId":"nguyendqminh"},"content":"3. [D][X] CS2030 iP (by: 2020-09-18T23:59)"},{"lineNumber":86,"author":{"gitId":"nguyendqminh"},"content":"4. [E][X] Worlds 2020 (at: 2020-10-04T16:00)"},{"lineNumber":87,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":88,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":89,"author":{"gitId":"nguyendqminh"},"content":"### `delete \u003ctask_id\u003e` "},{"lineNumber":90,"author":{"gitId":"nguyendqminh"},"content":"Delete the task that has the specified task_id"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"nguyendqminh"},"content":"Example: "},{"lineNumber":93,"author":{"gitId":"nguyendqminh"},"content":"`delete 3`"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"nguyendqminh"},"content":"Outcome example:"},{"lineNumber":96,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":97,"author":{"gitId":"nguyendqminh"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":98,"author":{"gitId":"nguyendqminh"},"content":"[D][X] CS2030 iP (by: 2020-09-18T23:59)"},{"lineNumber":99,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"nguyendqminh"},"content":"### `find \u003ckeyword\u003e` "},{"lineNumber":102,"author":{"gitId":"nguyendqminh"},"content":"Find all tasks whose description match the specified keyword."},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"nguyendqminh"},"content":"Example: "},{"lineNumber":105,"author":{"gitId":"nguyendqminh"},"content":"`find Worlds`"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"nguyendqminh"},"content":"Outcome example: "},{"lineNumber":108,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":109,"author":{"gitId":"nguyendqminh"},"content":"Here are the matching tasks in your list:"},{"lineNumber":110,"author":{"gitId":"nguyendqminh"},"content":"1. [E][X] Worlds 2020 (at: 2020-10-04T16:00)"},{"lineNumber":111,"author":{"gitId":"nguyendqminh"},"content":"```"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"nguyendqminh"},"content":"### `bye`"},{"lineNumber":114,"author":{"gitId":"nguyendqminh"},"content":"Save the data and close the application."}],"authorContributionMap":{"-":12,"nguyendqminh":102}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":51,"author":{"gitId":"nguyendqminh"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":53,"author":{"gitId":"nguyendqminh"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"nguyendqminh"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"nguyendqminh"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":57,"author":{"gitId":"nguyendqminh"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":59,"author":{"gitId":"nguyendqminh"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"nguyendqminh"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"nguyendqminh"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"nguyendqminh"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"nguyendqminh"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":65,"author":{"gitId":"nguyendqminh"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":67,"author":{"gitId":"nguyendqminh"},"content":":init"},{"lineNumber":68,"author":{"gitId":"nguyendqminh"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":70,"author":{"gitId":"nguyendqminh"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":72,"author":{"gitId":"nguyendqminh"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"nguyendqminh"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"nguyendqminh"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"nguyendqminh"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":77,"author":{"gitId":"nguyendqminh"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"nguyendqminh"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":80,"author":{"gitId":"nguyendqminh"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":82,"author":{"gitId":"nguyendqminh"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"nguyendqminh"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":85,"author":{"gitId":"nguyendqminh"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":87,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":88,"author":{"gitId":"nguyendqminh"},"content":"@rem Execute Gradle"},{"lineNumber":89,"author":{"gitId":"nguyendqminh"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":90,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":91,"author":{"gitId":"nguyendqminh"},"content":":end"},{"lineNumber":92,"author":{"gitId":"nguyendqminh"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":93,"author":{"gitId":"nguyendqminh"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":94,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":95,"author":{"gitId":"nguyendqminh"},"content":":fail"},{"lineNumber":96,"author":{"gitId":"nguyendqminh"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":97,"author":{"gitId":"nguyendqminh"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":98,"author":{"gitId":"nguyendqminh"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":99,"author":{"gitId":"nguyendqminh"},"content":"exit /b 1"},{"lineNumber":100,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":101,"author":{"gitId":"nguyendqminh"},"content":":mainEnd"},{"lineNumber":102,"author":{"gitId":"nguyendqminh"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":103,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":104,"author":{"gitId":"nguyendqminh"},"content":":omega"}],"authorContributionMap":{"nguyendqminh":104}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"nguyendqminh":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":" * Class to handle the Deadline task type"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    protected LocalDateTime byTime;"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yy-M-d H:mm\");"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"            this.byTime \u003d LocalDateTime.parse(by, formatter1);"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"        } catch (DateTimeParseException e1) {"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"            try {"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"                this.byTime \u003d LocalDateTime.parse(by, formatter2);"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"            } catch (DateTimeParseException e2) {"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(\"Cannot parse event time:\");"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(by);"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"    public Deadline(String description, boolean isDone, String by) {"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"        super(description, isDone);"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"            this.byTime \u003d LocalDateTime.parse(by, formatter1);"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"        } catch (DateTimeParseException e1) {"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"                this.byTime \u003d LocalDateTime.parse(by, formatter2);"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"            } catch (DateTimeParseException e2) {"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(\"Cannot parse event time:\");"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(by);"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.byTime);"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":44}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"        return new DialogBox(text, img);"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"        db.flip();"},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"        return db;"},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":50,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"nguyendqminh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":52,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"nguyendqminh"},"content":"    private void flip() {"},{"lineNumber":54,"author":{"gitId":"nguyendqminh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":55,"author":{"gitId":"nguyendqminh"},"content":"        Collections.reverse(tmp);"},{"lineNumber":56,"author":{"gitId":"nguyendqminh"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":57,"author":{"gitId":"nguyendqminh"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":58,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.nio.file.Path;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import java.nio.file.Paths;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":" * Main class"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"    private TaskList tasks;"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"    private UI ui;"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"    public Duke() {"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"        ui \u003d new UI();"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"        String directory \u003d System.getProperty(\"user.dir\");"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"        Path filePath \u003d Paths.get(directory, \"data\", \"data.txt\");"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"            tasks \u003d new TaskList(storage.loadData());"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"        } catch (Exception e) {"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"            ui.displayError(e);"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    public String getResponse(String input) {"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"            Parser parser \u003d new Parser(input);"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"            return parser.run(tasks, storage, ui);"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"        } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"            return \"Unknown command\";"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"nguyendqminh":30}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":" * Class to handle the Event task type"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    protected LocalDateTime atTime;"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"    public Event(String description, String at) {"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"            this.atTime \u003d LocalDateTime.parse(at, formatter1);"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"        } catch (DateTimeParseException e1) {"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"            try {"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"                this.atTime \u003d LocalDateTime.parse(at, formatter2);"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"            } catch (DateTimeParseException e2) {"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(\"Cannot parse event time:\");"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(at);"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    public Event(String description, boolean isDone, String at) {"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"        super(description, isDone);"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"            this.atTime \u003d LocalDateTime.parse(at, formatter1);"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"        } catch (DateTimeParseException e1) {"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"                this.atTime \u003d LocalDateTime.parse(at, formatter2);"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"            } catch (DateTimeParseException e2) {"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(\"Cannot parse event time:\");"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"                System.out.println(at);"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.atTime);"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":43}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"import javafx.stage.Stage;"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"    public void initialize() {"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"        duke \u003d d;"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"    private void handleUserInput() {"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"        );"},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"        userInput.clear();"},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":48}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":" * Class to handle parsing user command"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"    private Task task;"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"    private String commandType;"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"    private int index;"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"     * Parse a given command string to relevant information"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"     * @param command - input command by user"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"    public Parser(String command) {"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"        this.commandType \u003d \"undefined\";"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"                this.commandType \u003d \"bye\";"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"                this.commandType \u003d \"list\";"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"            } else if (command.startsWith(\"done\")) {"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"                if (command.length() \u003c 5) {"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"                    throw new DukeException(\":( OOPS!!! Task index not found.\");"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"                this.commandType \u003d \"done\";"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"                this.index \u003d Integer.parseInt(command.substring(5)) - 1;"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"            } else if (command.startsWith(\"delete\")) {"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"                if (command.length() \u003c 7) {"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"                    throw new DukeException(\":( OOPS!!! Task index not found.\");"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"                this.commandType \u003d \"delete\";"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"                this.index \u003d Integer.parseInt(command.substring(7)) - 1;"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"            } else if (command.startsWith(\"find\")) {"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"                if (command.length() \u003c 5) {"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"                    throw new DukeException(\":( OOPS!!! You need to specify a keyword to search.\");"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"                this.commandType \u003d \"find\";"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"                this.description \u003d command.substring(5);"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"                Task newTask \u003d null;"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"                String type;"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"                String description;"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"                String date;"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"                if (command.startsWith(\"todo\")) {"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"                    if (command.length() \u003c 5) {"},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"                        throw new DukeException(\":( OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"                    }"},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"                    type \u003d \"todo\";"},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":"                    description \u003d command.substring(5);"},{"lineNumber":50,"author":{"gitId":"nguyendqminh"},"content":"                    date \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"nguyendqminh"},"content":"                } else if (command.startsWith(\"deadline\")) {"},{"lineNumber":52,"author":{"gitId":"nguyendqminh"},"content":"                    if (command.length() \u003c 9) {"},{"lineNumber":53,"author":{"gitId":"nguyendqminh"},"content":"                        throw new DukeException(\":( OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":54,"author":{"gitId":"nguyendqminh"},"content":"                    }"},{"lineNumber":55,"author":{"gitId":"nguyendqminh"},"content":"                    String rest \u003d command.substring(9);"},{"lineNumber":56,"author":{"gitId":"nguyendqminh"},"content":"                    int byPosition \u003d rest.indexOf(\"/by \");"},{"lineNumber":57,"author":{"gitId":"nguyendqminh"},"content":"                    if (byPosition \u003d\u003d -1) {"},{"lineNumber":58,"author":{"gitId":"nguyendqminh"},"content":"                        throw new DukeException(\":( OOPS!!! Deadline time specification not found.\");"},{"lineNumber":59,"author":{"gitId":"nguyendqminh"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"nguyendqminh"},"content":"                    type \u003d \"deadline\";"},{"lineNumber":61,"author":{"gitId":"nguyendqminh"},"content":"                    description \u003d rest.substring(0, byPosition - 1);"},{"lineNumber":62,"author":{"gitId":"nguyendqminh"},"content":"                    date \u003d rest.substring(byPosition + 4);"},{"lineNumber":63,"author":{"gitId":"nguyendqminh"},"content":"                } else if (command.startsWith(\"event\")) {"},{"lineNumber":64,"author":{"gitId":"nguyendqminh"},"content":"                    if (command.length() \u003c 6) {"},{"lineNumber":65,"author":{"gitId":"nguyendqminh"},"content":"                        throw new DukeException(\":( OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"nguyendqminh"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"nguyendqminh"},"content":"                    String rest \u003d command.substring(6);"},{"lineNumber":68,"author":{"gitId":"nguyendqminh"},"content":"                    int atPosition \u003d rest.indexOf(\"/at \");"},{"lineNumber":69,"author":{"gitId":"nguyendqminh"},"content":"                    if (atPosition \u003d\u003d -1) {"},{"lineNumber":70,"author":{"gitId":"nguyendqminh"},"content":"                        throw new DukeException(\":( OOPS!!! Event time specification not found.\");"},{"lineNumber":71,"author":{"gitId":"nguyendqminh"},"content":"                    }"},{"lineNumber":72,"author":{"gitId":"nguyendqminh"},"content":"                    type \u003d \"event\";"},{"lineNumber":73,"author":{"gitId":"nguyendqminh"},"content":"                    description \u003d rest.substring(0, atPosition - 1);"},{"lineNumber":74,"author":{"gitId":"nguyendqminh"},"content":"                    date \u003d rest.substring(atPosition + 4);"},{"lineNumber":75,"author":{"gitId":"nguyendqminh"},"content":"                } else {"},{"lineNumber":76,"author":{"gitId":"nguyendqminh"},"content":"                    throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":77,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"nguyendqminh"},"content":"                int prioPosition \u003d description.indexOf(\"/p \");"},{"lineNumber":79,"author":{"gitId":"nguyendqminh"},"content":"                if (prioPosition !\u003d -1) {"},{"lineNumber":80,"author":{"gitId":"nguyendqminh"},"content":"                    this.index \u003d Integer.parseInt(description.substring(prioPosition + 3)) - 1;"},{"lineNumber":81,"author":{"gitId":"nguyendqminh"},"content":"                    description \u003d description.substring(0, prioPosition - 1);"},{"lineNumber":82,"author":{"gitId":"nguyendqminh"},"content":"                } else {"},{"lineNumber":83,"author":{"gitId":"nguyendqminh"},"content":"                    this.index \u003d -1;"},{"lineNumber":84,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":86,"author":{"gitId":"nguyendqminh"},"content":"                switch (type) {"},{"lineNumber":87,"author":{"gitId":"nguyendqminh"},"content":"                case \"todo\": {"},{"lineNumber":88,"author":{"gitId":"nguyendqminh"},"content":"                    newTask \u003d new Todo(description);"},{"lineNumber":89,"author":{"gitId":"nguyendqminh"},"content":"                    break;"},{"lineNumber":90,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"nguyendqminh"},"content":"                case \"deadline\": {"},{"lineNumber":92,"author":{"gitId":"nguyendqminh"},"content":"                    newTask \u003d new Deadline(description, date);"},{"lineNumber":93,"author":{"gitId":"nguyendqminh"},"content":"                    break;"},{"lineNumber":94,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"nguyendqminh"},"content":"                case \"event\": {"},{"lineNumber":96,"author":{"gitId":"nguyendqminh"},"content":"                    newTask \u003d new Event(description, date);"},{"lineNumber":97,"author":{"gitId":"nguyendqminh"},"content":"                    break;"},{"lineNumber":98,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"nguyendqminh"},"content":"                default: {"},{"lineNumber":100,"author":{"gitId":"nguyendqminh"},"content":"                    throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":101,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"nguyendqminh"},"content":"                this.commandType \u003d \"add\";"},{"lineNumber":104,"author":{"gitId":"nguyendqminh"},"content":"                this.task \u003d newTask;"},{"lineNumber":105,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"nguyendqminh"},"content":"        } catch (DukeException e) {"},{"lineNumber":107,"author":{"gitId":"nguyendqminh"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":108,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":111,"author":{"gitId":"nguyendqminh"},"content":"    public String run(TaskList tasks, Storage storage, UI ui) throws Exception {"},{"lineNumber":112,"author":{"gitId":"nguyendqminh"},"content":"        String commandType \u003d getCommandType();"},{"lineNumber":113,"author":{"gitId":"nguyendqminh"},"content":"        StringBuilder response \u003d new StringBuilder();"},{"lineNumber":114,"author":{"gitId":"nguyendqminh"},"content":"        switch (commandType) {"},{"lineNumber":115,"author":{"gitId":"nguyendqminh"},"content":"        case \"bye\": {"},{"lineNumber":116,"author":{"gitId":"nguyendqminh"},"content":"            storage.saveData(tasks.getTasks());"},{"lineNumber":117,"author":{"gitId":"nguyendqminh"},"content":"            response.append(ui.byeMessage());"},{"lineNumber":118,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":119,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"nguyendqminh"},"content":"        case \"list\": {"},{"lineNumber":121,"author":{"gitId":"nguyendqminh"},"content":"            response.append(\"Here are the tasks in your list:\\n\");"},{"lineNumber":122,"author":{"gitId":"nguyendqminh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":123,"author":{"gitId":"nguyendqminh"},"content":"                response.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i)));"},{"lineNumber":124,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"nguyendqminh"},"content":"        case \"done\": {"},{"lineNumber":128,"author":{"gitId":"nguyendqminh"},"content":"            int index \u003d getIndex();"},{"lineNumber":129,"author":{"gitId":"nguyendqminh"},"content":"            if (index \u003e\u003d tasks.size()) {"},{"lineNumber":130,"author":{"gitId":"nguyendqminh"},"content":"                throw new DukeException(\":( OOPS!!! Task index not found.\");"},{"lineNumber":131,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"nguyendqminh"},"content":"            tasks.get(index).markAsDone();"},{"lineNumber":133,"author":{"gitId":"nguyendqminh"},"content":"            response.append(\"Nice! I\u0027ve marked this task as done:\\n\");"},{"lineNumber":134,"author":{"gitId":"nguyendqminh"},"content":"            response.append(tasks.get(index).toString()).append(\"\\n\");"},{"lineNumber":135,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":136,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"nguyendqminh"},"content":"        case \"delete\": {"},{"lineNumber":138,"author":{"gitId":"nguyendqminh"},"content":"            int index \u003d getIndex();"},{"lineNumber":139,"author":{"gitId":"nguyendqminh"},"content":"            if (index \u003e\u003d tasks.size()) {"},{"lineNumber":140,"author":{"gitId":"nguyendqminh"},"content":"                throw new DukeException(\":( OOPS!!! Task index not found.\");"},{"lineNumber":141,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"nguyendqminh"},"content":"            response.append(\"Noted. I\u0027ve removed this task:\\n\");"},{"lineNumber":143,"author":{"gitId":"nguyendqminh"},"content":"            response.append(tasks.get(index).toString()).append(\"\\n\");"},{"lineNumber":144,"author":{"gitId":"nguyendqminh"},"content":"            tasks.removeTask(index);"},{"lineNumber":145,"author":{"gitId":"nguyendqminh"},"content":"            response.append(String.format(\"Now you have %d tasks in the list.\\n\", tasks.size()));"},{"lineNumber":146,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":147,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"nguyendqminh"},"content":"        case \"add\": {"},{"lineNumber":149,"author":{"gitId":"nguyendqminh"},"content":"            Task newTask \u003d getTask();"},{"lineNumber":150,"author":{"gitId":"nguyendqminh"},"content":"            tasks.addTask(newTask, getIndex());"},{"lineNumber":151,"author":{"gitId":"nguyendqminh"},"content":"            response.append(\"Got it. I\u0027ve added this task:\\n\");"},{"lineNumber":152,"author":{"gitId":"nguyendqminh"},"content":"            response.append(newTask.toString()).append(\"\\n\");"},{"lineNumber":153,"author":{"gitId":"nguyendqminh"},"content":"            response.append(String.format(\"Now you have %d tasks in the list\\n\", tasks.size()));"},{"lineNumber":154,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":155,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"nguyendqminh"},"content":"        case \"find\": {"},{"lineNumber":157,"author":{"gitId":"nguyendqminh"},"content":"            String keyword \u003d getDescription();"},{"lineNumber":158,"author":{"gitId":"nguyendqminh"},"content":"            int counter \u003d 0;"},{"lineNumber":159,"author":{"gitId":"nguyendqminh"},"content":"            for (Task task : tasks.getTasks()) {"},{"lineNumber":160,"author":{"gitId":"nguyendqminh"},"content":"                if (task.description.contains(keyword)) {"},{"lineNumber":161,"author":{"gitId":"nguyendqminh"},"content":"                    if (counter \u003d\u003d 0) {"},{"lineNumber":162,"author":{"gitId":"nguyendqminh"},"content":"                        response.append(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":163,"author":{"gitId":"nguyendqminh"},"content":"                    }"},{"lineNumber":164,"author":{"gitId":"nguyendqminh"},"content":"                    ++counter;"},{"lineNumber":165,"author":{"gitId":"nguyendqminh"},"content":"                    response.append(String.format(\"%d.%s\\n\", counter, task.toString()));"},{"lineNumber":166,"author":{"gitId":"nguyendqminh"},"content":"                }"},{"lineNumber":167,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"nguyendqminh"},"content":"            if (counter \u003d\u003d 0) {"},{"lineNumber":169,"author":{"gitId":"nguyendqminh"},"content":"                response.append(\"No task was found.\\n\");"},{"lineNumber":170,"author":{"gitId":"nguyendqminh"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":172,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"nguyendqminh"},"content":"        default: {"},{"lineNumber":174,"author":{"gitId":"nguyendqminh"},"content":"            response.append(\"Unknown command.\\n\");"},{"lineNumber":175,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"nguyendqminh"},"content":"        return response.toString();"},{"lineNumber":178,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":180,"author":{"gitId":"nguyendqminh"},"content":"    public int getIndex() {"},{"lineNumber":181,"author":{"gitId":"nguyendqminh"},"content":"        return this.index;"},{"lineNumber":182,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":184,"author":{"gitId":"nguyendqminh"},"content":"    public Task getTask() {"},{"lineNumber":185,"author":{"gitId":"nguyendqminh"},"content":"        return this.task;"},{"lineNumber":186,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":188,"author":{"gitId":"nguyendqminh"},"content":"    public String getCommandType() {"},{"lineNumber":189,"author":{"gitId":"nguyendqminh"},"content":"        return this.commandType;"},{"lineNumber":190,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":192,"author":{"gitId":"nguyendqminh"},"content":"    public String getDescription() {"},{"lineNumber":193,"author":{"gitId":"nguyendqminh"},"content":"        return this.description;"},{"lineNumber":194,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":195}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import java.io.BufferedWriter;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":" * Class to help saving data to local storage"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"    private final Path filePath;"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"    public Storage(Path filePath) {"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"    private void openFile() throws Exception {"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"        if (!Files.exists(this.filePath)) {"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"            Files.createDirectories(this.filePath.getParent());"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"            Files.createFile(this.filePath);"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"     * Load data from local storage"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"     * @throws Exception if unable to open local file"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"     * @throws IOException if unable to read from file"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"    public ArrayList\u003cTask\u003e loadData() throws Exception {"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"        openFile();"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"        BufferedReader reader \u003d Files.newBufferedReader(this.filePath);"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"        int taskCount \u003d Integer.parseInt(reader.readLine());"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"        for (int i \u003d 0; i \u003c taskCount; ++i) {"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"            tasks.add(TaskParser.parseTask(reader));"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"        reader.close();"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"        return tasks;"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"     * Store an array of tasks to the file"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"     * @param tasks - the current container of the tasks"},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"     * @throws Exception if unable to open local file"},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"     * @throws IOException if unable to write to file"},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) throws Exception {"},{"lineNumber":50,"author":{"gitId":"nguyendqminh"},"content":"        openFile();"},{"lineNumber":51,"author":{"gitId":"nguyendqminh"},"content":"        BufferedWriter writer \u003d Files.newBufferedWriter(this.filePath);"},{"lineNumber":52,"author":{"gitId":"nguyendqminh"},"content":"        writer.write(String.valueOf(tasks.size()));"},{"lineNumber":53,"author":{"gitId":"nguyendqminh"},"content":"        writer.newLine();"},{"lineNumber":54,"author":{"gitId":"nguyendqminh"},"content":"        for (Task task : tasks) {"},{"lineNumber":55,"author":{"gitId":"nguyendqminh"},"content":"            writer.write(task.toString());"},{"lineNumber":56,"author":{"gitId":"nguyendqminh"},"content":"            writer.newLine();"},{"lineNumber":57,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"nguyendqminh"},"content":"        writer.close();"},{"lineNumber":59,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":60}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import java.util.Date;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":" * Class to handle fields and functions universal to all task types"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"    protected DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"yy-M-d H:mm\");"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    protected DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    private String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"        return isDone ? \"O\" : \"X\";"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"     * Mark current task as done"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"    public boolean markAsDone() {"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"        if (this.isDone) {"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"            return false;"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"            this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"            return true;"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":43}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":" * Container class for Task"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"     * Add a Task to the end of the list"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"     * @param newTask - Task to add"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"        tasks.add(newTask);"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"     * Insert a Task to a position of the list"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"     * @param newTask - Task to add"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"     * @param index - position of newTask after inserting"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"    public void addTask(Task newTask, int index) {"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"        if (index \u003d\u003d -1 || index \u003e size()) {"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"            index \u003d size();"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"        tasks.add(index, newTask);"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"     * Remove a Task from the list"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"     * @param pos - position to remove (0-based)"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"    public void removeTask(int pos) {"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"        tasks.remove(pos);"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":"     * @return the container\u0027s content"},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":"        return this.tasks;"},{"lineNumber":50,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":52,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"nguyendqminh"},"content":"     * @return the container\u0027s size"},{"lineNumber":54,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"nguyendqminh"},"content":"    public int size() {"},{"lineNumber":56,"author":{"gitId":"nguyendqminh"},"content":"        return this.tasks.size();"},{"lineNumber":57,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":59,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"nguyendqminh"},"content":"     * Retrieve a Task in the specified position"},{"lineNumber":61,"author":{"gitId":"nguyendqminh"},"content":"     * @param pos - position to retrieve (0-based)"},{"lineNumber":62,"author":{"gitId":"nguyendqminh"},"content":"     * @return the Task at position pos"},{"lineNumber":63,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"nguyendqminh"},"content":"    public Task get(int pos) {"},{"lineNumber":65,"author":{"gitId":"nguyendqminh"},"content":"        return this.tasks.get(pos);"},{"lineNumber":66,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":67}},{"path":"src/main/java/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":" * Utility class to handle parsing tasks from local file"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"public class TaskParser {"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"     * Parse a task from buffered reader"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"     * @param bufferedReader - input stream"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"     * @return the parsed task"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"     * @throws DukeException if unable to interpret the input"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"     * @throws IOException if unable to read from buffered reader"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"    public static Task parseTask(BufferedReader bufferedReader) throws Exception {"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"        String input \u003d bufferedReader.readLine();"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"        String taskType \u003d input.substring(0, 3);"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"        String status \u003d input.substring(3, 6);"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"        String rest \u003d input.substring(7);"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":"        boolean isDone \u003d (status.equals(\"[O]\"));"},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"        Task result;"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"        switch (taskType) {"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":"        case \"[T]\": {"},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"            result \u003d new Todo(rest, isDone);"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":"        case \"[D]\": {"},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"            int position \u003d rest.indexOf(\"(by: \");"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"            String description \u003d rest.substring(0, position - 1);"},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"            String by \u003d rest.substring(position + 5, rest.length() - 1);"},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"            result \u003d new Deadline(description, isDone, by);"},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"        case \"[E]\": {"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"            int position \u003d rest.indexOf(\"(at: \");"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"            String description \u003d rest.substring(0, position - 1);"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":"            String at \u003d rest.substring(position + 5, rest.length() - 1);"},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"            result \u003d new Event(description, isDone, at);"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"        default: {"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"            throw new DukeException(\"Error while loading data.\");"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":47,"author":{"gitId":"nguyendqminh"},"content":"        return result;"},{"lineNumber":48,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":" * Class to handle the Todo task type"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"        super(description, isDone);"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":17}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":" * Class to handle UI-related features"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"public class UI {"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"    private final Scanner sc;"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    public UI() {"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"    public String readCommand() {"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"        return sc.nextLine();"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"    public void displayFormat(String format, Object... args) {"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"        System.out.printf(format, args);"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":21,"author":{"gitId":"nguyendqminh"},"content":"    public void displayMessage(String message) {"},{"lineNumber":22,"author":{"gitId":"nguyendqminh"},"content":"        System.out.println(message);"},{"lineNumber":23,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":25,"author":{"gitId":"nguyendqminh"},"content":"    public void displayError(Exception e) {"},{"lineNumber":26,"author":{"gitId":"nguyendqminh"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":27,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":29,"author":{"gitId":"nguyendqminh"},"content":"    public void greetings() {"},{"lineNumber":30,"author":{"gitId":"nguyendqminh"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":31,"author":{"gitId":"nguyendqminh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":32,"author":{"gitId":"nguyendqminh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":33,"author":{"gitId":"nguyendqminh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":34,"author":{"gitId":"nguyendqminh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":35,"author":{"gitId":"nguyendqminh"},"content":"        displayMessage(\"Hello from\\n\" + logo);"},{"lineNumber":36,"author":{"gitId":"nguyendqminh"},"content":"        displayMessage(\"What can I do for you?\\n\");"},{"lineNumber":37,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":39,"author":{"gitId":"nguyendqminh"},"content":"    public String byeMessage() {"},{"lineNumber":40,"author":{"gitId":"nguyendqminh"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":41,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"nguyendqminh"},"content":"    public void bye() {"},{"lineNumber":43,"author":{"gitId":"nguyendqminh"},"content":"        displayMessage(byeMessage());"},{"lineNumber":44,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":45}},{"path":"src/main/java/data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"1"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"[D][O] deadline (by: 2001-09-11T08:46)"}],"authorContributionMap":{"nguyendqminh":2}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"nguyendqminh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"nguyendqminh"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"nguyendqminh"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"nguyendqminh"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"nguyendqminh"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"nguyendqminh":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"public class TaskListTest {"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"    public void runTaskListTest() {"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"        TaskList taskListTest \u003d new TaskList();"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"        taskListTest.addTask(new Todo(\"todo\"));"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"        taskListTest.addTask(new Deadline(\"deadline\", \"01-9-11 8:46\"));"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"        Assertions.assertEquals(taskListTest.size(), 2);"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"        taskListTest.get(1).markAsDone();"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"        taskListTest.removeTask(0);"},{"lineNumber":13,"author":{"gitId":"nguyendqminh"},"content":"        Assertions.assertEquals(taskListTest.get(0).toString(), \"[D][O] deadline (by: 2001-09-11T08:46)\");"},{"lineNumber":14,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":15}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":""},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"nguyendqminh"},"content":"    public void runTodoTest() {"},{"lineNumber":7,"author":{"gitId":"nguyendqminh"},"content":"        Todo todoTest \u003d new Todo(\"new todo\");"},{"lineNumber":8,"author":{"gitId":"nguyendqminh"},"content":"        Assertions.assertEquals(todoTest.toString(), \"[T][X] new todo\");"},{"lineNumber":9,"author":{"gitId":"nguyendqminh"},"content":"        Todo todoTestDone \u003d new Todo(\"new todo\", true);"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"        Assertions.assertEquals(todoTestDone.toString(), \"[T][O] new todo\");"},{"lineNumber":11,"author":{"gitId":"nguyendqminh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nguyendqminh"},"content":"}"}],"authorContributionMap":{"nguyendqminh":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nguyendqminh"},"content":"todo cs2103 project 1"},{"lineNumber":2,"author":{"gitId":"nguyendqminh"},"content":"list"},{"lineNumber":3,"author":{"gitId":"nguyendqminh"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"nguyendqminh"},"content":"list"},{"lineNumber":5,"author":{"gitId":"nguyendqminh"},"content":"bye"}],"authorContributionMap":{"nguyendqminh":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"nguyendqminh"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"nguyendqminh":1}}]
