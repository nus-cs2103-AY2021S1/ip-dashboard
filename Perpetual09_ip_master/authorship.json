[
  {
    "path": "log.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     1.[D][✘] return book (by: DEC 2 2019 18:00)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     2.[E][✘] have meeting (at: JAN 1 2020 13:00)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     3.[T][✘] buy books"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents an event with a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an event with a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param by the deadline of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if(by.getMinute() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return \"[D]\" + super.toString() + \"(by: \" + by.getMonth().toString().substring(0, 3) + \" \" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    by.getDayOfMonth() + \" \" + by.getYear() + \" \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    String.format(\"%d:%d)\", by.getHour(), by.getMinute()) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return \"[D]\" + super.toString() + \"(by: \" + by.getMonth().toString().substring(0, 3) + \" \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    by.getDayOfMonth() + \" \" + by.getYear() + \" \" + by.getHour() + \":0\" + by.getMinute() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 35
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a todo manager bot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a Duke bot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param filePath the path of the file which store the previous data."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Starts the todo list feature of the ."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                res \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                if (res.equalsIgnoreCase(Operations.BYE.name())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else if (res.equalsIgnoreCase(Operations.LIST.name())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    ui.printList(tasks.getData());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else if (res.startsWith(Operations.DONE.name().toLowerCase())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    tasks.done(res, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else if (res.startsWith(Operations.DELETE.name().toLowerCase())) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    tasks.delete(res, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else if (res.startsWith(Operations.TODO.name().toLowerCase())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    tasks.todo(res, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else if (res.startsWith(Operations.DEADLINE.name().toLowerCase())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    tasks.deadline(res, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else if (res.startsWith(Operations.EVENT.name().toLowerCase())) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    tasks.event(res, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else if (res.startsWith(Operations.FIND.name().toLowerCase())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    tasks.find(res, ui);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    // Exception: eg. ???"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                // Exception: eg. done some words"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                // Exception: eg. delete some words"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                ui.showNumberFormatError();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                ui.showDukeError(e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Starts creating an Duke bot object."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param args no need here."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        new Duke(\"./log.txt\").run();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 72,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents an exception which may occur during the execution."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents an event which will happen at a fixed time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an event with a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param at the happening time of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if(at.getMinute() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return \"[E]\" + super.toString() + \"(at: \" + at.getMonth().toString().substring(0, 3) + \" \" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    at.getDayOfMonth() + \" \" + at.getYear() + \" \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    String.format(\"%d:%d)\", at.getHour(), at.getMinute()) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return \"[E]\" + super.toString() + \"(at: \" + at.getMonth().toString().substring(0, 3) + \" \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    at.getDayOfMonth() + \" \" + at.getYear() + \" \" + at.getHour() + \":0\" + at.getMinute() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 35
    }
  },
  {
    "path": "src/main/java/Operations.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a series of operations provided by the Duke bot."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public enum Operations {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 13
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Encapsulates the operations related to the I/O of the log file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    String pathname;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    List\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a storage object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param path the file path."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.pathname \u003d path;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Reads data from the log file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return data that represented by a list of Task objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws IOException Handle the exception when reading files."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public List\u003cTask\u003e readFile() throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String pathname \u003d \"./log.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        File filename \u003d new File(pathname);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        InputStreamReader reader \u003d new InputStreamReader(new FileInputStream(filename));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        line \u003d br.readLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            char type \u003d line.charAt(8);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            boolean isDone \u003d line.charAt(11) \u003d\u003d \u0027✓\u0027;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            if(type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                Todo t \u003d new Todo(line.substring(14));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                if(isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    t.done();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                data.add(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            } else if(type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                String[] parts \u003d line.substring(5).split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                int length \u003d parts.length;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                for(int i \u003d 1; i \u003c length - 5; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    description +\u003d parts[i] + \" \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                Deadline d \u003d new Deadline(description, LocalDateTime.of(Integer.parseInt(parts[length - 2]),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        getMonth(parts[length - 4]), Integer.parseInt(parts[length - 3]),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(parts[length - 1].split(\":\")[0]),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(parts[length - 1].split(\":\")[1].substring("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                                0, parts[length - 1].split(\":\")[1].length() - 1))));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                if(isDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    d.done();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                data.add(d);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                String[] parts \u003d line.substring(5).split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                int length \u003d parts.length;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                for(int i \u003d 1; i \u003c length - 5; i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    description +\u003d parts[i] + \" \";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                Event e \u003d new Event(description, LocalDateTime.of(Integer.parseInt(parts[length - 2]),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        getMonth(parts[length - 4]), Integer.parseInt(parts[length - 3]),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(parts[length - 1].split(\":\")[0]),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(parts[length - 1].split(\":\")[1].substring("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                                0, parts[length - 1].split(\":\")[1].length() - 1))));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                if(isDone) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    e.done();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                data.add(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            line \u003d br.readLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return this.data;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Writes the data into the log file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the data that will be stored in the file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handle the exception when writing files."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void writeFile(List\u003cTask\u003e data) throws FileNotFoundException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        final PrintStream oldStdout \u003d System.out;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        PrintStream ps \u003d new PrintStream(\"./log.txt\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            System.out.printf(\"     %d.%s\\n\", i + 1, data.get(i).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.setOut(oldStdout);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Converts the words of month into corresponding numbers."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param month word representation of months."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return number representation of months."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static int getMonth(String month) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return switch (month) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"JAN\" -\u003e 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"FEB\" -\u003e 2;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"MAR\" -\u003e 3;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"APR\" -\u003e 4;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"MAY\" -\u003e 5;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"JUN\" -\u003e 6;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"JUL\" -\u003e 7;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"AUG\" -\u003e 8;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"SEP\" -\u003e 9;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"OCT\" -\u003e 10;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"NOV\" -\u003e 11;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \"DEC\" -\u003e 12;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            default -\u003e 0;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        };"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 117
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a general task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a new task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a status icon to indicate the status of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a status icon."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Sets the status of the task to Done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 47
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents the list of the todo events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected List\u003cTask\u003e data;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data \u003d new ArrayList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an task list with given data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the existing data needed to initialize the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public TaskList(List\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.data \u003d data;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public List\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Sets the status of a certain event to done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void done(String input, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. done"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of done is incomplete.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int n \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (n \u003e data.size() || n \u003c 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            //Exception: eg. done 999"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The index is out of bounds.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.get(n).done();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.printDone(data, n);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Deletes a certain event from the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void delete(String input, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. delete"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of delete is incomplete.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int n \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (n \u003e data.size() || n \u003c 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            //Exception: eg. delete 999"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The index is out of bounds.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.printDeletePre(data, n);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.remove(n);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.printDeletePost(data, n);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Adds a todo event into the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void todo(String input, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. todo"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Todo t \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.printTodo(data, t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Adds an event with a deadline into the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void deadline(String input, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. deadline"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] ss \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (!ss[1].startsWith(\"by \")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. deadline do homework /Mon"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Please enter the time following the format: by XXX\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Deadline t \u003d new Deadline(ss[0].substring(9),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                LocalDateTime.of(Integer.parseInt(ss[3].split(\" \")[0]), Integer.parseInt(ss[2]),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(ss[1].substring(3)),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(ss[3].split(\" \")[1].substring(0, 2)),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(ss[3].split(\" \")[1].substring(2))));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(t);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.printDeadline(data, t);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Adds an event that will happen at a fixed time into the list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void event(String input, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. event"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] ss \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (!ss[1].startsWith(\"at \")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. event meeting /Mon"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Please enter the time following the format: at XXX\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Event t \u003d new Event(ss[0].substring(6),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                LocalDateTime.of(Integer.parseInt(ss[3].split(\" \")[0]), Integer.parseInt(ss[2]),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(ss[1].substring(3)),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(ss[3].split(\" \")[1].substring(0, 2)),"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                        Integer.parseInt(ss[3].split(\" \")[1].substring(2))));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(t.getDescription());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(t);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.printEvent(data, t);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Finds all the tasks that contains the keyword."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void find(String input, Ui ui) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        List\u003cTask\u003e filteredData \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for(Task t : data) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            if(t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                filteredData.add(t);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui.printFind(filteredData);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 174
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a todo event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a todo event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Encapsulates the user interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the loading error."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"Failed to load the file.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the number format error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void showNumberFormatError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     ☹ OOPS!!! Please enter a number\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the potential error when running the Duke bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param e an exception object which contains the error message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(e.toString().substring(14));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the file not found error."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void showFileNotFoundError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     ☹ OOPS!!! File is not found.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the welcome message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the list of the todo events."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the todo events."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printList(List\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            System.out.printf(\"     %d.%s\\n\", i + 1, data.get(i).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the message to inform the success of Done operation."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n the label of the event that will set to be done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printDone(List\u003cTask\u003e data, int n) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"     %s\\n\", data.get(n).toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the first part of the message to inform the success of Delete operation."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n the label of the event that will be deleted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printDeletePre(List\u003cTask\u003e data, int n) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"     %s\\n\", data.get(n).toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the second part of the message to inform the success of Delete operation."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n the label of the event that will be deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printDeletePost(List\u003cTask\u003e data, int n) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", data.size());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the message to inform the success of adding todo event operation."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param t the todo event that will be added."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printTodo(List\u003cTask\u003e data, Todo t) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"       %s\\n\", t.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", data.size());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the message to inform the success of adding deadline event operation."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param t the deadline event that will be added."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printDeadline(List\u003cTask\u003e data, Deadline t) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"       %s\\n\", t.toString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", data.size());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the message to inform the success of adding event operation."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param t the event that will be added."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printEvent(List\u003cTask\u003e data, Event t) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"       %s\\n\", t.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", data.size());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the result of all the tasks that contains the keyword."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void printFind(List\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            System.out.printf(\"     %d.%s\\n\", i + 1, data.get(i).toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the goodbye message."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 158
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void Test1(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Deadline t \u003d new Deadline(\"Task1\", LocalDateTime.of(2020, 1, 1, 12, 0));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        assertEquals(t.toString(), \"[D][✘] Task1 (by: JAN 1 2020 12:00)\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void Test2(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Deadline t \u003d new Deadline(\"Task2\", LocalDateTime.of(2000, 12, 31, 17, 0));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        t.done();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        assertEquals(t.toString(), \"[D][✓] Task2 (by: DEC 31 2000 17:00)\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 17
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void Test1(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Todo t \u003d new Todo(\"Task1\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        assertEquals(t.toString(), \"[T][✘] Task1\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void Test2(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Todo t \u003d new Todo(\"Task2\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        t.done();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        assertEquals(t.toString(), \"[T][✓] Task2\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "Perpetual09": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Perpetual09": 1
    }
  }
]
