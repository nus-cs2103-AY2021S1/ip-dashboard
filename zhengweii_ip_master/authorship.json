[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    Deadline(String description, boolean isDone, String deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns the deadline of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Deadline is returned in the format MMM dd yyyy h.mma e.g. Sep 04 2020 4.00pm."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return deadline of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDeadline() + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 28
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private static final String DATABASE_DIRECTORY_PATH \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\").toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Initialises a new bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        System.out.println(Duke.DATABASE_DIRECTORY_PATH);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.storage \u003d new Storage(Duke.DATABASE_DIRECTORY_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            this.ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @param text String containing text to add."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns the response of the bot depending on the user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the response of the bot."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            String output \u003d this.parser.parseCommands(this.tasks, this.ui, input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            this.storage.save(this.tasks.getDatabase());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 56,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private String eventDateTimeStart;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    Event(String description, String eventDateTimeStart) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.eventDateTimeStart \u003d eventDateTimeStart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    Event(String description, boolean isDone, String eventDateTimeStart) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.eventDateTimeStart \u003d eventDateTimeStart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns the date and time that the event is due to start at."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returned in the format MMM dd yyyy h.mma e.g. Sep 04 2020 4.00pm."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the date and time that the event is due to start at."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String getEventDateTimeStart() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return this.eventDateTimeStart;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getEventDateTimeStart() + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 28
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " * A class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhengweii": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public static final DateTimeFormatter DATE_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public static final DateTimeFormatter DATE_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public static final DateTimeFormatter TIME_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"h.mma\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Executes the relevant functions based on the given user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the output from executing the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String parseCommands(TaskList tasks, Ui ui, String command) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String[] split \u003d command.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        switch (split[0]) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d ui.getExitMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d tasks.addNewDeadline(Arrays.copyOfRange(split, 1, split.length));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d tasks.deleteTask(split[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d tasks.markTaskAsDone(split[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d tasks.addNewEvent(Arrays.copyOfRange(split, 1, split.length));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d tasks.findTasks(split[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d tasks.listAllTasks();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d tasks.addNewToDo(split[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"Oops! I am sorry but I don\u0027t understand what that means\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 57
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private final Path databaseDirectoryPath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private final Path databaseFilePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    Storage(String databaseDirectoryPath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.databaseDirectoryPath \u003d Paths.get(databaseDirectoryPath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.databaseFilePath \u003d Paths.get(databaseDirectoryPath + \"/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Loads the saved tasks of the user from /data/tasks.txt."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * If the directory does not exist, a new folder will be created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return an ArrayList containing all the tasks (if any) of the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if the folder to store tasks.txt cannot be created."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws FileNotFoundException if tasks.txt cannot be found."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        boolean directoryExists \u003d Files.exists(this.databaseDirectoryPath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            // Create new directory"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            File newFolder \u003d new File(this.databaseDirectoryPath.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            boolean createdNewFolder \u003d newFolder.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            // If directory could not be created"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            if (!createdNewFolder) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                throw new DukeException(\"Could not create new directory to store saved data\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            // If the directory exists, check if tasks.txt exists"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            if (Files.exists(this.databaseFilePath)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    this.loadTasksFromTxtFile(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    throw new DukeException(\"Could not find tasks.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private void loadTasksFromTxtFile(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        File f \u003d new File(this.databaseFilePath.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            String currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            String[] parsed \u003d currentLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            String description \u003d parsed[2];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            boolean taskCompletionStatus \u003d parsed[1].equals(\"1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            switch (parsed[0]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                tasks.add(new ToDo(description, taskCompletionStatus));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                String deadline \u003d parsed[3];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                tasks.add(new Deadline(description, taskCompletionStatus, deadline));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                String eventDateTimeStart \u003d parsed[3];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                tasks.add(new Event(description, taskCompletionStatus, eventDateTimeStart));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Saves all the tasks of the user to data/tasks.txt."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if tasks cannot be saved to tasks.txt."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e database) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.databaseFilePath.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            for (int i \u003d 0; i \u003c database.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                Task currentTask \u003d database.get(i);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                if (currentTask instanceof ToDo) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    fw.write(\"T | \" + (currentTask.getDoneStatus() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                            + currentTask.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                } else if (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    fw.write(\"D | \" + (currentTask.getDoneStatus() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                            + currentTask.getDescription() + \" | \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                            + ((Deadline) currentTask).getDeadline() + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    fw.write(\"E | \" + (currentTask.getDoneStatus() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                            + currentTask.getDescription() + \" | \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                            + ((Event) currentTask).getEventDateTimeStart() + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"Could not save tasks to database\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 114
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * This constructor will be called by constructors of its subclasses."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @param description takes in the description of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * This constructor will be called by constructors of its subclasses."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @param description takes in the description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @param isDone takes in the task completion status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns true if the task has been completed and false otherwise."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the completion status of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        // Returns either tick or X symbol"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Marks a task as completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 60
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private ArrayList\u003cTask\u003e database;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.database \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e database) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.database \u003d database;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    private String addTask(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        this.database.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String output \u003d \"Looking good! I have added this task:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                + \"Now you have \" + this.database.size() + \" tasks in your list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Adds a new Deadline to the database."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the details of the deadline added to the database."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if an invalid date time format is passed in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String addNewDeadline(String[] taskInformation) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (taskInformation.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"Description of deadline cannot be empty\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } else if (taskInformation.length \u003e\u003d 1 \u0026\u0026 taskInformation.length \u003c 4) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"Please input the deadline in a valid format e.g. by 20/02/2020 1600\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(taskInformation[2], Parser.DATE_INPUT_FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(taskInformation[3].substring(0, 2) + \":\" + taskInformation[3].substring(2));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String parsedDate \u003d date.format(Parser.DATE_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String parsedTime \u003d time.format(Parser.TIME_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskInformation[0], parsedDate + \" \" + parsedTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return this.addTask(deadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Adds a new Event to the database."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return details of the event added to the database."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if an invalid date time format is passed in."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String addNewEvent(String[] taskInformation) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (taskInformation.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"Description of the event cannot be empty\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } else if (taskInformation.length \u003e\u003d 1 \u0026\u0026 taskInformation.length \u003c 4) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"Please input the start and end timing in a valid format\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    + \"e.g. at 20/02/2020 1600-1800\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(taskInformation[2], Parser.DATE_INPUT_FORMAT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String[] startEndTime \u003d taskInformation[3].split(\"-\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        LocalTime startTime \u003d LocalTime.parse(startEndTime[0].substring(0, 2) + \":\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                + startEndTime[0].substring(2));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        LocalTime endTime \u003d LocalTime.parse(startEndTime[1].substring(0, 2) + \":\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                + startEndTime[1].substring(2));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String parsedDate \u003d date.format(Parser.DATE_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String parsedStartTime \u003d startTime.format(Parser.TIME_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String parsedEndTime \u003d endTime.format(Parser.TIME_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        Event event \u003d new Event(taskInformation[0], parsedDate + \" \" + parsedStartTime + \" to \" + parsedEndTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return this.addTask(event);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Adds a new ToDo to the database."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return details of the ToDo added to the database."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if description is empty."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String addNewToDo(String description) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"To-do description cannot be empty\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            ToDo toDo \u003d new ToDo(description.trim());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d this.addTask(toDo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Deletes a specific task from the database."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return a success string if the task was successfully deleted."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if database is empty, if the index passed in is out of bounds"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * or if index passed in is not a number."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String deleteTask(String indexStr) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (this.database.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"There are no tasks in the database to delete\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                int index \u003d Integer.parseInt(indexStr);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                if (index \u003e this.database.size()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    throw new DukeException(\"Index cannot be greater than size of database\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    throw new DukeException(\"Index cannot be smaller than 1\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                Task removedTask \u003d this.database.remove(index - 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                output \u003d \"Noted! I have removed this task:\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                        + removedTask"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                        + \"Now you have \" + this.database.size() + \" tasks in your list\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                throw new DukeException(\"Index must be a number\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Searches for all relevant tasks using the given keyword."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return a string of all the relevant tasks."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if no relevant tasks are found."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String findTasks(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        int tasksFound \u003d 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        for (int i \u003d 0; i \u003c this.database.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            String currentTask \u003d database.get(i).toString();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            if (currentTask.contains(keyword)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                tasksFound +\u003d 1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                output +\u003d database.get(i).toString();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (tasksFound \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"None of the tasks matches the keyword\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns the database."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public ArrayList\u003cTask\u003e getDatabase() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return this.database;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns all the saved tasks in the database."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return a string of all the tasks in the database."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if the database is empty."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String listAllTasks() throws DukeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (this.database.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"There are no tasks in the database\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            for (int i \u003d 0; i \u003c this.database.size(); i++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                output +\u003d ((i + 1) + \". \" + this.database.get(i));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Marks a specific task as done."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return a success string if the task was successfully deleted."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @throws DukeException if the database is empty, or if the index is out of bounds"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * or if index passed in is not a number."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String markTaskAsDone(String indexStr) throws DukeException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        if (this.database.size() !\u003d 0) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                int index \u003d Integer.parseInt(indexStr);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                if (index \u003e this.database.size()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    throw new DukeException(\"Index cannot be greater than size of database\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                    throw new DukeException(\"Index cannot be lesser than 1\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                this.database.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                output \u003d \"Nice! I have marked this task as done!\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                throw new DukeException(\"Index must be a number\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            throw new DukeException(\"There are no tasks in the database to mark as done\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 219
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Gets input from the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String getUserInput(Scanner sc) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return sc.next();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Greets the user with a message when they start the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        System.out.println(\"Hello! I am Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Prints the error message to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void showErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * Returns exit message when user exits the application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     * @return the exit message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public String getExitMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        return \"Goodbye! See you again soon!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 35
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 19
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void getToDoDescription_returnToDoDescription () {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        assertEquals(\"Borrow book\", new ToDo(\"Borrow book\").getDescription());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void getDoneStatus_notDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        assertEquals(false, new ToDo(\"Borrow book\").getDoneStatus());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    public void getDoneStatus_markToDoAsDone_done() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        ToDo task \u003d new ToDo(\"Borrow book\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "        assertEquals(true, task.getDoneStatus());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "done string"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "deadline IP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "deadline IP /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "deadline IP /by today 2359"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "event project meeting /at 2pm-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "done string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhengweii"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhengweii": 2,
      "-": 36
    }
  }
]
