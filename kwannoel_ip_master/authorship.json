[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"## Testing"},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":"```shell script"},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"cd text-ui-test"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"# chmod +x # Only needed first time"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"./runtest.sh"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":"## Running Jar file"},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"Simply recompile the program."},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"The run:"},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":"```shell script"},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"java -jar out/artifacts/ip_jar/ip.jar"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"## Input commands"},{"lineNumber":47,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":"##### Misc"},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":"bye/b # exit program"},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":52,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":53,"author":{"gitId":"kwannoel"},"content":"##### Viewing \u0026 querying tasks"},{"lineNumber":54,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":55,"author":{"gitId":"kwannoel"},"content":"list/l # List task details: id, description, time stamp etc..."},{"lineNumber":56,"author":{"gitId":"kwannoel"},"content":"find/f,\u003ckeywords\u003e # Search for matches in tasks, return the id"},{"lineNumber":57,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":58,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":59,"author":{"gitId":"kwannoel"},"content":"##### Updating tasks"},{"lineNumber":60,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":61,"author":{"gitId":"kwannoel"},"content":"done/do,\u003ctask id\u003e # Indicate a task is complete"},{"lineNumber":62,"author":{"gitId":"kwannoel"},"content":"delete/del,\u003ctask id\u003e # Delete a task"},{"lineNumber":63,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":64,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":65,"author":{"gitId":"kwannoel"},"content":"##### Creating tasks"},{"lineNumber":66,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":67,"author":{"gitId":"kwannoel"},"content":"todo/t,\u003ctask name\u003e # Add a task to todos"},{"lineNumber":68,"author":{"gitId":"kwannoel"},"content":"deadline/de,\u003ctask name\u003e,\u003ctime\u003e"},{"lineNumber":69,"author":{"gitId":"kwannoel"},"content":"event/e,\u003ctask name\u003e,\u003ctime\u003e"},{"lineNumber":70,"author":{"gitId":"kwannoel"},"content":"```"}],"authorContributionMap":{"kwannoel":44,"-":26}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kwannoel":15,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"##### Misc"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"exit program"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"bye/b"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"##### Viewing \u0026 querying tasks"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"List task details: id, description, time stamp etc..."},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"list/l"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"Search for matches in tasks, return the id"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"find/f,\u003ckeywords\u003e"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"##### Updating tasks"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"Indicate a task is complete"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"done/do,\u003ctask id\u003e"},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"Delete a task"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"delete/del,\u003ctask id\u003e"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":"##### Creating tasks"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"Add a task to todos"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"todo/t,\u003ctask name\u003e "},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"Add a task with a deadline"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"deadline/de,\u003ctask name\u003e,\u003ctime\u003e "},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":47,"author":{"gitId":"-"},"content":" "},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":"Add an event"},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":"```"},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":"event/e,\u003ctask name\u003e,\u003ctime\u003e"},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":"```"}],"authorContributionMap":{"kwannoel":40,"-":11}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":" * Interface for program commands"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"public interface Command {"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    // Execute the command and return the response"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"    String execute();"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":9}},{"path":"src/main/java/duke/CommandInvalidArgumentFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"// Thrown if the arguments are wrong format"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"public class CommandInvalidArgumentFormatException extends RuntimeException {"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":5}},{"path":"src/main/java/duke/CommandMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":" * Thrown if command missing arguments"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"public class CommandMissingArgumentException extends RuntimeException {"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":7}},{"path":"src/main/java/duke/CompleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class CompleteTaskCommand implements Command {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    private final TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"    private final int taskIndex;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"     * Construct task"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     * @param tasks"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"     * @param taskIndex"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    public CompleteTaskCommand(TaskList tasks, int taskIndex) {"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"        return tasks.completeTask(taskIndex);"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":20}},{"path":"src/main/java/duke/CreateTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class CreateTaskCommand implements Command {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    private final TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"    private final Task task;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"     * Construct create task command"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     * @param tasks"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"     * @param task"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    public CreateTaskCommand(TaskList tasks, Task task) {"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"        this.task \u003d task;"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"        String message \u003d String.format(\"Added: %s\", task.toString());"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"        tasks.addTask(task);"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"        return message;"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":23}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"    private final Date time;"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     * Create a new deadline task"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"     * @param isDone"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"     * @param name"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"     * @param time"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"    public DeadlineTask("},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"            Boolean isDone,"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"            String name,"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"            Date time"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"    ) {"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"        super(isDone, name);"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"        return String.format(\"[D],%s,%s\", super.toString(), time);"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":27}},{"path":"src/main/java/duke/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class DeleteTaskCommand implements Command {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    private TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"    private int taskIndex;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"     * Deletes a task"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     * @param tasks"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"     * @param taskIndex"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    public DeleteTaskCommand(TaskList tasks, int taskIndex) {"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"     * Executes a task"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"     * @return"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"        tasks.deleteTask(taskIndex);"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"        return \"Deleted\";"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":25}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"public class DialogBox extends HBox {"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"    private final Label text;"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"    private final ImageView displayPicture;"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"     * Creates a dialog box"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"     * @param l"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"     * @param iv"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"        text \u003d l;"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"        displayPicture \u003d iv;"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"        text.setWrapText(true);"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":"        db.flip();"},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"        return db;"},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"kwannoel"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":52}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class DoneCommand implements Command {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    private Storage store;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"     * Update task status in store"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"     * @param store"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"    public DoneCommand(Storage store) {"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"        this.store \u003d store;"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"        return \"Done\";"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"import javafx.stage.Stage;"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":" * Entry point for application, initializes the UI"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":" */"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"public class Duke extends Application {"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"    private Scene scene;"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":"    private Ui ui;"},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"     * Main cli"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"     * @param args"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":"    public static void main(String[] args) {"},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":"        String welcomeGraphic \u003d \"Welcome!\";"},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"        System.out.println(welcomeGraphic);"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"     * Start duke"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"     * @param stage"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"kwannoel"},"content":"    public void start(Stage stage) {"},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":"        // Start the UI handlers, store etc..."},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":"        //Step 1. Setting up required components"},{"lineNumber":52,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":53,"author":{"gitId":"kwannoel"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":54,"author":{"gitId":"kwannoel"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":55,"author":{"gitId":"kwannoel"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":56,"author":{"gitId":"kwannoel"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":57,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":58,"author":{"gitId":"kwannoel"},"content":"        userInput \u003d new TextField();"},{"lineNumber":59,"author":{"gitId":"kwannoel"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":60,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":61,"author":{"gitId":"kwannoel"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":62,"author":{"gitId":"kwannoel"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":63,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":64,"author":{"gitId":"kwannoel"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":65,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":66,"author":{"gitId":"kwannoel"},"content":"        stage.setScene(scene);"},{"lineNumber":67,"author":{"gitId":"kwannoel"},"content":"        stage.show();"},{"lineNumber":68,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":69,"author":{"gitId":"kwannoel"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":70,"author":{"gitId":"kwannoel"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":71,"author":{"gitId":"kwannoel"},"content":"        stage.setResizable(false);"},{"lineNumber":72,"author":{"gitId":"kwannoel"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":73,"author":{"gitId":"kwannoel"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":74,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":75,"author":{"gitId":"kwannoel"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":76,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":77,"author":{"gitId":"kwannoel"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":78,"author":{"gitId":"kwannoel"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":79,"author":{"gitId":"kwannoel"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":80,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":81,"author":{"gitId":"kwannoel"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":82,"author":{"gitId":"kwannoel"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":83,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":84,"author":{"gitId":"kwannoel"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":85,"author":{"gitId":"kwannoel"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":86,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":87,"author":{"gitId":"kwannoel"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":88,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":89,"author":{"gitId":"kwannoel"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":90,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":91,"author":{"gitId":"kwannoel"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":92,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":93,"author":{"gitId":"kwannoel"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":94,"author":{"gitId":"kwannoel"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":95,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":96,"author":{"gitId":"kwannoel"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":97,"author":{"gitId":"kwannoel"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":98,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":99,"author":{"gitId":"kwannoel"},"content":"        //Step 3. Add functionality to handle user input."},{"lineNumber":100,"author":{"gitId":"kwannoel"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":101,"author":{"gitId":"kwannoel"},"content":"            handleUserInput();"},{"lineNumber":102,"author":{"gitId":"kwannoel"},"content":"        });"},{"lineNumber":103,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":104,"author":{"gitId":"kwannoel"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":105,"author":{"gitId":"kwannoel"},"content":"            handleUserInput();"},{"lineNumber":106,"author":{"gitId":"kwannoel"},"content":"        });"},{"lineNumber":107,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":108,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":109,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":111,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"kwannoel"},"content":"     * Iteration 1:"},{"lineNumber":113,"author":{"gitId":"kwannoel"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":114,"author":{"gitId":"kwannoel"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"kwannoel"},"content":"     * @param text String containing text to add"},{"lineNumber":116,"author":{"gitId":"kwannoel"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":117,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"kwannoel"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":119,"author":{"gitId":"kwannoel"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":120,"author":{"gitId":"kwannoel"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":121,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":122,"author":{"gitId":"kwannoel"},"content":"        return textToAdd;"},{"lineNumber":123,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":125,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"kwannoel"},"content":"     * Iteration 2:"},{"lineNumber":127,"author":{"gitId":"kwannoel"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":128,"author":{"gitId":"kwannoel"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":129,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"kwannoel"},"content":"    private void handleUserInput() {"},{"lineNumber":131,"author":{"gitId":"kwannoel"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":132,"author":{"gitId":"kwannoel"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":133,"author":{"gitId":"kwannoel"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":134,"author":{"gitId":"kwannoel"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":135,"author":{"gitId":"kwannoel"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":136,"author":{"gitId":"kwannoel"},"content":"        );"},{"lineNumber":137,"author":{"gitId":"kwannoel"},"content":"        userInput.clear();"},{"lineNumber":138,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":140,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"kwannoel"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":142,"author":{"gitId":"kwannoel"},"content":"     * Replace this stub with your completed method."},{"lineNumber":143,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"kwannoel"},"content":"    private String getResponse(String input) {"},{"lineNumber":145,"author":{"gitId":"kwannoel"},"content":"        return this.ui.handleInput(input);"},{"lineNumber":146,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kwannoel":146,"-":1}},{"path":"src/main/java/duke/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"public class EventTask extends Task {"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"    private Date time;"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     * @param isDone"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"     * @param name"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"     * @param time"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"    public EventTask("},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"            Boolean isDone,"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"            String name,"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"            Date time"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    ) {"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"        super(isDone, name);"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"        this.time \u003d time;"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"        return String.format(\"[E],%s,%s\", super.toString(), time);"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":26}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class ExitCommand implements Command {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"        System.exit(0);"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"        return \"Goodbye!\";"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":9}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"public class FindCommand implements Command {"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"    private TaskList taskList;"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    private String text;"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"    public FindCommand(TaskList taskList, String text) {"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"     * Executes command"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"     * @return the result of executing"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.find(text);"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"        String taskStrings \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"        for (Task task : tasks) {"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"            taskStrings +\u003d \"\\n\" + task.toString();"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"        return taskStrings;"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":25}},{"path":"src/main/java/duke/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class InvalidCommand implements Command {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"        return \"Invalid command\";"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":8}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class InvalidCommandException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":4}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class ListCommand implements Command {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    private TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"    public ListCommand(TaskList tasks) {"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"    public String execute() {"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"        return tasks.list();"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":14}},{"path":"src/main/java/duke/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class MissingTaskException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"     * @param str - takes in a string"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"     * @return an integer"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"    public static Integer parseInt(String str) {"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"            return Integer.parseInt(str);"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"            throw new CommandInvalidArgumentFormatException();"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"        } catch (Exception e) {"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"            throw e;"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"     * @param dateStr"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"     * @return a date"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"     * @throws ParseException"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":"    public static Date parseDate(String dateStr)"},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":"            throws ParseException {"},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-YYYY\");"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"        Date date \u003d format.parse(dateStr);"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"        return date;"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":"     * Parses a single line of input from stdin into a command"},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":"    public static Command parseLine(TaskList tasks, String string)"},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"            throws ParseException {"},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":"        String[] tokens \u003d string.split(\",\");"},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"        String type \u003d tokens[0];"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"        switch (type) {"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"        case \"t\":"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"        case \"todo\": {"},{"lineNumber":47,"author":{"gitId":"kwannoel"},"content":"            // Todo task"},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":"            String taskName \u003d tokens[1];"},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":"            if (taskName.equals(\"\")) {"},{"lineNumber":52,"author":{"gitId":"kwannoel"},"content":"                throw new CommandMissingArgumentException();"},{"lineNumber":53,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":55,"author":{"gitId":"kwannoel"},"content":"            // Create the task"},{"lineNumber":56,"author":{"gitId":"kwannoel"},"content":"            Task task \u003d new TodoTask(false, taskName);"},{"lineNumber":57,"author":{"gitId":"kwannoel"},"content":"            return new CreateTaskCommand(tasks, task);"},{"lineNumber":58,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"kwannoel"},"content":"        case \"e\":"},{"lineNumber":60,"author":{"gitId":"kwannoel"},"content":"        case \"event\": {"},{"lineNumber":61,"author":{"gitId":"kwannoel"},"content":"            // Event task"},{"lineNumber":62,"author":{"gitId":"kwannoel"},"content":"            if (tokens.length \u003c\u003d 2"},{"lineNumber":63,"author":{"gitId":"kwannoel"},"content":"                    || tokens[1].equals(\"\")"},{"lineNumber":64,"author":{"gitId":"kwannoel"},"content":"                    || tokens[2].equals(\"\")) {"},{"lineNumber":65,"author":{"gitId":"kwannoel"},"content":"                throw new CommandMissingArgumentException();"},{"lineNumber":66,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":68,"author":{"gitId":"kwannoel"},"content":"            // Otherwise create the task"},{"lineNumber":69,"author":{"gitId":"kwannoel"},"content":"            Task task \u003d new EventTask("},{"lineNumber":70,"author":{"gitId":"kwannoel"},"content":"                    false,"},{"lineNumber":71,"author":{"gitId":"kwannoel"},"content":"                    tokens[1],"},{"lineNumber":72,"author":{"gitId":"kwannoel"},"content":"                    parseDate(tokens[2])"},{"lineNumber":73,"author":{"gitId":"kwannoel"},"content":"            );"},{"lineNumber":74,"author":{"gitId":"kwannoel"},"content":"            return new CreateTaskCommand(tasks, task);"},{"lineNumber":75,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":77,"author":{"gitId":"kwannoel"},"content":"        case \"de\":"},{"lineNumber":78,"author":{"gitId":"kwannoel"},"content":"        case \"deadline\": {"},{"lineNumber":79,"author":{"gitId":"kwannoel"},"content":"            // Deadline task"},{"lineNumber":80,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":81,"author":{"gitId":"kwannoel"},"content":"            // Arguments"},{"lineNumber":82,"author":{"gitId":"kwannoel"},"content":"            if (tokens.length \u003c\u003d 2"},{"lineNumber":83,"author":{"gitId":"kwannoel"},"content":"                    || tokens[1].equals(\"\")"},{"lineNumber":84,"author":{"gitId":"kwannoel"},"content":"                    || tokens[2].equals(\"\")) {"},{"lineNumber":85,"author":{"gitId":"kwannoel"},"content":"                throw new CommandMissingArgumentException();"},{"lineNumber":86,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":88,"author":{"gitId":"kwannoel"},"content":"            // Otherwise create the task"},{"lineNumber":89,"author":{"gitId":"kwannoel"},"content":"            Task task \u003d new DeadlineTask("},{"lineNumber":90,"author":{"gitId":"kwannoel"},"content":"                    false,"},{"lineNumber":91,"author":{"gitId":"kwannoel"},"content":"                    tokens[1],"},{"lineNumber":92,"author":{"gitId":"kwannoel"},"content":"                    parseDate(tokens[2])"},{"lineNumber":93,"author":{"gitId":"kwannoel"},"content":"            );"},{"lineNumber":94,"author":{"gitId":"kwannoel"},"content":"            return new CreateTaskCommand(tasks, task);"},{"lineNumber":95,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":97,"author":{"gitId":"kwannoel"},"content":"        case \"b\":"},{"lineNumber":98,"author":{"gitId":"kwannoel"},"content":"        case \"bye\": {"},{"lineNumber":99,"author":{"gitId":"kwannoel"},"content":"            return new ExitCommand();"},{"lineNumber":100,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":102,"author":{"gitId":"kwannoel"},"content":"        case \"l\":"},{"lineNumber":103,"author":{"gitId":"kwannoel"},"content":"        case \"list\": {"},{"lineNumber":104,"author":{"gitId":"kwannoel"},"content":"            return new ListCommand(tasks);"},{"lineNumber":105,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":107,"author":{"gitId":"kwannoel"},"content":"        case \"f\":"},{"lineNumber":108,"author":{"gitId":"kwannoel"},"content":"        case \"find\": {"},{"lineNumber":109,"author":{"gitId":"kwannoel"},"content":"            // Find task"},{"lineNumber":110,"author":{"gitId":"kwannoel"},"content":"            if (tokens.length \u003c\u003d 1"},{"lineNumber":111,"author":{"gitId":"kwannoel"},"content":"                    || tokens[1].equals(\"\")) {"},{"lineNumber":112,"author":{"gitId":"kwannoel"},"content":"                throw new CommandMissingArgumentException();"},{"lineNumber":113,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":115,"author":{"gitId":"kwannoel"},"content":"            return new FindCommand(tasks, tokens[1]);"},{"lineNumber":116,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":118,"author":{"gitId":"kwannoel"},"content":"        case \"do\":"},{"lineNumber":119,"author":{"gitId":"kwannoel"},"content":"        case \"done\": {"},{"lineNumber":120,"author":{"gitId":"kwannoel"},"content":"            // Handle incorrect argument lengths"},{"lineNumber":121,"author":{"gitId":"kwannoel"},"content":"            if (tokens.length \u003c\u003d 1) {"},{"lineNumber":122,"author":{"gitId":"kwannoel"},"content":"                throw new CommandMissingArgumentException();"},{"lineNumber":123,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":125,"author":{"gitId":"kwannoel"},"content":"            Integer taskIndex \u003d Parser.parseInt(tokens[1]) - 1;"},{"lineNumber":126,"author":{"gitId":"kwannoel"},"content":"            return new CompleteTaskCommand(tasks, taskIndex);"},{"lineNumber":127,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":129,"author":{"gitId":"kwannoel"},"content":"        case \"del\":"},{"lineNumber":130,"author":{"gitId":"kwannoel"},"content":"        case \"delete\": {"},{"lineNumber":131,"author":{"gitId":"kwannoel"},"content":"            // Handle incorrect argument lengths"},{"lineNumber":132,"author":{"gitId":"kwannoel"},"content":"            if (tokens.length \u003c\u003d 1) {"},{"lineNumber":133,"author":{"gitId":"kwannoel"},"content":"                throw new CommandMissingArgumentException();"},{"lineNumber":134,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"kwannoel"},"content":"            Integer taskIndex \u003d Parser.parseInt(tokens[1]) - 1;"},{"lineNumber":136,"author":{"gitId":"kwannoel"},"content":"            return new DeleteTaskCommand(tasks, taskIndex);"},{"lineNumber":137,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":139,"author":{"gitId":"kwannoel"},"content":"        default:"},{"lineNumber":140,"author":{"gitId":"kwannoel"},"content":"            return new InvalidCommand();"},{"lineNumber":141,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":143}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"import java.io.FileInputStream;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"import java.io.FileOutputStream;"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":" * Provides a handle to hard disk storage"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"    protected FileWriter writeHandle;"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"    protected File fileHandle;"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    protected TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"     * Constructor"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"    public Storage() {"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"            // Initializes storage folder \u0026 file"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"            File storageFolder \u003d new File(\"./data\");"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"            if (!storageFolder.exists()) {"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"                storageFolder.mkdir(); // creates folder if it doesn\u0027t exist"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":"            this.fileHandle \u003d new File(\"./data/duke.ser\");"},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"            if (fileHandle.exists()) {"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"                // Try to open the file and parse the contents"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"                FileInputStream fileIn \u003d"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"                        new FileInputStream(\"./data/duke.ser\");"},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":"                ObjectInputStream in \u003d new ObjectInputStream(fileIn);"},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":"                this.taskList \u003d (TaskList) in.readObject();"},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":"                in.close();"},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"                fileIn.close();"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"                this.taskList \u003d new TaskList();"},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"        } catch (Exception e) {"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Failed to initialize storage\");"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"            System.out.println(e.toString());"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"            System.exit(1);"},{"lineNumber":47,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":"     * Sync all tasks"},{"lineNumber":52,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"kwannoel"},"content":"    public boolean syncTasks() {"},{"lineNumber":54,"author":{"gitId":"kwannoel"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"kwannoel"},"content":"            FileOutputStream fileOut \u003d"},{"lineNumber":56,"author":{"gitId":"kwannoel"},"content":"                    new FileOutputStream(\"./data/duke.ser\");"},{"lineNumber":57,"author":{"gitId":"kwannoel"},"content":"            ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);"},{"lineNumber":58,"author":{"gitId":"kwannoel"},"content":"            out.writeObject(taskList);"},{"lineNumber":59,"author":{"gitId":"kwannoel"},"content":"            out.close();"},{"lineNumber":60,"author":{"gitId":"kwannoel"},"content":"            fileOut.close();"},{"lineNumber":61,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Serialized data is saved in ./data/duke.ser\");"},{"lineNumber":62,"author":{"gitId":"kwannoel"},"content":"            return true;"},{"lineNumber":63,"author":{"gitId":"kwannoel"},"content":"        } catch (Exception e) {"},{"lineNumber":64,"author":{"gitId":"kwannoel"},"content":"            System.out.println(e.toString());"},{"lineNumber":65,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Sync failed\");"},{"lineNumber":66,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"kwannoel"},"content":"        return false;"},{"lineNumber":68,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":70,"author":{"gitId":"kwannoel"},"content":"    public TaskList getTaskList() {"},{"lineNumber":71,"author":{"gitId":"kwannoel"},"content":"        return taskList;"},{"lineNumber":72,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":73}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class Task implements java.io.Serializable {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    private Boolean isDone; // Whether a task is complete"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"    private final String name; // The task name"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"     * Construct a task"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"     * @param isDone"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"     * @param name"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    public Task(Boolean isDone, String name) {"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"    public void done() {"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"        isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"    public String getName() {"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"        return this.name;"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"     * Show task as a string"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"     * @return"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"        String taskString \u003d String.format(\"%s,%s\", this.showStatus(), name);"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"        return taskString;"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":"     * Show the task status"},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":"     * @return"},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":"    public String showStatus() {"},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"        if (isDone) {"},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":"            return \"1\";"},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"            return \"0\";"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"public class TaskList implements java.io.Serializable {"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"    private final ArrayList\u003cTask\u003e store;"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"    public TaskList(ArrayList\u003cTask\u003e store) {"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"        this.store \u003d store;"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"        this.store \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"     * Adds a task"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"     * @param task"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"    public void addTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"        store.add(task);"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"        assert store.size() \u003e\u003d 0;"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"     * Delete a task"},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":"     * @param taskIndex"},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"    public void deleteTask(int taskIndex) {"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d store.size()) {"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"            throw new MissingTaskException();"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":"        Task task \u003d store.remove(taskIndex);"},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":"        assert store.size() \u003e\u003d 0;"},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":"        System.out.println(\"duke.Task deleted:\");"},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"        System.out.println(task);"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":"     * Complete a task"},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"     * @param taskIndex"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"     * @return the result"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":"    public String completeTask(Integer taskIndex) {"},{"lineNumber":47,"author":{"gitId":"kwannoel"},"content":"        // If the task doesn\u0027t exist (It\u0027s index is missing)"},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d store.size()) {"},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":"            throw new MissingTaskException();"},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":52,"author":{"gitId":"kwannoel"},"content":"        // Set the task to done"},{"lineNumber":53,"author":{"gitId":"kwannoel"},"content":"        Task task \u003d store.get(taskIndex);"},{"lineNumber":54,"author":{"gitId":"kwannoel"},"content":"        task.done();"},{"lineNumber":55,"author":{"gitId":"kwannoel"},"content":"        return String.format(\"duke task marked as complete: %s\", task);"},{"lineNumber":56,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":58,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"kwannoel"},"content":"     * List of tasks"},{"lineNumber":60,"author":{"gitId":"kwannoel"},"content":"     * @return"},{"lineNumber":61,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"kwannoel"},"content":"    public String list() {"},{"lineNumber":63,"author":{"gitId":"kwannoel"},"content":"        String listText \u003d \"\";"},{"lineNumber":64,"author":{"gitId":"kwannoel"},"content":"        for (int i \u003d 0; i \u003c store.size(); i++) {"},{"lineNumber":65,"author":{"gitId":"kwannoel"},"content":"            listText +\u003d String.format(\"\\n %d. %s\", i + 1, store.get(i));"},{"lineNumber":66,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"kwannoel"},"content":"        return listText;"},{"lineNumber":68,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":70,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"kwannoel"},"content":"     * Dump all the task as a formatted string"},{"lineNumber":72,"author":{"gitId":"kwannoel"},"content":"     * @return"},{"lineNumber":73,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"kwannoel"},"content":"    public String dumpTasks() {"},{"lineNumber":75,"author":{"gitId":"kwannoel"},"content":"        // Format the store output as a string"},{"lineNumber":76,"author":{"gitId":"kwannoel"},"content":"        String data \u003d \"\";"},{"lineNumber":77,"author":{"gitId":"kwannoel"},"content":"        for (Task task : store) {"},{"lineNumber":78,"author":{"gitId":"kwannoel"},"content":"            data +\u003d task.toString() + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"kwannoel"},"content":"        return data;"},{"lineNumber":81,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":83,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"kwannoel"},"content":"     * Find a task"},{"lineNumber":85,"author":{"gitId":"kwannoel"},"content":"     * @param text"},{"lineNumber":86,"author":{"gitId":"kwannoel"},"content":"     * @return"},{"lineNumber":87,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"kwannoel"},"content":"    public ArrayList\u003cTask\u003e find(String text) {"},{"lineNumber":89,"author":{"gitId":"kwannoel"},"content":"        List\u003cTask\u003e matchedTasks \u003d store.stream().filter("},{"lineNumber":90,"author":{"gitId":"kwannoel"},"content":"            task -\u003e task.getName().contains(text)"},{"lineNumber":91,"author":{"gitId":"kwannoel"},"content":"        ).collect(Collectors.toList());"},{"lineNumber":92,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":93,"author":{"gitId":"kwannoel"},"content":"        return new ArrayList\u003c\u003e(matchedTasks);"},{"lineNumber":94,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":95}},{"path":"src/main/java/duke/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"public class TodoTask extends Task {"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"    public TodoTask("},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"            Boolean isDone,"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"            String name"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"    ) {"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"        super(isDone, name);"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"        return \"[T],\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":15}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":" * Implements User interface"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"    private final Storage store;"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"    private final TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"    private final Scanner reader;"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"     * Initialize personal assistant with a store for user input"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"        store \u003d new Storage();"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"        tasks \u003d store.getTaskList();"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"        reader \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"     * Start the cli"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"    public void run() {"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"        System.out.println(\"\u003e What can I do for you?\");"},{"lineNumber":27,"author":{"gitId":"kwannoel"},"content":"        getUserCommands();"},{"lineNumber":28,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":30,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"kwannoel"},"content":"     * Gets user input from STDIN, executes it"},{"lineNumber":32,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kwannoel"},"content":"    public void getUserCommands() {"},{"lineNumber":34,"author":{"gitId":"kwannoel"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"\\nEnter your command or \\\"bye\\\" to exit: \");"},{"lineNumber":36,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":37,"author":{"gitId":"kwannoel"},"content":"            // Tokenize the input"},{"lineNumber":38,"author":{"gitId":"kwannoel"},"content":"            String input \u003d reader.nextLine();"},{"lineNumber":39,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":40,"author":{"gitId":"kwannoel"},"content":"            Command command \u003d Parser.parseLine(tasks, input);"},{"lineNumber":41,"author":{"gitId":"kwannoel"},"content":"            command.execute();"},{"lineNumber":42,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":43,"author":{"gitId":"kwannoel"},"content":"            // After every command, save to disk"},{"lineNumber":44,"author":{"gitId":"kwannoel"},"content":"            store.syncTasks();"},{"lineNumber":45,"author":{"gitId":"kwannoel"},"content":"            this.getUserCommands();"},{"lineNumber":46,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":47,"author":{"gitId":"kwannoel"},"content":"        } catch (CommandMissingArgumentException e) {"},{"lineNumber":48,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Missing arguments!\");"},{"lineNumber":49,"author":{"gitId":"kwannoel"},"content":"        } catch (CommandInvalidArgumentFormatException e) {"},{"lineNumber":50,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Invalid arguments!\");"},{"lineNumber":51,"author":{"gitId":"kwannoel"},"content":"        } catch (MissingTaskException e) {"},{"lineNumber":52,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Missing task!\");"},{"lineNumber":53,"author":{"gitId":"kwannoel"},"content":"        } catch (Exception e) {"},{"lineNumber":54,"author":{"gitId":"kwannoel"},"content":"            System.out.println(e.toString());"},{"lineNumber":55,"author":{"gitId":"kwannoel"},"content":"        } finally {"},{"lineNumber":56,"author":{"gitId":"kwannoel"},"content":"            this.getUserCommands();"},{"lineNumber":57,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":60,"author":{"gitId":"kwannoel"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"kwannoel"},"content":"     * Gets user input from STDIN, executes it"},{"lineNumber":62,"author":{"gitId":"kwannoel"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"kwannoel"},"content":"    public String handleInput(String input) {"},{"lineNumber":64,"author":{"gitId":"kwannoel"},"content":"        String result \u003d input;"},{"lineNumber":65,"author":{"gitId":"kwannoel"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":67,"author":{"gitId":"kwannoel"},"content":"            // Parse the commands"},{"lineNumber":68,"author":{"gitId":"kwannoel"},"content":"            Command command \u003d Parser.parseLine(tasks, input);"},{"lineNumber":69,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":70,"author":{"gitId":"kwannoel"},"content":"            // Execute the object"},{"lineNumber":71,"author":{"gitId":"kwannoel"},"content":"            result \u003d command.execute();"},{"lineNumber":72,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":73,"author":{"gitId":"kwannoel"},"content":"            // After every command, save to disk"},{"lineNumber":74,"author":{"gitId":"kwannoel"},"content":"            store.syncTasks();"},{"lineNumber":75,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"successful\");"},{"lineNumber":76,"author":{"gitId":"kwannoel"},"content":"        } catch (CommandMissingArgumentException e) {"},{"lineNumber":77,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Missing arguments!\");"},{"lineNumber":78,"author":{"gitId":"kwannoel"},"content":"        } catch (CommandInvalidArgumentFormatException e) {"},{"lineNumber":79,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Invalid arguments!\");"},{"lineNumber":80,"author":{"gitId":"kwannoel"},"content":"        } catch (MissingTaskException e) {"},{"lineNumber":81,"author":{"gitId":"kwannoel"},"content":"            System.out.println(\"Missing task!\");"},{"lineNumber":82,"author":{"gitId":"kwannoel"},"content":"        } catch (Exception e) {"},{"lineNumber":83,"author":{"gitId":"kwannoel"},"content":"            System.out.println(e.toString());"},{"lineNumber":84,"author":{"gitId":"kwannoel"},"content":"        } finally {"},{"lineNumber":85,"author":{"gitId":"kwannoel"},"content":"            return result;"},{"lineNumber":86,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":88}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"import duke.Parser;"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"public class ParserTest {"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"    public void parseInt() {"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"        assertEquals(Parser.parseInt(\"123\"), 123);"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":""},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"    public void parseDate() {"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"            long actual \u003d Parser"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"                    .parseDate(\"12-04-1998\")"},{"lineNumber":19,"author":{"gitId":"kwannoel"},"content":"                    .getTime();"},{"lineNumber":20,"author":{"gitId":"kwannoel"},"content":"            long expected \u003d 883238400000L;"},{"lineNumber":21,"author":{"gitId":"kwannoel"},"content":"            assertEquals(actual, expected);"},{"lineNumber":22,"author":{"gitId":"kwannoel"},"content":"        } catch (Exception e) {"},{"lineNumber":23,"author":{"gitId":"kwannoel"},"content":"            fail();"},{"lineNumber":24,"author":{"gitId":"kwannoel"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"kwannoel"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kwannoel"},"content":"}"}],"authorContributionMap":{"kwannoel":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwannoel"},"content":"todo one"},{"lineNumber":2,"author":{"gitId":"kwannoel"},"content":"event x /at two"},{"lineNumber":3,"author":{"gitId":"kwannoel"},"content":"deadline y /by three"},{"lineNumber":4,"author":{"gitId":"kwannoel"},"content":"list"},{"lineNumber":5,"author":{"gitId":"kwannoel"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"kwannoel"},"content":"list"},{"lineNumber":7,"author":{"gitId":"kwannoel"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"kwannoel"},"content":"list"},{"lineNumber":9,"author":{"gitId":"kwannoel"},"content":"done 3"},{"lineNumber":10,"author":{"gitId":"kwannoel"},"content":"invalid command"},{"lineNumber":11,"author":{"gitId":"kwannoel"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"kwannoel"},"content":"event"},{"lineNumber":13,"author":{"gitId":"kwannoel"},"content":"deadline"},{"lineNumber":14,"author":{"gitId":"kwannoel"},"content":"event x"},{"lineNumber":15,"author":{"gitId":"kwannoel"},"content":"deadline y"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"event /at"},{"lineNumber":17,"author":{"gitId":"kwannoel"},"content":"deadline /by"},{"lineNumber":18,"author":{"gitId":"kwannoel"},"content":"bye"}],"authorContributionMap":{"kwannoel":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"kwannoel"},"content":"if ! javac -encoding utf8 -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"kwannoel":1,"-":37}}]
