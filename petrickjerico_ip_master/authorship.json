[
  {
    "path": "duke_save_data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo:1:call sis"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo:1:call mum"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "deadline:0:homework:2017-08-09"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            ui.displayLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        ui.displayWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        loop: while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String commandLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                parser.setCommandLine(commandLine);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String command \u003d parser.getCommandWord();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        storage.save(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        ui.displayBye();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        sc.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        break loop;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        ui.displayList(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        taskList.done(parser);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        taskList.delete(parser);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        taskList.add(parser);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                ui.displayMessage(e.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        new Duke(\"duke_save_data.txt\").run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 69,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.NullIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.NullTaskNameException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private String commandLine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private String commandWord;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private String taskDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private Integer taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    Parser() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        commandLine \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        commandWord \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        taskName \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        taskDate \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        taskNumber \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void setCommandLine(String commandLine) throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.commandLine \u003d commandLine;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        parseForCommand(commandLine);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private void parseForCommand(String commandLine) throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String[] words \u003d commandLine.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        commandWord \u003d words[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    parseForNumber(words[1].trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    throw new NullIndexException(commandWord);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    parseForDetails(words[1].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    throw new NullTaskNameException(commandWord);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new DukeException(commandWord);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private void parseForNumber(String remain) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            taskNumber \u003d Integer.parseInt(remain);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new NullIndexException(commandWord);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private void parseForDetails(String remain) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String[] words \u003d remain.split(\"/\", 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        taskName \u003d words[0].trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            taskDate \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String[] unformatted \u003d words[1].split(\" \", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            taskDate \u003d unformatted[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getCommandLine() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return commandLine;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getCommandWord() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return commandWord;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getTaskDate() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return taskDate;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Integer getTaskNumber() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 97
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Scanner input \u003d new Scanner(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String nextLine \u003d input.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String[] taskDetails \u003d nextLine.split(\":\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskType \u003d taskDetails[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                boolean taskIsDone \u003d taskDetails[1].startsWith(\"1\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskName \u003d taskDetails[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskDate \u003d taskDetails.length \u003c 4 ? \"\" : taskDetails[3];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                if (!TaskType.isMember(taskType)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    throw new DukeException(taskType);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    TaskType task \u003d TaskType.getTaskType(taskType);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    task.addToTasks(result, taskName, taskIsDone, taskDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            input.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void save (TaskList taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            // System.getProperty(\"ip\"), \"duke_save_data.txt\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            FileWriter output \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskType \u003d task.getClass().getName().toLowerCase();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                TaskType type \u003d TaskType.getTaskType(taskType);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String saveLine \u003d type.generateSaveLine(task.isDone, task.taskName, task.getDate());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                output.write(saveLine);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 66
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return isDone ?  \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), taskName);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 27
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private int numOfPendingTasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private static final Ui UI \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.numOfPendingTasks \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.numOfPendingTasks \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (!task.isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                incrementPendingTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public boolean isWithinValidRange(int target) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return target \u003e\u003d 0 \u0026\u0026 target \u003c tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void incrementPendingTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.numOfPendingTasks++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void decrementPendingTasks() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.numOfPendingTasks--;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public int getNumOfPendingTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return numOfPendingTasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public int getTaskID(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new EmptyTasksException(\"duke.Task is empty\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (Objects.isNull(parser.getTaskNumber())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new NullIndexException(\"Target is null\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        int target \u003d parser.getTaskNumber() - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (!isWithinValidRange(target)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new RangeIndexException(\"Range is invalid\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return target;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void done(Parser parser) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Task targetTask \u003d tasks.get(getTaskID(parser));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (targetTask.isDone) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new AlreadyDoneIndexException(\"duke.Task already done\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            targetTask.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayStarLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"Good job! This task is now marked done:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(targetTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayStarLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            decrementPendingTasks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayMessage(e.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void delete(Parser parser) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Task targetTask \u003d tasks.get(getTaskID(parser));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            tasks.remove(targetTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (!targetTask.isDone) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                decrementPendingTasks();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayStarLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"Alright! This task is now deleted:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(targetTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayStarLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayMessage(e.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void add(Parser parser) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String commandWord \u003d parser.getCommandWord();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String taskName \u003d parser.getTaskName();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String taskDate \u003d parser.getTaskDate();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            TaskType task \u003d TaskType.getTaskType(commandWord);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            task.addToTasks(tasks, taskName, false, taskDate);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            int size \u003d tasks.size();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            incrementPendingTasks();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayStarLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"\u0027\" + taskName + \"\u0027 added to list!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(tasks.get(size - 1));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"\\nYou now have \" + size + \" task(s) in your list.\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"(Use \u0027list\u0027 command to see your updated list.)\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayStarLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            UI.displayMessage(e.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 126
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayStarLine() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(\"––––––––––––––––––––– *** –––––––––––––––––––––\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayMessage(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayLoadingError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayMessage(\"Loading failed: Duke continues with empty duke.TaskList.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String welcome \u003d \"Duke at your service!\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                logo + \"\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                \"How can I help you?\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                \"Type in your orders below.\\n\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                \"(command list: \u0027list\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027todo\u0027, \u0027done\u0027, \u0027bye\u0027)\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayMessage(welcome);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayBye() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayMessage(\"Alright, see you soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayList(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        int pending \u003d taskList.getNumOfPendingTasks();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        int currId \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(\"TO-DO LIST:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(String.format(\"%d pending\", pending));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(String.format(\"   %d. %s\", currId, t));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            currId++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 56
    }
  },
  {
    "path": "src/main/java/duke/exception/AlreadyDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class AlreadyDoneIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public AlreadyDoneIndexException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"This task is already done!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public DukeException(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(\"Error caused by input: \" + command);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Sorry, I can\u0027t understand your command.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTasksException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class EmptyTasksException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public EmptyTasksException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Cannot operate on empty tasks list!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class InvalidTaskDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public InvalidTaskDateException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Cannot parse the given \" + command + \" date!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/NullIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class NullIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public NullIndexException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Please provide an integer index for \" + command + \"!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/NullTaskDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class NullTaskDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public NullTaskDateException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String timeCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                timeCommand \u003d \" using \u0027/by [parsable date]\u0027\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                timeCommand \u003d \" using \u0027/at [parsable date]\u0027\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                timeCommand \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Please provide time to the \" + command + \" item\" + timeCommand + \"!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/NullTaskNameException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class NullTaskNameException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public NullTaskNameException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Please name the \" + command + \" item!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/RangeIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class RangeIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public RangeIndexException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Index out of range!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Deadline(String taskName, LocalDate taskDate) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return taskDate.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), taskName, taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Event(String taskName, LocalDate taskDate) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return taskDate.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", getStatusIcon(), taskName, taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 24
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.InvalidTaskDateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.NullTaskDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.exception.NullTaskNameException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.EnumSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    DEADLINE(\"deadline\") {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskNameException(\"deadline\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskDate.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskDateException(\"deadline\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                Task task \u003d new Deadline(taskName, LocalDate.parse(taskDate));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                if (taskIsDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new InvalidTaskDateException(\"deadline\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            return String.format(\"deadline:%s:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName, taskDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    },"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    EVENT(\"event\") {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskNameException(\"event\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskDate.isBlank()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskDateException(\"event\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                Task task \u003d new Event(taskName, LocalDate.parse(taskDate));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                if (taskIsDone) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new InvalidTaskDateException(\"event\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            return String.format(\"event:%s:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName, taskDate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    },"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    TODO(\"todo\") {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskNameException(\"todo\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Task task \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskIsDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            return String.format(\"todo:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    };"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private static final Map\u003cString, TaskType\u003e nameToValueMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private final String lowerCase;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    TaskType(String lowerCase) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.lowerCase \u003d lowerCase;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getLowerCase() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return lowerCase;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        for (TaskType type : EnumSet.allOf(TaskType.class)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            nameToValueMap.put(type.getLowerCase(), type);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static boolean isMember(String name) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (!nameToValueMap.containsKey(name)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new DukeException(name);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static TaskType getTaskType(String lowerCase) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (!isMember(lowerCase)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new DukeException(lowerCase);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return nameToValueMap.get(lowerCase);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public abstract void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public abstract String generateSaveLine(boolean taskIsDone, String taskName, String taskDate);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 122
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo call mom"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo call dad"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "event project meeting /at 3pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "deadline homework /by Monday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo clean fridge"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "if ! ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "  )"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 4,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.exception.AlreadyDoneIndexException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.Parser.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.exception.RangeIndexException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.exception.NullTaskNameException.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.exception.NullIndexException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.task.TaskType.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.Ui.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.task.Event.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.exception.EmptyTasksException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.Task.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.task.Deadline.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.task.ToDo.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.exception.NullTaskDateException.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/duke.exception.DukeException.java"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 17
    }
  }
]
