[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", dueDate);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 12
    }
  },
  {
    "path": "src/main/java/DeadlineMissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class DeadlineMissingDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public DeadlineMissingDateException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"Date is missing for deadline, please include a date preceded by /by\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final String spacing \u003d \"         \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final String divider \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Greeting();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (input.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                printMessage(\"Bye! See you next time :)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (input.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                String message \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    message +\u003d (i + 1) + \": \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                printMessage(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (input.matches(\"done ([0-9]+)\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                int number \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                if (number \u003e tasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    printMessage(\"Task not found please choose another number!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                else if (number \u003c 100 \u0026\u0026 number \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    tasks.get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    printMessage(\"This task is done, great job!\\n\" + tasks.get(number - 1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                String description \u003d input.replace(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    System.out.println(new ToDoMissingDescriptionException());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    printMessage(\"Added: \" + task + String.format(\"\\nNow you have %d tasks in the list\", tasks.size()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    String description \u003d input.replace(\"deadline \", \"\").split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    String dueDate \u003d input.replace(\"deadline\", \"\").split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    Task task \u003d new Deadline(description, dueDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    printMessage(\"Added \" + task + String.format(\"\\nNow you have %d tasks in the list\", tasks.size()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    System.out.println(new DeadlineMissingDateException());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                if (input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    String description \u003d input.replace(\"event \", \"\").split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    String time \u003d input.replace(\"event \", \"\").split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    Task task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    printMessage(\"Added \" + task + String.format(\"\\nNow you have %d tasks in the list\", tasks.size()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    System.out.println(new EventMissingDateException());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                int taskToDelete \u003d Integer.parseInt(input.replace(\"delete \", \"\")) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                printMessage(\"I have removed this task:\\n\" + tasks.get(taskToDelete) +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        String.format(\"\\nNow you have %d tasks in the list\", tasks.size() - 1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                tasks.remove(taskToDelete);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                System.out.println(new InvalidInputException());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static void Greeting() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String logo \u003d \"Dash\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(\"How can I help you today?\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static void printMessage(String message) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(spacing + divider);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String[] messages \u003d message.split(\"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        for (String str : messages) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            System.out.println(spacing + str);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(spacing + divider);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 91,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    protected final String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", time);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 12
    }
  },
  {
    "path": "src/main/java/EventMissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class EventMissingDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public EventMissingDateException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"Your event is missing a date! Please include a date preceded by /at\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 6
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"Sorry I\u0027m not sure what you mean by that :/\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 21
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 9
    }
  },
  {
    "path": "src/main/java/ToDoMissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ToDoMissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ToDoMissingDescriptionException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"ToDo task needs a description :)\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "event watch Westworld /at June 20th 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "-": 20
    }
  }
]
