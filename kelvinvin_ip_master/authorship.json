[
  {
    "path": "src/main/java/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class CommandNotFoundException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public CommandNotFoundException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Deadline(String description, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getPlainText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return super.getPlainText() + \" | \" + by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String formattedBy \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    static String directoryName \u003d \"./data/\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    static String fileName \u003d directoryName + \"/\" + \"duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private static int parseTaskNumber(String input) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String digitsOnlyInput \u003d input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        if (digitsOnlyInput.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"Specify the task number to change e.g. done 12 / delete 4\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            int taskNumberToMark \u003d Integer.parseInt(digitsOnlyInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            if (taskNumberToMark \u003e taskList.size() | taskNumberToMark \u003c 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                throw new DukeException(\"There is no such task number.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                return taskNumberToMark;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private static void deleteTask(int taskNumberToMark) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Task taskToMark \u003d taskList.remove(taskNumberToMark - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String remainingTasksMsg \u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskToMark + remainingTasksMsg);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private static void markTask(int taskNumberToMark) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Task taskToMark \u003d taskList.get(taskNumberToMark - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        taskToMark.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(\"Nicely done. I\u0027ve marked this task as done:\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                \"\\n\" + taskToMark);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private static void updateTaskFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            // Convert ArrayList\u003cTask\u003e to String[]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String[] taskArr \u003d new String[taskList.size()];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            for (int k \u003d 0; k \u003c taskList.size(); k++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                taskArr[k] \u003d taskList.get(k).getPlainText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String fileData \u003d String.join(\"\\n\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    taskArr);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            fw.write(fileData);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            System.out.println(\"An IO exception has occurred writing to .\" + fileName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private static void loadTaskFile() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            File directory \u003d new File(directoryName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            File file \u003d new File(fileName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            // creates data directory if it does not exist"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            // creates duke.txt if it does not exist"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String plainText \u003d s.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String[] plainTextSplit \u003d plainText.split(\" \\\\| \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String newTaskCategory \u003d plainTextSplit[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String newTaskStatus \u003d plainTextSplit[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String newTaskDescription \u003d plainTextSplit[2];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String newTaskTime \u003d plainTextSplit.length \u003e 3 ? plainTextSplit[3] : \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                switch (newTaskCategory) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    taskList.add(new ToDo(newTaskDescription, Boolean.parseBoolean(newTaskStatus)));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    if (newTaskTime.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        throw new DukeException(\"Error reading from \" + fileName + \": Event is missing time\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        taskList.add(new Event(newTaskDescription, Boolean.parseBoolean(newTaskStatus), newTaskTime));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    if (newTaskTime.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        throw new DukeException(\"Error reading from \" + fileName + \": Deadline is missing time\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        taskList.add(new Deadline(newTaskDescription, Boolean.parseBoolean(newTaskStatus), newTaskTime));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Scanner myObj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String MSG_DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(\"Hello I\u0027m batman\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        loadTaskFile();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        while (myObj.hasNext()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String input \u003d myObj.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String[] taskInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String taskCategory \u003d taskInput[0];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                boolean validTask \u003d taskCategory.equals(\"todo\") || taskCategory.equals(\"event\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        || taskCategory.equals(\"deadline\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                if (taskCategory.equals(\"bye\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    System.out.println(\"Bye bye\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                } else if (taskCategory.equals(\"list\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        System.out.println(\"You have no tasks currently :)\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        for (int n \u003d 1; n \u003c\u003d taskList.size(); n++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                            System.out.println(n + \".\" + taskList.get(n - 1));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                } else if (taskCategory.equals(\"done\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    int taskNumberToMark \u003d parseTaskNumber(input);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    markTask(taskNumberToMark);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    updateTaskFile();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                } else if (taskCategory.equals(\"delete\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    int taskNumberToMark \u003d parseTaskNumber(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    deleteTask(taskNumberToMark);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    updateTaskFile();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                } else if (validTask) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    boolean incompleteTask \u003d taskInput.length \u003d\u003d 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    if (incompleteTask) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        throw new IncompleteCommandException(taskCategory);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    String taskMessage \u003d taskInput[1];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    Task newTask;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    if (taskCategory.equals(\"todo\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        newTask \u003d new ToDo(taskMessage);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        String[] taskMessageArr \u003d taskMessage.split(\"/\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        boolean hasTime \u003d taskMessageArr.length \u003e 1 \u0026\u0026"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                                taskMessageArr[1].split(\" \", 2).length \u003e 1;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        if (!hasTime) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                            throw new DukeException(\"Please specify the time of task \" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                                    \"e.g. event finish book /by 2019-15-10\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        String taskTime \u003d taskMessageArr[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        if (taskCategory.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                            newTask \u003d new Deadline(taskMessageArr[0].trim(), taskTime);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                            newTask \u003d new Event(taskMessageArr[0].trim(), taskTime);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    taskList.add(newTask);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    String remainingTasksMsg \u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask + remainingTasksMsg);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    updateTaskFile();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    throw new CommandNotFoundException();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                System.out.println(\"Datetime could not be recognised. Use yyyy-mm-dd format e.g. 2019-10-15\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                System.out.println(MSG_DIVIDER);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 185,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Event(String description, String at) throws DateTimeParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Event(String description, boolean isDone, String at) throws DateTimeParseException  {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getPlainText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return super.getPlainText() + \" | \" + at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String formattedAt \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedAt + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 31
    }
  },
  {
    "path": "src/main/java/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class IncompleteCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public IncompleteCommandException(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(\"OOPS!!! The description of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getPlainText() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        char className \u003d this.getClass().getSimpleName().charAt(0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String completionStatus \u003d isDone? \"1\" : \"0\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return className + \" | \" + completionStatus + \" | \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 35
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "deadline wakeup /by 730am"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "todo finish cs2103 ip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "event lunch /at 12pm-1pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "event todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "todo event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "hey alexa play despacito"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 1,
      "-": 20
    }
  }
]
