[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 17,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "﻿# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Duke is a revolutionary **chatbot desktop app that keeps track of your tasks for you.** **Optimised for use via a Command Line Interface** (CLI), Duke also supports a beautiful Graphical User Interface (GUI) to brighten up your day and help you get things done faster."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "# Table Of Contents"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "* Quick Start"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "* Features"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t1.  Adding a task : "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t\t\ta. Todo : [``` todo```](https://avalionnet.github.io/ip/#Todo)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t\t\tb. Event : [```event```](https://avalionnet.github.io/ip/#Event)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t\t\tc. Deadline : [```deadline```](https://avalionnet.github.io/ip/#Deadline)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t2.\tViewing tasks :"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t\t\ta.\tView all saved tasks : ``` list```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t\t\tb.\tView all tasks on a particular date : ```view```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t\t\tc.\tFind a task by name/description : ``` find```"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t3.\tMark a task as done : ``` done```"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t4. Delete a task : ``` delete```"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t5.\tExit the program: ``` bye```"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "* Command Syntax Summary"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "# Quick Start"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Installing Duke is fairly simple and 5 minutes is all you will need. Mark the list as you complete the steps below!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - [ ] Ensure that you have Java `11` or above installed on your computer. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - To find out the Java version you have installed, click [here](https://www.java.com/en/download/help/version_manual.xml). "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - If Java is not installed on your computer, click [here](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html) to download it. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - [ ] Download the latest `duke.jar` software from [here](https://github.com/avalionnet/ip/releases)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - [ ] Save the file to the folder you want Duke to be installed in. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - [ ] Double-click the `duke.jar` file to start the app. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - **Note that Duke will automatically create an additional `data` folder in this \tdirectory to save your tasks upon starting the program for the first time."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " - You should observe the following GUI appearing :"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " **INSERT GUI HERE**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "# Tutorial"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Here are some features you can try upon your first launch of duke. Type the following commands in the input field at the bottom of the GUI and hit enter or click on the send button. Observe what happens."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "- [ ]   **`todo`**`Complete weekly programming quiz`  : "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\t\tAdds a task with the description  `Complete weekly programming quiz`  to your task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "- [ ]   **`list`**  : Lists all tasks scheduled"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "- [ ]  **`done`**`1`  : Marks the 1st task shown in the task list as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "- [ ]   **`delete`**`1`  : Deletes the 1st task shown in the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "- [ ]  **`bye`**  : Exits the app."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "- [ ] Refer to the Features Section below for more commands that Duke supports."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "### **User Guide Command Formatting :**  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-    `UPPER_CASE` values used in command formatting examples indicates the unique parameters the user needs to provide.   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e For example,  in  `done INDEX`,  `INDEX`  here refers to the index of the task that the user wants to mark as complete and hence can take on a varying value (1 - size of list)."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "- Items in square brackets are optional.  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e For instance,  `deadline DESCRIPTION /by DATE [TIME]`  can be used as  `deadline"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e submit report /by 03.12.20 1800`  or as  `deadline submit report /by"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e 03.12.20`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "## 1. Adding a task "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "### `Todo`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Calling the **todo** command adds a todo task to the task list. A **todo** task contains only requires a description and will not accept an accompanying date or time. To add tasks with date and time, refer to the [deadline](https://avalionnet.github.io/ip/#Deadline) or [event](https://avalionnet.github.io/ip/#Event) commands."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Command Syntax: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e Examples:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `todo Celebrate Teacher\u0027s Day`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `todo Complete GEQ1000 Quiz`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "### `Event`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Calling the **event** command adds an event task to the task list. An **event** task contains a description, date and time parameter to indicate the event\u0027s date and time."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Format: `event DESCRIPTION /at DATE TIME`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Examples:**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `event CS2101 OP1 /at 15.09.20 1000`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `event Hackathon Finale /at 19.09.20 0900`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " \u003e**Important Note :** "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e - The delimiter **/at must be added** between the `DESCRIPTION` and `DATE` of the event."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e - The date specified must be set in the future and must follow the format **dd.mm.yy**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e Note that a single digit day or month must also be accompanied by a 0 in front."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " (i.e. 03.02.21 to denote 3rd Feburary 2021)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e - Any time specified must be in the **HHmm** format. "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " (i.e. 2100 to denote 9 p.m)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " \u003e- Please ensure that there is a space between all key parameters for accurate parsing by Duke."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "### `Deadline`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Calling the **deadline** command adds a deadline task to the task list. A **deadline** task contains a description, date and time parameter to indicate the event\u0027s date and time."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE TIME`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Examples:**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `deadline CS2100 lab 2 /at 20.09.20 1000`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `deadline Art competition submission /at 30.10.20 2100`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " \u003e**Important Note :** "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e - The delimiter **/by must be added** between the `DESCRIPTION` and `DATE` of the event."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e - The date specified must be set in the future and must follow the format **dd.mm.yy**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e Note that a single digit day or month must also be accompanied by a 0 in front."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " (i.e. 03.02.21 to denote 3rd Feburary 2021)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e - Any time specified must be in the **HHmm** format. "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " (i.e. 2100 to denote 9 p.m)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " \u003e- Please ensure that there is a space between all key parameters for accurate parsing by Duke."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "![Image of Duke Chatbot]()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "## 2. Viewing tasks "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "### a. View all saved tasks : `list`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Displays and prints all tasks in the task list to the GUI."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Format:  `list`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Note:**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e Do not add any other parameters or descriptions behind the list word to trigger this command successfully."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "![Image of List Command]()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "### b. View all tasks on a particular date : `view`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Finds tasks that match the specified date. Only works with tasks that support date and time values like `deadline` or `event` tasks."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Format:  `view DATE`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Examples:**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  For illustration purposes, let us assume that your current task list contains the following tasks:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  1. todo buy dinner "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  2. event attend housewarming party /at 29.10.20  1000"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  3. deadline submit CS2103T user guide /by 18.09.20 2359"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  4. event halo meetup /at 29.10.20 0900"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `find 29.10.20`  returns  tasks **2 and 4**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `find 18.09.20`  returns  task **3**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -    task 1 will never be returned"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Note:** "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e - The date specified must be set in the future and must follow the format **dd.mm.yy**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e Note that a single digit day or month must also be accompanied by a 0 in front."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " (i.e. 03.02.21 to denote 3rd Feburary 2021)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   The view command only supports a search by the input date. Searching by time is not yet supported."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   Please do not specify more than 1 date"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "### c. Find a task by name : `find`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Find tasks in the task list with descriptions that match or contains the given keyword(s)."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Format:  `find KEYWORD [MORE_KEYWORDS]`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Examples:**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e For illustration purposes, let us assume that your current task list contains the following tasks:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  1) todo return Henry his iPhone cable "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  2) todo treat Henry to lunch"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  3) deadline pass Henry the completed source code /by 20.10.22"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `find Henry`  returns  tasks **1 , 2 and 3**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `find iPhone cable`  returns task 1"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   `find dinner` returns no task"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Note:**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   The search only works on task descriptions."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   The search is case-sensitive. e.g  `Henry`  will match  `Henry` and not `henry`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   The order of the keywords matters. e.g.  `iPhone cable`  will not match  `cable iPhone`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   Partial words will also be matched e.g.  `iP`  will match  `iPhone`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e -   Only tasks matching all keywords specified will be returned  e.g.  `treat Henry`  will not match with  `treat Peter`,   `treat ***` or `*** Henry` where *** refers to an arbitrary value."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "![Image of Find Command]()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "## 3. Marking a completed task : `done`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Mark a task as complete or done. This adds a tick symbol beside the targeted task."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Command syntax:  **`done`**`TASK_INDEX`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   Marks the task at the specified  `TASK_INDEX` as done."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   First, use the `list` command to find the index of the task you want to mark as done. "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   The `TASK_INDEX` here refers to the number shown beside the accompanying task in the task list after displaying it with the`list` command."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   Please use a  **positive integer**  (eg. 1, 2, 3 …) for the index value to successfully mark a task as done."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Note:**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  The task index must reference an existing task in the task list."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "![Image of Done Command]()"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "## 4. Deleting a task : `delete`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   Deletes the task at the specified  `TASK_INDEX` from the task list."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   First, use the `list` command to find the index of the task you want to delete. "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   The `TASK_INDEX` here refers to the number shown beside the accompanying task in the task list after displaying it with the`list` command."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-   Please use a  **positive integer**  (eg. 1, 2, 3 …) for the index value to successfully mark a task as done."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Note:**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e  The task index must reference an existing task in the task list."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "## 5. Exit the program: `bye`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Closes Duke and exits the program."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Command syntax:  `bye`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e **Note:**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003e Do not add any other parameters or descriptions behind the list word to trigger this command successfully."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "# Command syntax summary"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "Action | Command Syntax \u0026 Example Application"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "-------- | -----"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "todo | `todo DESCRIPTION` e.g. `todo Celebrate Teacher\u0027s Day`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "event | `event DESCRIPTION /at DATE TIME` e.g. `event CS2101 OP1 /at 15.09.20 1000`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "deadline | `deadline DESCRIPTION /by DATE TIME` e.g.`deadline CS2100 lab 2 /at 20.09.20 1000`"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "list | `list`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "view | `view DATE` e.g. `view 12.12.20`"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "find | `find KEYWORD [MORE_KEYWORDS]` e.g. `find my coffee`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done | `done TASK_INDEX` e.g. `done 1`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "delete | `delete TASK_INDEX` e.g. `delete 3`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "bye | `bye`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 224,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Initialises a functional chat-bot to save and display various tasks added by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Includes tasks like toDo, Deadline and Events"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Storage object to save tasks to data file. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** TaskList to hold user tasks. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Ui object to print user messages. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Boolean object to indicate if the user wants to close duke */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Loads tasks into duke from the data file specified by the user\u0027s filePath."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param filePath The file path of the data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param folderPath The folder path of the data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Duke(String filePath, String folderPath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        storage \u003d new Storage(filePath, folderPath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Allow duke to start reading user input and process the commands appropriately."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Stops the program when the ExitCommand is encountered."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String run(String command) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d \"\"; // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            String fullCommand \u003d command;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            this.isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 75,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.controllers.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Duke duke \u003d new Duke(\"./Data/data.txt\", \"./Data\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            ap.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 36
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A command to add different types of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the type of the task to be added. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the description of the task to be added. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the time of the task to be added. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private LocalTime localTime \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the date of the task to be added. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private LocalDate localDate \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates an add command with appropriate task info."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param taskType Type of task to be added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public AddCommand(String taskType, String description) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Overloaded constructor specifically for deadline and event tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param taskType Type of task to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localDate Task date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localTime Task time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public AddCommand(String taskType, String description, LocalDate localDate, LocalTime localTime) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.localTime \u003d localTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Executes the command to perform its appropriate action."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Adds different types of tasks depending on the task type."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param tasks Duke task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print user messages."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param storage Storage object to load and save tasks to data file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"todo\" :"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d tasks.addTodo(ui, this.description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            storage.save(tasks.convertToFile());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"event\" :"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d tasks.addEvent(ui, this.description, this.localDate, this.localTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            storage.save(tasks.convertToFile());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"deadline\" :"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d tasks.addDeadline(ui, this.description, this.localDate, this.localTime);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            storage.save(tasks.convertToFile());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return \"Error in AddCommand execute method\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 86
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * An abstract class for all Command types to inherit from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** boolean to indicate if an exit command is triggered."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * True if the command is triggered and false otherwise."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Executes the command to perform its appropriate action."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param tasks Duke task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print user messages."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param storage Storage object to load and save tasks to data file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Checks if the exit command has been triggered."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return Boolean of whether the exit command has been triggered."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A command to delete a specific task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Index of the task to be deleted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates a delete command with the appropriate task index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param size Task index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public DeleteCommand(int size) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.index \u003d size;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Executes the command to perform its appropriate action."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param tasks Duke task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print user messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param storage Storage object to load and save tasks to data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.listSize()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assert index \u003e 0 : \"Negative index value detected at execute method\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d tasks.taskDelete(index, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            storage.save(tasks.convertToFile());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"Invalid index entry for done command.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A command to mark a task as completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Index of the task to be completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates a done command with the appropriate task index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param size Task index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public DoneCommand(int size) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.index \u003d size;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Executes the command to perform its appropriate action."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param tasks Duke task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print user messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param storage Storage object to load and save tasks to data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.listSize()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assert index \u003e 0 : \"Negative index value detected at execute method\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d tasks.taskDone(index, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            storage.save(tasks.convertToFile());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"Invalid index entry for done command.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A command to exit duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Executes the command to perform its appropriate action."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param tasks Duke task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print user messages."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param storage Storage object to load and save tasks to data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        storage.save(tasks.convertToFile());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return ui.showExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 25
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A command to find tasks from task list via a keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the description of the task to be added. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates a find command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description The description of the task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Executes the command to perform its appropriate action."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param tasks Duke task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print user messages."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param storage Storage object to load and save tasks to data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return tasks.findTask(ui, this.description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * A command to display the tasks in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Executes the command to perform its appropriate action."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param tasks Duke task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print user messages."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param storage Storage object to load and save tasks to data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return tasks.printList(ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ViewDayCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class ViewDayCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private String dateTimeData;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private DateTimeFormatter dateFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public ViewDayCommand(String dateTimeData, DateTimeFormatter dateFormatter) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.dateTimeData \u003d dateTimeData;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.dateFormatter \u003d dateFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        LocalDate date \u003d parseDate();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return tasks.ViewScheduleOfDay(ui, date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private LocalDate parseDate() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return LocalDate.from(dateFormatter.parse(dateTimeData));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"It seems like you\u0027ve provided us \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"with the wrong date format for your event. \\uD83D\\uDE1E\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"\\n\\nPlease structure it as dd.mm.yy where d refers to day, m refers to month\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"and y refers to year\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"\\n\\nFor example, 05.02.20 1200 represents 5th Feb 2020, 12pm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 38
    }
  },
  {
    "path": "src/main/java/duke/controllers/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 61
    }
  },
  {
    "path": "src/main/java/duke/controllers/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser3.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                DialogBox.getDukeDialog(duke.welcome(), dukeImage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void setStage(Stage stage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.stage \u003d stage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d duke.run(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (this.duke.isExit()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            closeDuke();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private void closeDuke() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        // Disable all user interactable."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        userInput.setOnAction(null);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        sendButton.setOnAction(null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        // Set short delay for displaying of exit message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        delay.setOnFinished(event -\u003e stage.close());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        delay.play();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 82
    }
  },
  {
    "path": "src/main/java/duke/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "T///0///chore///"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "T///1///happy///"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "D///1///test2 ///2020-12-12 15:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "E///0///hello ///2020-10-10 23:59"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "T///1///play///"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "T///0///2100 play///"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "T///0///chores///"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "E///0///project meeting ///2020-12-20 12:00"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "E///0///test 3 ///2020-12-12 01:00"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "D///0///test 5 ///2020-12-12 00:12"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Creates a DukeException to handle duke related errors"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates a duke exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param error Error message for the duke error."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Returns the error message of the exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The error message of the exception."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 24
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.command.ViewDayCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Parses and understands user commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Break down user input string and creates appropriate user commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Checks for wrong user inputs and throw Duke Exceptions if necessary."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private static String unknownCommandMessage \u003d \"OOPS!!! I\u0027ve not yet learned what that means.\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \" Please enter a valid command :) \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"\\n\\nAdditionally, do note that the description cannot be empty \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"for the following commands:\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"\\n1. event\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"\\n2. deadline\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"\\n3. done\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"\\n4. delete\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"\\n5. find\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            + \"\\n6. view\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private static boolean isValidDescription(String[] userInput) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (userInput.length \u003d\u003d 1 || userInput[1].equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(unknownCommandMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private static Command DeadlineAndEventHandler(String[] userInput, String eventType"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            , String keyword, DateTimeFormatter dateFormatter"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            , DateTimeFormatter timeFormatter) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String[] content \u003d userInput[1].split(keyword, 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (content.length \u003d\u003d 1 || content[0].equals(\"\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"It seems you\u0027ve not used the appropriate \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"command syntax. \\uD83D\\uDE1E\\n\\nPlease use the following formatting:\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"\\nevent DESCRIPTION /at DD.MM.YY HHmm or\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"deadline DESCRIPTION /by DD.MM.YY HHmm\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (content[1].equals(\"\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"Beep bop!!! We can\u0027t seem to find your event time. \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"\\uD83D\\uDE1E\\n\\nPlease type \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + (eventType.equals(\"deadline\") ? \"/by\" : \"/at\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \" before your preferred timing\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            String[] dateTime \u003d content[1].split(\" \", 3);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (dateTime.length !\u003d 3) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                throw new DukeException(\"Beep bop!!! We can\u0027t seem to find your event time. \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                        + \"\\uD83D\\uDE1E\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            LocalDate localDate \u003d LocalDate.from(dateFormatter.parse(dateTime[1]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            LocalTime localTime \u003d LocalTime.from(timeFormatter.parse(dateTime[2]));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new AddCommand(eventType, content[0], localDate, localTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"It seems like you\u0027ve provided us \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"with the wrong date time format for your event. \\uD83D\\uDE1E\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"\\n\\nPlease structure it as dd.mm.yy HHmm where H refers to hour and m refers to min\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    + \"\\n\\nFor example, 05.02.20 1200 represents 5th Feb 2020, 12pm\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private static Command DeleteAndDoneHandler(String[] userInput, String taskType) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            int index \u003d Integer.parseInt(userInput[1]) - 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                throw new DukeException(\"Wrong usage of DeleteAndDoneHandler method in Parser class\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"Please provide a positive number when indicating task index.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Static method to parse user input."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param userCommand User string from the command line."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return Appropriate command to reflect user input."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public static Command parse(String userCommand) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        // Formats the way users input their dates for a task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd.MM.yy\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        // Formats the way users input their time for a task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String[] userWord \u003d userCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (userCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        isValidDescription(userWord);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        // Switch block checks for the appropriate commands to create based on user input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        switch (userWord[0]) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"view\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new ViewDayCommand(userWord[1], dateFormatter);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new FindCommand(userWord[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new AddCommand(\"todo\", userWord[1]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return DeadlineAndEventHandler(userWord, \"deadline\", \"/by\", dateFormatter, timeFormatter);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return DeadlineAndEventHandler(userWord, \"event\", \"/at\", dateFormatter, timeFormatter);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return DeleteAndDoneHandler(userWord, \"done\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return DeleteAndDoneHandler(userWord, \"delete\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(unknownCommandMessage);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 156
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Initialises a storage object to save and load from the data file for duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Default filePath for data file. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private String filePath \u003d \"./src/main/java/duke/Data/data.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Default folderPath for data file. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private String folderPath \u003d \"./src/main/java/duke/Data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Constructor to create a storage object with proper referencing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param filePath File path of data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param folderPath Folder path of data file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Storage(String filePath, String folderPath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.folderPath \u003d folderPath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates a folder in the directory if it does not exist."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void makeFolder() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        File savedFolder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        savedFolder.mkdir();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.makeFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates the data file if it does not exist in the directory."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void makeFile() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assert !filePath.isEmpty() : \"Filepath is empty\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        File savedFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            savedFile.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"    Error creating data storage file for duke\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Loads the tasks from the data file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return ArrayList of string to be converted into tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assert !filePath.isEmpty() : \"Filepath is empty\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assert !folderPath.isEmpty() : \"FolderPath is empty\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        File savedFolder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        File savedFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (!savedFolder.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            this.makeFolder();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (!savedFile.exists()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            this.makeFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(savedFile));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            String storedTask \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            ArrayList\u003cString\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            while ((storedTask \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                listOfTasks.add(storedTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return listOfTasks;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"   File not found!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"   IOException encountered in loading data file.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Saves the tasks in duke for the next load."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param listOfTasks List of tasks to be saved to data file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void save(ArrayList\u003cString\u003e listOfTasks) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            for (String task : listOfTasks) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                writer.write(task + System.lineSeparator());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"   Error writing to data file\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 112
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Initialises a Deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the time of the task. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected LocalTime localTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the date of the task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected LocalDate localDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates a deadline task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param name The description of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localDate The date of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localTime The time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Deadline(String name, LocalDate localDate, LocalTime localTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.localTime \u003d localTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Converts the task to a writable format for the data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation of the task for the data file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"D///\" + super.toData() + localDate.toString() + \" \" + localTime.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean isOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return this.localDate.equals(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the string representation for the task for the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation for the task for the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String date \u003d this.localDate.format(DateTimeFormatter.ofPattern(\"E MMM d yyyy\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String time \u003d this.localTime.format(DateTimeFormatter.ofPattern(\"HH mm a\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Initialises an Event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the time of the task. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected LocalTime localTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Stores the date of the task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected LocalDate localDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates an event task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param name The description of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localDate The date of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localTime The time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Event(String name, LocalDate localDate, LocalTime localTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.localTime \u003d localTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Converts the task to a writable format for the data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation of the task for the data file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"E///\" + super.toData() + localDate.toString() + \u0027 \u0027 + localTime.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean isOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return this.localDate.equals(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the string representation for the task for the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation for the task for the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String date \u003d this.localDate.format(DateTimeFormatter.ofPattern(\"E MMM d yyyy\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String time \u003d this.localTime.format(DateTimeFormatter.ofPattern(\"HH mm a\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * An abstract class providing the blueprint for a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Boolean to determine if the task is completed. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** The description of the task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Constructor to create a Task. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Checks if the current task has a description that matches the search description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description Represents the search keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return True if the description of the task matches the search keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     *             Else returns false."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean isResult(String description) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            return this.name.contains(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"    Please avoid using null as a search keyword.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Mark the task as completed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void completed() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Converts the task to a writable format for the data file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation of the task for the data file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return (isDone ? \"1///\" : \"0///\") + name + \"///\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public boolean isOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the string representation for the task for the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation for the task for the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return (isDone ? \"[\\u2705]\" : \"[\\u2718]\") + \" \" + name;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 70
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Initialises a list to store all tasks captured in duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** A list to store all user tasks. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private ArrayList\u003cString\u003e preProcessedTasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Constructor to create an empty taskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.preProcessedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Constructor to load a taskList from the data file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param inputList List of tasks from data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e inputList) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.preProcessedTasks \u003d inputList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.parseFile(this.preProcessedTasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Returns the list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return this.listOfTasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Returns the list size."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The number of tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public int listSize() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return this.listOfTasks.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the descriptions of all tasks in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui The Ui object to print messages."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String printList(Ui ui) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d ui.printResult();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (Task task: this.listOfTasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d response + \"\\n\" + ui.printTask(counter, task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Adds a toDo task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print messages."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description Description of the task to be created."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String addTodo(Ui ui, String description) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        ToDo newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return ui.addTask(listOfTasks.size(), newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Adds a Event task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print messages."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description Description of the task to be created."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localDate Time of the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localTime Date of the task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String addEvent(Ui ui, String description, LocalDate localDate, LocalTime localTime) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Event newEvent \u003d new Event(description, localDate, localTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.listOfTasks.add(newEvent);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return ui.addTask(listOfTasks.size(), newEvent);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Adds a Deadline task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print messages."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description Description of the task to be created."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localDate Time of the task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param localTime Date of the task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String addDeadline(Ui ui, String description, LocalDate localDate, LocalTime localTime) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, localDate, localTime);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.listOfTasks.add(newDeadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return ui.addTask(listOfTasks.size(), newDeadline);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Marks a task as completed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param index The index of the task to be completed."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print messages."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String taskDone(int index, Ui ui) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assert index \u003e 0 : \"Negative index detected\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Task temp \u003d this.listOfTasks.get(index);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        temp.completed();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return ui.markDone(temp);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print messages."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String taskDelete(int index, Ui ui) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assert index \u003e 0 : \"Negative index detected\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Task temp \u003d this.listOfTasks.get(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.listOfTasks.remove(index);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return ui.markDelete(listOfTasks.size(), temp);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Converts all tasks in the list to a format for saving to data file."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return ArrayList of Strings representing each task to be saved by data file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public ArrayList\u003cString\u003e convertToFile() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        ArrayList\u003cString\u003e dataFile \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (Task task: this.listOfTasks) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            dataFile.add(task.toData());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return dataFile;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Find tasks that match the keyword from the task list."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param ui Ui object to print messages to users."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String findTask(Ui ui, String description) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (Task t : this.listOfTasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (t.isResult(description)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                result.add(t);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (result.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"No matching task found \\uD83D\\uDE48\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d ui.printResult();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (Task task: result) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d response + \"\\n\" + ui.printTask(counter, task);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Parses the list of tasks fetched from the data file."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Populates the taskList with the user\u0027s task history."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param listOfTasks Fetched from the data file."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void parseFile(ArrayList\u003cString\u003e listOfTasks) throws DukeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (String t: listOfTasks) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            String[] task \u003d t.split(\"///\", 4);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (task.length !\u003d 4) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                throw new DukeException(\"Error in data file dividers ///\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (!task[1].equals(\"1\") \u0026\u0026 !task[1].equals(\"0\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                throw new DukeException(\"Error encountered in reading task done status.\" + task[1]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            switch (task[0]) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            case \"T\" :"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                ToDo newTask \u003d new ToDo(task[2]);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                if (task[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    newTask.completed();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                this.listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            case \"E\" :"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                DateTimeParser(task, \"E\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            case \"D\" :"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                DateTimeParser(task, \"D\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                throw new DukeException(\"Error parsing file.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private void DateTimeParser(String[] parseString, String EventType) throws DukeException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String[] dateTime \u003d parseString[3].split(\" \", 2);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (dateTime.length !\u003d 2) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"Error in date time formatting encountered in data file\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (EventType.equals(\"E\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                task \u003d new Event(parseString[2], localDate, localTime);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (EventType.equals(\"D\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                task \u003d new Deadline(parseString[2], localDate, localTime);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (parseString[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                task.completed();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            this.listOfTasks.add(task);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"Error in date time formatting encountered in data file\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String ViewScheduleOfDay(Ui ui, LocalDate date) throws DukeException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (Task t : this.listOfTasks) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            if (t.hasDate() \u0026\u0026 t.isOnDate(date)) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                result.add(t);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        if (result.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"No matching task found :(\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String response \u003d ui.printResult();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        for (Task task: result) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            response \u003d response + \"\\n\" + ui.printTask(counter, task);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            counter +\u003d 1;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 249
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Initialises a toDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Creates a todo task with a description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Converts the task to a writable format for the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation of the task for the data file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"T///\" + super.toData();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the string representation for the task for the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @return The string representation for the task for the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 33
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " * Contains and executes all user interaction methods."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Takes in user commands from the command line. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Initialises the Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Reads a line of user input. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Prints welcome message. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        String logo \u003d \"\\n____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"Yoohoo \\uD83D\\uDE1B \\uD83D\\uDC2F\" + logo + \"\\nis reporting for duty! \\uD83E\\uDDB8\\u200D\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"Yoohoo \\uD83D\\uDE1B \\uD83D\\uDC2F\" + \"\\nDuke reporting for duty! \\uD83E\\uDDB8\\u200D\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Prints a breakLine. */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    ______________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"    ______________________________________________________\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Prints loading error."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param error error message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String showLoadingError(String error) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints duke exception error message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param error Duke exception message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String showError(String error) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /** Prints exit statement. */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Print task description."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param counter Index of the task in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param task The task to print."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String printTask(int counter, Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    \" + counter + \": \" + task.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return counter + \": \" + task.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the search result."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String printResult() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"Hehe found them \\uD83D\\uDE1B\\n\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the add task message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param listSize The size of the task list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param task The task to add into the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String addTask(int listSize, Task task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task: \\n     \" + task.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Now you have \" + listSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\" + task.toString()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"\\nNow you have \" + listSize + \" tasks in the list.\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the done message."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param task The task that is completed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String markDone(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    \" + task.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"\\n\" + task.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * Prints the delete message."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param listSize The size of the task list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     * @param task The task to delete from the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public String markDelete(int listSize, Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    \" + task.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        System.out.println(\"    Now you have \" + listSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"\\n\" + task.toString()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                + \"\\nNow you have \" + listSize + \" tasks in the list.\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 125
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003cVBox fx:id\u003d\"textBubble\" maxHeight\u003d\"-Infinity\" styleClass\u003d\"text-bubble\" stylesheets\u003d\"@dukeStyle.css\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "      \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "      \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" lineSpacing\u003d\"2.0\" wrapText\u003d\"true\" \u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                  \u003cInsets top\u003d\"3.0\" bottom\u003d\"3.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "              \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 28
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"  AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"40.0\" stylesheets\u003d\"@dukeStyle.css\" styleClass\u003d\"anchor\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"${scrollPane.height}\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "              prefWidth\u003d\"${scrollPane.width}\"  styleClass\u003d\"v-box\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 23
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void executeToDoTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Storage storage \u003d new Storage(\"./src/test/java/duke/Data/data.txt\", \"./src/test/java/duke/Data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            Command addCommand \u003d new AddCommand(\"todo\", \"pass test 1\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            addCommand.execute(list, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertEquals(1, list.getListOfTasks().size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertTrue(list.getListOfTasks().get(0) instanceof ToDo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void executeDeadlineTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Storage storage \u003d new Storage(\"./src/test/java/duke/Data/data.txt\", \"./src/test/java/duke/Data\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            Command addCommand \u003d new AddCommand(\"deadline\", \"pass test 2\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    LocalDate.parse(\"2020-12-01\"), LocalTime.parse(\"12:00\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            addCommand.execute(list, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertEquals(1, list.getListOfTasks().size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertTrue(list.getListOfTasks().get(0) instanceof Deadline);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void executeEventTest() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        Storage storage \u003d new Storage(\"./src/test/java/duke/Data/data.txt\", \"./src/test/java/duke/Data\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            Command addCommand \u003d new AddCommand(\"event\", \"pass test 3\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "                    LocalDate.parse(\"2029-12-01\"), LocalTime.parse(\"17:00\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            addCommand.execute(list, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertEquals(1, list.getListOfTasks().size());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertTrue(list.getListOfTasks().get(0) instanceof Event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 66
    }
  },
  {
    "path": "src/test/java/duke/exception/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void getMessageTest1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"test 1\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertEquals(\"test 1\", e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void getMessageTest2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"test 2\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertEquals(\"test 2\", e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void getMessageTest3() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            throw new DukeException(\"test 1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "            assertTrue(e instanceof DukeException);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 35
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void getListTest1() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 1\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 2\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 3\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assertEquals(3, list.getListOfTasks().size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void getListTest2() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 1\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 2\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 3\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assertFalse (list.getListOfTasks().get(1) instanceof Deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assertFalse(list.getListOfTasks().get(1) instanceof Event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assertTrue(list.getListOfTasks().get(1) instanceof ToDo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    public void taskDeleteTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 2\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.addTodo(new Ui(), \"item 3\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        list.taskDelete(2, new Ui());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "        assertEquals(2, list.getListOfTasks().size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 44
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "deadline return book /by 06.06.20 1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "event project meeting /at 06.08.20 1000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "carrots"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "event cca meeting /at 03.06.20 2000"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "deadline go to bed /by 28.08.20 0100"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "if not exist \"%CD%\\..\\bin\" mkdir \"%CD%\\..\\bin\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "javac  -cp \"%CD%\\..\\src\\main\\java\" -Xlint:none -d \"%CD%\\..\\bin\" \"%CD%\\..\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "java -classpath \"%CD%\\..\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Avalionnet"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "Avalionnet": 5,
      "-": 18
    }
  }
]
