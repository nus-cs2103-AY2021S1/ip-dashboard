[
  {
    "path": "src/main/java/Bot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Bot {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    String delim;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    ArrayList\u003cTask\u003e activityList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n What can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    String goodbyeMessage \u003d \"Bye! Message me anytime!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    Pattern datePattern \u003d Pattern.compile(\"^([0-9]{1,2})[/-]([0-9]{1,2})[/-]([0-9]{4}) ([0-9]{4})$\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Bot(String delim) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.delim \u003d delim;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.activityList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void reply(String content) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.delim);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.delim);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void initialise() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        reply(welcomeMessage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void goodByeMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        reply(goodbyeMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void addTodo(String activity) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task todoTask \u003d new TodoTask(activity);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        activityList.add(todoTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        activityReply(todoTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void addDeadline(String activity, String deadline) throws InvalidDateException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        LocalDateTime dateTime \u003d this.parseDate(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task deadlineTask \u003d new DeadlineTask(activity, dateTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        activityList.add(deadlineTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        activityReply(deadlineTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void addEvent(String activity, String time) throws InvalidDateException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        LocalDateTime dateTime \u003d this.parseDate(time);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task event \u003d new EventTask(activity,dateTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        activityList.add(event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        activityReply(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void parseFile(File file) throws DukeException{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            //T | 1 | read book"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                Task task \u003d readLine(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    this.activityList.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch(FileNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new DukeException(\"File not Found\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (IOException e2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new DukeException(\"IO Exception\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Task readLine(String line) throws InvalidDateException, InvalidInputException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern todoPattern \u003d Pattern.compile(\"T \\\\| ([01]) \\\\| (.+)\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern deadlinePattern \u003d Pattern.compile(\"D \\\\| ([01]) \\\\| (.+?) \\\\| (.+)\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern eventPattern \u003d Pattern.compile(\"E \\\\| ([01]) \\\\| (.+?) \\\\| (.+)\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher todoMatcher \u003d todoPattern.matcher(line);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher deadlineMatcher \u003d deadlinePattern.matcher(line);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher eventMatcher \u003d eventPattern.matcher(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        if (todoMatcher.find()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new TodoTask(todoMatcher.group(2), Integer.parseInt(todoMatcher.group(1)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else if (deadlineMatcher.find()){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new DeadlineTask(deadlineMatcher.group(2), Integer.parseInt(deadlineMatcher.group(1)), LocalDateTime.parse(deadlineMatcher.group(3)));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else if (eventMatcher.find()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            return new EventTask(eventMatcher.group(2), Integer.parseInt(eventMatcher.group(1)), LocalDateTime.parse(eventMatcher.group(3)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            // Formats do not match, input given is invalid"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void activityReply(Task task) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.delim);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(replyTaskNum());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.delim);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String replyTaskNum() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "       return String.format(\"You have %s tasks currently, work on them soon!\", activityList.size());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void displayActivities() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.delim);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(\"Here are your current tasks:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        for (int i \u003d 0; i \u003c activityList.size(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            System.out.println(i + 1 + \".\" + activityList.get(i));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        System.out.println(this.delim);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void completeTask(int taskNum) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task task \u003d activityList.get(taskNum - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        task.MarkAsDone();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        reply(\"Nice! I\u0027ve marked this task as done:\\n \" + task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Task task \u003d activityList.get(taskNum - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.activityList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        reply(String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n%s\", task, replyTaskNum()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void saveTasks(File file) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "         try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "             BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "             for (Task task: this.activityList) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                 if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                     writer.write(String.format(\"T | %s | %s\\n\", task.getHasCompleted(), task.getName()));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                 } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                     DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                     writer.write(String.format(\"D | %s | %s | %s\\n\", deadlineTask.getHasCompleted(), deadlineTask.getName(), deadlineTask.getDeadline()));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                 } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                     EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                     writer.write(String.format(\"E | %s | %s | %s\\n\", eventTask.getHasCompleted(), eventTask.getName(), eventTask.getTime()));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "             }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "             writer.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "         } catch(IOException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "             System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "         }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public LocalDateTime parseDate(String dateString) throws InvalidDateException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Matcher dateMatcher \u003d datePattern.matcher(dateString);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            if (dateMatcher.find()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                String day \u003d dateMatcher.group(1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                String month \u003d dateMatcher.group(2);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                String year \u003d dateMatcher.group(3);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                String time \u003d dateMatcher.group(4);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                LocalDateTime localDateTime \u003d LocalDateTime.parse(String.format(\"%s-%s-%s %s\", day,month,year,time), DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                return localDateTime;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                throw new InvalidDateException();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 175
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DeadlineTask(String name, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DeadlineTask(String name, int hasCompleted, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, hasCompleted);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.nio.file.NotDirectoryException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String SPACES \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        File file \u003d openFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Bot bot \u003d new Bot(SPACES);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            bot.parseFile(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        bot.welcomeMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern todo \u003d Pattern.compile(\"todo (.+)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern deadline \u003d Pattern.compile(\"deadline (.+?) /by (.+)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern event \u003d Pattern.compile(\"event (.+?) /at (.+)\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern done \u003d Pattern.compile(\"done ([0-9]+)\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        Pattern delete \u003d Pattern.compile(\"delete ([0-9]+)\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                if (next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    bot.saveTasks(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    bot.goodByeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                } else if (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    bot.displayActivities();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                } else if (next.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    Matcher doneMatcher \u003d done.matcher(next);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    if (doneMatcher.find()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        int taskNum \u003d Integer.parseInt(doneMatcher.group(1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        if (taskNum !\u003d 0 \u0026\u0026 taskNum \u003c\u003d bot.activityList.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                            bot.completeTask(taskNum);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                            throw new InvalidInputException(\"Number provided is too small or too large, Please provide a valid task number\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        throw new EmptyDescriptionException(\"done\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                } else if (next.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    Matcher deleteMatcher \u003d delete.matcher(next);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    if (deleteMatcher.find()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        int taskNum \u003d Integer.parseInt(deleteMatcher.group(1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        if (taskNum !\u003d 0 \u0026\u0026 taskNum \u003c\u003d bot.activityList.size()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                            bot.deleteTask(taskNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                            throw new InvalidInputException(\"Number provided is too small or too large, Please provide a valid task number\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        throw new EmptyDescriptionException(\"done\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                } else if (next.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    Matcher todoMatcher \u003d todo.matcher(next);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    if (todoMatcher.find()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        bot.addTodo(todoMatcher.group(1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                } else if (next.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    Matcher deadlineMatcher \u003d deadline.matcher(next);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    if (deadlineMatcher.find()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        bot.addDeadline(deadlineMatcher.group(1), deadlineMatcher.group(2));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                } else if (next.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    Matcher eventMatcher \u003d event.matcher(next);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    if (eventMatcher.find()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        bot.addEvent(eventMatcher.group(1), eventMatcher.group(2));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                        throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                    throw new InvalidInputException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public static File openFile() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String FILEPATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String FOLDERPATH \u003d \"data\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            File directory \u003d new File(FOLDERPATH);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            if (!directory.isDirectory()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                // create Directory data"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                File folder \u003d new File(FOLDERPATH);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                folder.mkdir();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            File file \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                return file;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "                return file;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 112,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        String SPACES \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.format(\"%s %s\\n%s\",SPACES, super.getMessage(), SPACES);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 11
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public EmptyDescriptionException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(String.format(\"Description of %s is empty, please try again.\",s));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    LocalDateTime time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public EventTask(String name, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public EventTask(String name, int hasCompleted, LocalDateTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, hasCompleted);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\" ;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 24
    }
  },
  {
    "path": "src/main/java/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public InvalidDateException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(\"Date is given in the wrong format! Please try again!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public InvalidDateException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 9
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(\"Input given is invalid! Please try again!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 9
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private int hasCompleted;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.hasCompleted \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public Task(String name, int hasCompleted) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.hasCompleted \u003d hasCompleted;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public void MarkAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        this.hasCompleted \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public int getHasCompleted() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return hasCompleted;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return String.format(\"[%s] %s\", this.hasCompleted \u003d\u003d 1 ? \"✓\": \"✗\", this.name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 29
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TodoTask(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public TodoTask(String name, int hasCompleted) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        super(name, hasCompleted);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/TodoTask.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/EventTask.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/DeadlineTask.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/Bot.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestlim8"
        },
        "content": "../src/main/java/Duke.java"
      }
    ],
    "authorContributionMap": {
      "ernestlim8": 6
    }
  }
]
