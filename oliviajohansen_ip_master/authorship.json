[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"oliviajohansen":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"checkstyle {"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"}"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"    //mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":""}],"authorContributionMap":{"oliviajohansen":22,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"Duke- the all-in-one friendly task manager :bowtie:"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"## Main Features \u003ca id\u003d\"Main-Features\"\u003e\u003c/a\u003e"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"### [Add todo task: ](#add-todo) `todo`"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"### [Add deadline task: ](#add-deadline) `deadline`"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"### [Add event task: ](#add-event) `event`"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"### [List all tasks: ](#list) `list`"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"### [Mark task as done: ](#done) `done`"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"### [Delete task: ](#delete) `delete`"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"### [Find task: ](#find) `find`"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"### [Help for all commands: ](#help) `help`"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"### [Bye to exit: ](#bye) `bye`"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"### Add todo task: `todo` \u003ca id\u003d\"add-todo\"\u003e\u003c/a\u003e"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"Add a todo task with user input as the task description. "},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr/\u003e"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"`todo assignment 7`"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"Got it. I\u0027ve added this task: \u003cbr /\u003e"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"[T][✘] assignment 7 \u003cbr /\u003e"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"Now you have 1 task in the list."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"### Add deadline task: `deadline` \u003ca id\u003d\"add-deadline\"\u003e\u003c/a\u003e"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"Add a todo task based on user input as the task description. Requires deadline after /by preferably in"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"the proper format: "},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"- yyyy/mm/dd or yyyy-mm-dd "},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"- dd/mm/yyyy or dd-mm-yyyy "},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"- HHmm or HH.mm a."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr/\u003e"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"`deadline buy maple syrup /by 15/9/2020 tonight at 1900`"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"Got it. I\u0027ve added this task: \u003cbr /\u003e"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"[D][✘] buy maple syrup (by: 15/9/2020 tonight at 1900) (Tue, Sep 15 2020 7.00pm) \u003cbr /\u003e"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"Now you have 2 tasks in the list."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"### Add event task: `event` \u003ca id\u003d\"add-event\"\u003e\u003c/a\u003e"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"Add a todo task based on user input as the task description. Requires event time after /at preferably in"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"the proper format: "},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"- yyyy/mm/dd or yyyy-mm-dd "},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"- dd/mm/yyyy or dd-mm-yyyy "},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"- HHmm or HH.mm a."},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr/\u003e"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"`event wedding /at 23/9/2020 Fullerton at 8pm`"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"Got it. I\u0027ve added this task: \u003cbr /\u003e"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"[E][✘] wedding (at: 23/9/2020 Fullerton at 8pm) (Wed, Sep 23 2020 8.00pm) \u003cbr /\u003e"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"Now you have 3 tasks in the list."},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"### List all tasks: `list` \u003ca id\u003d\"list\"\u003e\u003c/a\u003e"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"Display all tasks and their done status."},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr /\u003e"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"`list`"},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"Here are the tasks in your list: \u003cbr /\u003e"},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"1.[T][✘] assignment 7 \u003cbr /\u003e"},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"2.[D][✘] buy maple syrup (by: 15/9/2020 tonight at 1900) (Tue, Sep 15 2020 7.00pm) \u003cbr /\u003e"},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":"3.[E][✘] wedding (at: 23/9/2020 Fullerton at 8pm) (Wed, Sep 23 2020 8.00pm) "},{"lineNumber":68,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":69,"author":{"gitId":"oliviajohansen"},"content":"### Mark task as done: `done` \u003ca id\u003d\"done\"\u003e\u003c/a\u003e"},{"lineNumber":70,"author":{"gitId":"oliviajohansen"},"content":"Mark the task specified by the input task number as done. "},{"lineNumber":71,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":72,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr /\u003e"},{"lineNumber":73,"author":{"gitId":"oliviajohansen"},"content":"`done 1`"},{"lineNumber":74,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":75,"author":{"gitId":"oliviajohansen"},"content":"Expected outcone: \u003cbr /\u003e"},{"lineNumber":76,"author":{"gitId":"oliviajohansen"},"content":"Nice! I\u0027ve marked this task as done: \u003cbr /\u003e"},{"lineNumber":77,"author":{"gitId":"oliviajohansen"},"content":"[T][✓] assignment 7 \u003cbr /\u003e"},{"lineNumber":78,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":79,"author":{"gitId":"oliviajohansen"},"content":"### Delete task: `delete` \u003ca id\u003d\"delete\"\u003e\u003c/a\u003e"},{"lineNumber":80,"author":{"gitId":"oliviajohansen"},"content":"Delete the task specified by the input task number."},{"lineNumber":81,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":82,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr /\u003e"},{"lineNumber":83,"author":{"gitId":"oliviajohansen"},"content":"`delete 1`"},{"lineNumber":84,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":85,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":86,"author":{"gitId":"oliviajohansen"},"content":"Noted, I\u0027ve removed this task: \u003cbr /\u003e"},{"lineNumber":87,"author":{"gitId":"oliviajohansen"},"content":"[T][✓] assignment 7 \u003cbr /\u003e"},{"lineNumber":88,"author":{"gitId":"oliviajohansen"},"content":"Now you have 2 tasks in the list."},{"lineNumber":89,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":90,"author":{"gitId":"oliviajohansen"},"content":"### Find task: `find` \u003ca id\u003d\"find\"\u003e\u003c/a\u003e"},{"lineNumber":91,"author":{"gitId":"oliviajohansen"},"content":"Find a task that fully and partially matches the input word."},{"lineNumber":92,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":93,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr /\u003e"},{"lineNumber":94,"author":{"gitId":"oliviajohansen"},"content":"`find wed`"},{"lineNumber":95,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":96,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":97,"author":{"gitId":"oliviajohansen"},"content":"Here are the matching tasks in your list: \u003cbr /\u003e"},{"lineNumber":98,"author":{"gitId":"oliviajohansen"},"content":"1.[E][✘] wedding (at: 23/9/2020 Fullerton at 8pm) (Wed, Sep 23 2020 8.00pm) "},{"lineNumber":99,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":100,"author":{"gitId":"oliviajohansen"},"content":"### Help for all commands: `help` \u003ca id\u003d\"help\"\u003e\u003c/a\u003e"},{"lineNumber":101,"author":{"gitId":"oliviajohansen"},"content":"Display all valid commands."},{"lineNumber":102,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":103,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr /\u003e"},{"lineNumber":104,"author":{"gitId":"oliviajohansen"},"content":"`help`"},{"lineNumber":105,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":106,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":107,"author":{"gitId":"oliviajohansen"},"content":"Here are all your commands: \u003cbr /\u003e"},{"lineNumber":108,"author":{"gitId":"oliviajohansen"},"content":"list- list all tasks, \u003cbr /\u003e"},{"lineNumber":109,"author":{"gitId":"oliviajohansen"},"content":"todo \u003cdescription\u003e - add task, \u003cbr /\u003e"},{"lineNumber":110,"author":{"gitId":"oliviajohansen"},"content":"deadline \u003cdescription\u003e /by \u003cdue date\u003e -add task with deadline, \u003cbr /\u003e"},{"lineNumber":111,"author":{"gitId":"oliviajohansen"},"content":"event \u003cdescription\u003e /at \u003cevent date\u003e -add event with date , \u003cbr /\u003e"},{"lineNumber":112,"author":{"gitId":"oliviajohansen"},"content":"date \u003cone filter date\u003e - finds task on specified date, \u003cbr /\u003e"},{"lineNumber":113,"author":{"gitId":"oliviajohansen"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;date can be formatted as : yyyy-mm-dd or dd/mm/yyyy, \u003cbr /\u003e"},{"lineNumber":114,"author":{"gitId":"oliviajohansen"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;time can be formatted as : HHmm or HH.mm a \u003cbr /\u003e"},{"lineNumber":115,"author":{"gitId":"oliviajohansen"},"content":"done \u003ctask number\u003e - marks task as done, \u003cbr /\u003e"},{"lineNumber":116,"author":{"gitId":"oliviajohansen"},"content":"find \u003cone filter word\u003e - finds task with specified word, \u003cbr /\u003e"},{"lineNumber":117,"author":{"gitId":"oliviajohansen"},"content":"bye - goodbye! \u003cbr /\u003e"},{"lineNumber":118,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":119,"author":{"gitId":"oliviajohansen"},"content":"### Bye to exit: `bye` \u003ca id\u003d\"bye\"\u003e\u003c/a\u003e"},{"lineNumber":120,"author":{"gitId":"oliviajohansen"},"content":"Exit Duke."},{"lineNumber":121,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":122,"author":{"gitId":"oliviajohansen"},"content":"Example of usage: \u003cbr /\u003e"},{"lineNumber":123,"author":{"gitId":"oliviajohansen"},"content":"`bye`"},{"lineNumber":124,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":125,"author":{"gitId":"oliviajohansen"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":126,"author":{"gitId":"oliviajohansen"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":127,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":128,"author":{"gitId":"oliviajohansen"},"content":"\u003cbr /\u003e"},{"lineNumber":129,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":130,"author":{"gitId":"oliviajohansen"},"content":"Back to [Main Features](#Main-Features)"}],"authorContributionMap":{"oliviajohansen":120,"-":10}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"        Circle circle \u003d new Circle( 40,50,33);"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"        displayPicture.setClip(circle);"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"        displayPicture.setImage(img);"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"        Collections.reverse(tmp);"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"        return new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"        db.flip();"},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"        return db;"},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import java.util.Timer;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import java.util.TimerTask;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.DukeException;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Ui;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Storage;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":" * Represents a task manager, Duke."},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    private Storage storage;"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    private TaskList tasksData;"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    private Ui ui;"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    private Layout layout;"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    protected String getResponse(String input) {"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        String dukeRespond;"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"            Command dukeCommand \u003d tasksData.getCommands(input.split(\" \"));"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"            dukeRespond \u003d dukeCommand.execute(tasksData.getTasks(), layout);"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"            dukeRespond \u003d layout.print(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        return \"Duke heard: \" + dukeRespond;"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"    protected String greet() {"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"        return ui.greet();"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"     * Delay the exit of duke for user to see the Duke\u0027s response for 2 seconds"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"    //Solution below adapted from https://stackoverflow.com/questions/15747277/how-to-make-java-program-exit-after-a-couple-of-seconds"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"    public void delayExit() {"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"        Timer timer \u003d new Timer();"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"        timer.schedule(new TimerTask() {"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"            @Override"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"            public void run() {"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"                System.exit(0);"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"        }, 2000);"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"    public Duke() {"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"        String filePath \u003d \"data/duke.txt\";"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"        layout \u003d new Layout();"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"            tasksData \u003d new TaskList(storage.load(), storage);"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"        } catch (Exception e) {"},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"            DukeException d \u003d new DukeException(\" Unable to load tasks from hard disk\");"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"            layout.print(d.getMessage());"},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"            tasksData \u003d new TaskList(new ArrayList\u003c\u003e(), storage);"},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"            "},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"        } finally {"},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"            ui \u003d new Ui(tasksData);"},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":"        "},{"lineNumber":68,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"oliviajohansen":67,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"            //Loads an object hierarchy from an XML document."},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"            scene.getStylesheets().addAll(this.getClass().getResource(\"/view/application.css\").toExternalForm());"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"            //Returns the controller (MainWindow) associated with the root object (AnchorPane obj)."},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"            stage.setTitle(\"Managing Time!\");"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/finnn.jpeg\"));"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bmo.jpg\"));"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.greet(), dukeImage));"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"    private void handleUserInput() {"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"        userInput.clear();"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"        if (response.equals(\"Duke heard: Bye. Hope to see you again soon!\")) {"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"            duke.delayExit();"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":56}},{"path":"src/main/java/duke/command/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Parser;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.DukeException;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":" * Represents add task command."},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"public class AddTask extends Command {"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    Type type;"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    protected String [] input;"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    public AddTask(Type type, String [] input) {"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"        this.type \u003d type;"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        this.input \u003d input;"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    public enum Type {"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        TODO,"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"        DEADLINE,"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"        EVENT"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"    };"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"     * Add specific task to the task list."},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"     * @param tasks Existing task list."},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"     * @param layout Format the return output."},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"     * @return String to return to the user."},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Layout layout) {"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"        Task task;"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"            String date \u003d Parser.getDateAndDescription(input)[0];"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"            String description \u003d Parser.getDateAndDescription(input)[1];"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"            if (description.equals(\"\") || input.length \u003d\u003d 1) {"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"                throw new DukeException(\"The description of a \" + type + \" cannot be empty\");"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"            switch (type) {"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"            case DEADLINE:"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"                if (date.equals(\"\")) {"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"                    throw new DukeException(\"Please specify a due date using /by\");"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"                } else {"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"                    task \u003d new Deadline(description, date);"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"            case EVENT:"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"                if (date.equals(\"\")) {"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"                    throw new DukeException(\"Please specify an event date using /at\");"},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"                } else {"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"                    task \u003d new Event(description, date);"},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"            default: //case: todo"},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"                task \u003d new Todo(description);"},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":69,"author":{"gitId":"oliviajohansen"},"content":"            tasks.add(task);"},{"lineNumber":70,"author":{"gitId":"oliviajohansen"},"content":"            return layout.printAddedMessage(task.toString(), tasks.size());"},{"lineNumber":71,"author":{"gitId":"oliviajohansen"},"content":"        } catch (DukeException e) {"},{"lineNumber":72,"author":{"gitId":"oliviajohansen"},"content":"            return layout.print(e.getMessage());"},{"lineNumber":73,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":75}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":" * Abstract representation of all commands."},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    public abstract String execute(ArrayList\u003cTask\u003e tasks, Layout layout);"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":15}},{"path":"src/main/java/duke/command/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Storage;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":" * Represents exit command."},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"public class Exit extends Command {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    Storage storage;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    public Exit(Storage storage) {"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"        this.storage \u003d storage;"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"     * Store task list in hard disk."},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"     * Exit process."},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Layout layout) {"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"        storage.writeFile(tasks);"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        return layout.print(\"Bye. Hope to see you again soon!\");"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":30}},{"path":"src/main/java/duke/command/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Parser;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.DukeException;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":" * Represent find task by task description command."},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"public class FindTask extends Command {"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    String [] input;"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    public FindTask(String [] input) {"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"        this.input \u003d input;"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"     * Finds a task based on user input filter word."},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"     * @param tasks Existing task list."},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"     * @param layout Format the return output."},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"     * @return String to return to the user."},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Layout layout) {"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"        String filterWord;"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"            filterWord \u003d Parser.getFilterWord(input);"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"            ArrayList\u003cTask\u003e tasksMatch \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"            tasksMatch.removeIf(task -\u003e"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"                    !(task.containsWord(filterWord))"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"            );"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"            ArrayList\u003cTask\u003e taskFuzzyMatch \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"            taskFuzzyMatch.removeIf(task -\u003e"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"                    task.containsWord(filterWord) || !(task.fuzzyMatch(filterWord))"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"            );"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"            tasksMatch.addAll(taskFuzzyMatch);"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"            return layout.printTaskList(true, tasksMatch);"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"        } catch (DukeException e) {"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"            return layout.print(e.getMessage());"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":47}},{"path":"src/main/java/duke/command/FindTaskByDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Parser;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.DukeException;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":" * Represent find task by date command."},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"public class FindTaskByDate extends Command {"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    String [] input;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    public FindTaskByDate(String [] input) {"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"        this.input \u003d input;"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Layout layout) {"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"        String date;"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"            date \u003d Parser.getDate(input);"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"            ArrayList\u003cTask\u003e shallowCopy \u003d new ArrayList\u003c\u003e(tasks);"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"            shallowCopy.removeIf(task -\u003e"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"                    !(task.isSameDate(date))"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"            );"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"            return layout.printTaskList(true, shallowCopy);"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"        } catch (DukeException e) {"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"            return layout.print(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":34}},{"path":"src/main/java/duke/command/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"public class Help extends Command {"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"     * Represent help command and return all valid commands."},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Layout layout) {"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"        String[] arr \u003d new String[]{"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"                \"Here are all your commands:\","},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"                \"list- list all tasks\","},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"                \"todo \u003cdescription\u003e - add task\","},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"                \"deadline \u003cdescription\u003e /by \u003cdue date\u003e -add task with deadline\","},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"                \"event \u003cdescription\u003e /at \u003cevent date\u003e -add event with date \","},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"                \"date \u003cone filter date\u003e - finds task on specified date\","},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"                \"\\t date can be formatted as : yyyy-mm-dd or dd/mm/yyyy\","},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"                \"\\t time can be formatted as : HHmm or HH.mm a\","},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"                \"done \u003ctask number\u003e - marks task as done\","},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"                \"find \u003cone filter word\u003e - finds task with specified word\","},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"                \"bye - goodbye!\""},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        };"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"        return layout.printCommands(arr);"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":31}},{"path":"src/main/java/duke/command/ManageTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.DukeException;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":" * Represent a task manager. Can mark a task as done and delete a task."},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"public class ManageTask extends Command {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    private Action type; "},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    private String inputIndex;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    public ManageTask(Action type, String inputIndex) {"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"        this.type \u003d type;"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"        this.inputIndex \u003d inputIndex;"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    public enum Action {"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"        DONE,"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        DELETE"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"     * Modify specific tasks in the task list."},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"     * Actions include deleting and marking a task as done."},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"     * @param tasks Existing task list."},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"     * @param layout Format the return output."},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"     * @return String to return to the user."},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Layout layout) {"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"            int index \u003d Integer.parseInt(inputIndex);"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"            assert index \u003e\u003d 1;"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"            Task task \u003d tasks.get(index - 1);"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"            switch (type) {"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"            case DONE:"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"                task.markDone();"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"                return layout.printMarkedDone(task);"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"            case DELETE:"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"                tasks.remove(index - 1);"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"                return layout.printDeleted(task, tasks.size());"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"            default:"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"                return \"Should never reach here\";"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"            DukeException d \u003d new DukeException(\"Task \" + inputIndex + \" cannot be found\");"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"            return layout.print(d.getMessage());"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"            DukeException d \u003d new DukeException(inputIndex + \" is not an integer\");"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"            return layout.print(d.getMessage());"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":58}},{"path":"src/main/java/duke/command/ShowTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"public class ShowTasks extends Command {"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"     * Get task list and display it to the user."},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    public String execute(ArrayList\u003cTask\u003e tasks, Layout layout) {"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"        return layout.printTaskList(false, tasks);"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":18}},{"path":"src/main/java/duke/io/Layout.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.io;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":" * Formats the input into an output to be returned. "},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"public class Layout {"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    public String print(String s) {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"        return s;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    public String printTaskList(boolean isFindCommand, ArrayList\u003cTask\u003e arr) {"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"        if (arr.size() !\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"            if (isFindCommand) {"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"                sb.append(\"Here are the matching tasks in your list: \");"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"            } else {"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"                sb.append(\"Here are the tasks in your list: \");   "},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"            for (int i \u003d 0; i \u003c arr.size(); i++) {"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"                Task task \u003d arr.get(i);"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"                sb.append(\"\\n\" + (i + 1) + \".\" + task.toString());"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"            sb.append(\"No tasks\");"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"        return sb.toString();"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"    public String printMarkedDone(Task task) {"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"        return \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + task.toString();"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"    public String printDeleted(Task task, int size) {"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"        String str \u003d size \u003e 1 ? \"tasks\" : \"duke/task\";"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"        return \"Noted. I\u0027ve removed this task: \" + \"\\n\" + task.toString() +"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"                \"\\nNow you have \" + size + \" \" + str + \" in the list.\";"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"    public String printAddedMessage(String description, int size) {"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"        String str \u003d size \u003e 1 ? \"tasks\" : \"duke/task\";"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"        return \"Got it. I\u0027ve added this task:\" + \"\\n\" + description +"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"                \"\\nNow you have \" + size + \" \" + str + \" in the list.\";"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"    public String printCommands(String [] arr) {"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"            sb.append(i !\u003d arr.length - 1 ? arr[i] + \"\\n\" : arr[i]);"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"        return sb.toString();"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":60}},{"path":"src/main/java/duke/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.io;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.DukeException;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":" * Represents a class to format user input."},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"     * Return date and description of task from user input."},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"     * "},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"     * @param arr Array of words in user input."},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"     * @return Array of date and description."},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    public static String [] getDateAndDescription(String [] arr) {"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"        boolean reached \u003d false;"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"        StringBuilder date \u003d new StringBuilder();"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        StringBuilder description \u003d new StringBuilder();"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        for (int i \u003d 1; i \u003c arr.length; i ++) {"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"            if (reached) {"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"                if (i !\u003d arr.length - 1) {"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"                    date.append(arr[i] + \" \");"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"                } else {"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"                    date.append(arr[i]);"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"            } else if (arr[i].equals(\"/by\") || arr[i].equals(\"/at\")) {"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"                reached \u003d true;"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"            } else {"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"                if (i !\u003d 1) {"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"                    description.append(\" \" + arr[i]);"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"                } else {"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"                    description.append(arr[i]);"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"        return new String[]{date.toString(), description.toString()};"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"     * Return the word to filter tasks by."},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"     * @param arr Array of words in user input."},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"     * @return single word."},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"     * @throws DukeException"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"    public static String getFilterWord(String [] arr) throws DukeException{"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"            throw new DukeException(\"Please specify a filter word\");"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"        } "},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"        if (arr.length \u003e 2) {"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"            throw new DukeException(\"Please only specify 1 filter word\");"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"        return arr[1];"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"     * Return date from user input."},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"     * @param arr Array of words in user input."},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"     * @return date of task."},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"     * @throws DukeException"},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"    public static String getDate(String [] arr) throws DukeException {"},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":68,"author":{"gitId":"oliviajohansen"},"content":"            throw new DukeException(\"Please specify a filter date\");"},{"lineNumber":69,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"oliviajohansen"},"content":"        if (arr.length \u003e 2) {"},{"lineNumber":71,"author":{"gitId":"oliviajohansen"},"content":"            throw new DukeException(\"Please only specify 1 filter date\");"},{"lineNumber":72,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"oliviajohansen"},"content":"        return arr[1];"},{"lineNumber":74,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":76,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"oliviajohansen"},"content":"     * Return specified date and time in a different format "},{"lineNumber":78,"author":{"gitId":"oliviajohansen"},"content":"     * if valid date and time are given."},{"lineNumber":79,"author":{"gitId":"oliviajohansen"},"content":"     * "},{"lineNumber":80,"author":{"gitId":"oliviajohansen"},"content":"     * @param date Date to format."},{"lineNumber":81,"author":{"gitId":"oliviajohansen"},"content":"     * @return ArrayList of LocalDate object and String that represents 12 hour time."},{"lineNumber":82,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"oliviajohansen"},"content":"    public static ArrayList\u003cObject\u003e dateAndTimeFormatter(String date) {"},{"lineNumber":84,"author":{"gitId":"oliviajohansen"},"content":"        String [] arr \u003d date.split(\" \");"},{"lineNumber":85,"author":{"gitId":"oliviajohansen"},"content":"        LocalDate localDate \u003d null;"},{"lineNumber":86,"author":{"gitId":"oliviajohansen"},"content":"        String time \u003d null;"},{"lineNumber":87,"author":{"gitId":"oliviajohansen"},"content":"        for(String str: arr) {"},{"lineNumber":88,"author":{"gitId":"oliviajohansen"},"content":"            if (checkDate(str) !\u003d null) {"},{"lineNumber":89,"author":{"gitId":"oliviajohansen"},"content":"                localDate \u003d checkDate(str);"},{"lineNumber":90,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"oliviajohansen"},"content":"            if (checkTime(str) !\u003d null) {"},{"lineNumber":92,"author":{"gitId":"oliviajohansen"},"content":"                String t \u003d checkTime(str);"},{"lineNumber":93,"author":{"gitId":"oliviajohansen"},"content":"                time \u003d formatTime(t);"},{"lineNumber":94,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"oliviajohansen"},"content":"        ArrayList\u003cObject\u003e arrList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":97,"author":{"gitId":"oliviajohansen"},"content":"        arrList.add(localDate);"},{"lineNumber":98,"author":{"gitId":"oliviajohansen"},"content":"        arrList.add(time);"},{"lineNumber":99,"author":{"gitId":"oliviajohansen"},"content":"        return arrList;"},{"lineNumber":100,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":102,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"oliviajohansen"},"content":"     * Check if parameter is a valid date."},{"lineNumber":104,"author":{"gitId":"oliviajohansen"},"content":"     * @param str user input date."},{"lineNumber":105,"author":{"gitId":"oliviajohansen"},"content":"     * @return LocalDate object with user input date."},{"lineNumber":106,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"oliviajohansen"},"content":"    public static LocalDate checkDate(String str) {"},{"lineNumber":108,"author":{"gitId":"oliviajohansen"},"content":"        String [] arr \u003d str.split(\"/\");"},{"lineNumber":109,"author":{"gitId":"oliviajohansen"},"content":"        String year;"},{"lineNumber":110,"author":{"gitId":"oliviajohansen"},"content":"        String month;"},{"lineNumber":111,"author":{"gitId":"oliviajohansen"},"content":"        String day;"},{"lineNumber":112,"author":{"gitId":"oliviajohansen"},"content":"        LocalDate localDate;"},{"lineNumber":113,"author":{"gitId":"oliviajohansen"},"content":"        if (arr.length \u003d\u003d 1) {"},{"lineNumber":114,"author":{"gitId":"oliviajohansen"},"content":"            arr \u003d str.split(\"-\");"},{"lineNumber":115,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"oliviajohansen"},"content":"        if (arr.length \u003d\u003d 3) {"},{"lineNumber":117,"author":{"gitId":"oliviajohansen"},"content":"            if (arr[0].length() \u003d\u003d 4) {"},{"lineNumber":118,"author":{"gitId":"oliviajohansen"},"content":"                year \u003d arr[0];"},{"lineNumber":119,"author":{"gitId":"oliviajohansen"},"content":"                day \u003d arr[2];"},{"lineNumber":120,"author":{"gitId":"oliviajohansen"},"content":"            } else {"},{"lineNumber":121,"author":{"gitId":"oliviajohansen"},"content":"                year \u003d arr[2];"},{"lineNumber":122,"author":{"gitId":"oliviajohansen"},"content":"                day \u003d arr[0];"},{"lineNumber":123,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"oliviajohansen"},"content":"            month \u003d arr[1];"},{"lineNumber":125,"author":{"gitId":"oliviajohansen"},"content":"            try {"},{"lineNumber":126,"author":{"gitId":"oliviajohansen"},"content":"                localDate \u003d LocalDate.of(Integer.parseInt(year),"},{"lineNumber":127,"author":{"gitId":"oliviajohansen"},"content":"                        Integer.parseInt(month), Integer.parseInt(day));"},{"lineNumber":128,"author":{"gitId":"oliviajohansen"},"content":"            } catch (Exception e) {"},{"lineNumber":129,"author":{"gitId":"oliviajohansen"},"content":"                localDate \u003d null;"},{"lineNumber":130,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"oliviajohansen"},"content":"            return localDate;"},{"lineNumber":132,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"oliviajohansen"},"content":"        return null;"},{"lineNumber":134,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":136,"author":{"gitId":"oliviajohansen"},"content":"    private static String checkTime(String str) {"},{"lineNumber":137,"author":{"gitId":"oliviajohansen"},"content":"        "},{"lineNumber":138,"author":{"gitId":"oliviajohansen"},"content":"        if (str.length() \u003c 3) {"},{"lineNumber":139,"author":{"gitId":"oliviajohansen"},"content":"            return null;"},{"lineNumber":140,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"oliviajohansen"},"content":"        "},{"lineNumber":142,"author":{"gitId":"oliviajohansen"},"content":"        int len \u003d str.length();"},{"lineNumber":143,"author":{"gitId":"oliviajohansen"},"content":"        String lastTwoChars \u003d str.substring(len - 2);"},{"lineNumber":144,"author":{"gitId":"oliviajohansen"},"content":"        String formattedTime \u003d \"\";"},{"lineNumber":145,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":146,"author":{"gitId":"oliviajohansen"},"content":"        if (len \u003d\u003d 4 \u0026\u0026 tryStringToInteger(str) !\u003d null) {"},{"lineNumber":147,"author":{"gitId":"oliviajohansen"},"content":"            int time \u003d tryStringToInteger(str);"},{"lineNumber":148,"author":{"gitId":"oliviajohansen"},"content":"            String period \u003d \"am\";"},{"lineNumber":149,"author":{"gitId":"oliviajohansen"},"content":"            if (time \u003e 2359 || tryStringToInteger(str.substring(2)) \u003e 59 ) {"},{"lineNumber":150,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 2400 || 1360"},{"lineNumber":151,"author":{"gitId":"oliviajohansen"},"content":"                return null;"},{"lineNumber":152,"author":{"gitId":"oliviajohansen"},"content":"            } "},{"lineNumber":153,"author":{"gitId":"oliviajohansen"},"content":"            else if (time \u003e\u003d 1200) {"},{"lineNumber":154,"author":{"gitId":"oliviajohansen"},"content":"                period \u003d \"pm\";"},{"lineNumber":155,"author":{"gitId":"oliviajohansen"},"content":"                formattedTime +\u003d (time - 1200);"},{"lineNumber":156,"author":{"gitId":"oliviajohansen"},"content":"            } else if (str.substring(0, 2).equals(\"00\")) {"},{"lineNumber":157,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 0012"},{"lineNumber":158,"author":{"gitId":"oliviajohansen"},"content":"                formattedTime +\u003d \"12\" + str.substring(2);"},{"lineNumber":159,"author":{"gitId":"oliviajohansen"},"content":"            } else {"},{"lineNumber":160,"author":{"gitId":"oliviajohansen"},"content":"                    formattedTime +\u003d time;"},{"lineNumber":161,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"oliviajohansen"},"content":"            formattedTime \u003d formattedTime + period;"},{"lineNumber":163,"author":{"gitId":"oliviajohansen"},"content":"            return formattedTime;"},{"lineNumber":164,"author":{"gitId":"oliviajohansen"},"content":"        } else if (lastTwoChars.equals(\"am\") || lastTwoChars.equals(\"pm\")) {"},{"lineNumber":165,"author":{"gitId":"oliviajohansen"},"content":"            String [] arr \u003d str.split(\"\\\\.\");"},{"lineNumber":166,"author":{"gitId":"oliviajohansen"},"content":"            if (arr.length \u003d\u003d 1) {"},{"lineNumber":167,"author":{"gitId":"oliviajohansen"},"content":"                return arr[0];"},{"lineNumber":168,"author":{"gitId":"oliviajohansen"},"content":"            } else if (arr.length \u003d\u003d 2) {"},{"lineNumber":169,"author":{"gitId":"oliviajohansen"},"content":"                int hour \u003d tryStringToInteger(arr[0]);"},{"lineNumber":170,"author":{"gitId":"oliviajohansen"},"content":"                int minute \u003d tryStringToInteger(arr[1].substring(0, arr[1].length() - 2));"},{"lineNumber":171,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":172,"author":{"gitId":"oliviajohansen"},"content":"                if (0 \u003c\u003d hour \u0026\u0026 hour \u003c\u003d 12 \u0026\u0026 0 \u003c\u003d minute \u0026\u0026 minute \u003c 60) {"},{"lineNumber":173,"author":{"gitId":"oliviajohansen"},"content":"                    return str;"},{"lineNumber":174,"author":{"gitId":"oliviajohansen"},"content":"                } else {"},{"lineNumber":175,"author":{"gitId":"oliviajohansen"},"content":"                    //Not a valid time so will not be stored"},{"lineNumber":176,"author":{"gitId":"oliviajohansen"},"content":"                    return \"\";"},{"lineNumber":177,"author":{"gitId":"oliviajohansen"},"content":"                }"},{"lineNumber":178,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"oliviajohansen"},"content":"        return null;"},{"lineNumber":181,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":183,"author":{"gitId":"oliviajohansen"},"content":"    private static Integer tryStringToInteger(String str) {"},{"lineNumber":184,"author":{"gitId":"oliviajohansen"},"content":"        Integer i;"},{"lineNumber":185,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":186,"author":{"gitId":"oliviajohansen"},"content":"            i \u003d Integer.parseInt(str);"},{"lineNumber":187,"author":{"gitId":"oliviajohansen"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":188,"author":{"gitId":"oliviajohansen"},"content":"            i \u003d null;"},{"lineNumber":189,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"oliviajohansen"},"content":"        return i;"},{"lineNumber":191,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":193,"author":{"gitId":"oliviajohansen"},"content":"    private static String formatTime(String t) {"},{"lineNumber":194,"author":{"gitId":"oliviajohansen"},"content":"        String [] splitArr \u003d t.split(\"\\\\.\");"},{"lineNumber":195,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":196,"author":{"gitId":"oliviajohansen"},"content":"        if (splitArr.length \u003d\u003d 1) {"},{"lineNumber":197,"author":{"gitId":"oliviajohansen"},"content":"            "},{"lineNumber":198,"author":{"gitId":"oliviajohansen"},"content":"            if (t.length() \u003d\u003d 3) {"},{"lineNumber":199,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 7pm"},{"lineNumber":200,"author":{"gitId":"oliviajohansen"},"content":"                return t.charAt(0) + \".00\" + t.substring(1);"},{"lineNumber":201,"author":{"gitId":"oliviajohansen"},"content":"            } else if(t.length() \u003d\u003d 4 \u0026\u0026 Integer.valueOf(t.substring(0, 2)) \u003c 13) {"},{"lineNumber":202,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 12am"},{"lineNumber":203,"author":{"gitId":"oliviajohansen"},"content":"                return t.substring(0, 2) + \".00\" + t.substring(2);"},{"lineNumber":204,"author":{"gitId":"oliviajohansen"},"content":"            } else if (t.length() \u003d\u003d 5) {"},{"lineNumber":205,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 732pm "},{"lineNumber":206,"author":{"gitId":"oliviajohansen"},"content":"                return t.charAt(0) + \".\" + t.substring(1);"},{"lineNumber":207,"author":{"gitId":"oliviajohansen"},"content":"            } else if (t.length() \u003d\u003d 6) {"},{"lineNumber":208,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 1159pm "},{"lineNumber":209,"author":{"gitId":"oliviajohansen"},"content":"                return t.substring(0, 2) + \".\" + t.substring(2);"},{"lineNumber":210,"author":{"gitId":"oliviajohansen"},"content":"            } else {"},{"lineNumber":211,"author":{"gitId":"oliviajohansen"},"content":"                return null;"},{"lineNumber":212,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":213,"author":{"gitId":"oliviajohansen"},"content":"        } else {"},{"lineNumber":214,"author":{"gitId":"oliviajohansen"},"content":"            if (splitArr[1].length() \u003d\u003d 3) {"},{"lineNumber":215,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 8.2pm"},{"lineNumber":216,"author":{"gitId":"oliviajohansen"},"content":"                return splitArr[0] + \".\" + splitArr[1].substring(0, 1) + \"0\" + splitArr[1].substring(1,3);"},{"lineNumber":217,"author":{"gitId":"oliviajohansen"},"content":"            } else {"},{"lineNumber":218,"author":{"gitId":"oliviajohansen"},"content":"                //Case: 8.20pm"},{"lineNumber":219,"author":{"gitId":"oliviajohansen"},"content":"                return t;"},{"lineNumber":220,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":221,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":224,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":225,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":225}},{"path":"src/main/java/duke/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.io;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.DukeException;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":" * Represents a storage to store user\u0027s task list."},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    private final String filePath;"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    private File file;"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"    private Scanner sc;"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    private Layout layout;"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"     * Constructs Storage object."},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"     * Creates  duke.txt inside a data folder if file or directory not found."},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"     * "},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"     * @param filePath Path of data file to store task list."},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    public Storage(String filePath) {"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"        "},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"        //Find text file inside data folder"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"        file \u003d new File(filePath);"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"        layout \u003d new Layout();"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"        "},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"            sc \u003d new Scanner(file);"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"            //Create data folder"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"            file \u003d new File(\"data\");"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"            file.mkdir();"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"                //Create text file"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"                file \u003d new File(\"data/duke.txt\");"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"                file.createNewFile();"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"                "},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"                sc \u003d new Scanner(file);"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"            } catch (IOException i) {"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"                DukeException d \u003d new DukeException(\"Unable to create file\");"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"                layout.print(d.getMessage());"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"     * Load task list from data file and store in ArrayList."},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"     * "},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"     * @return ArrayList\u003cTask\u003e initialised with tasks from the previous use."},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"    public ArrayList\u003cTask\u003e load() {"},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"            Task task;"},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"            "},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":"            while(sc.hasNextLine()) {"},{"lineNumber":68,"author":{"gitId":"oliviajohansen"},"content":"                String [] arr \u003d sc.nextLine().split(\" \\\\| \");"},{"lineNumber":69,"author":{"gitId":"oliviajohansen"},"content":"                String type \u003d arr[0];"},{"lineNumber":70,"author":{"gitId":"oliviajohansen"},"content":"                String isDone \u003d arr[1];"},{"lineNumber":71,"author":{"gitId":"oliviajohansen"},"content":"                String description \u003d arr[2];"},{"lineNumber":72,"author":{"gitId":"oliviajohansen"},"content":"                switch(type) {"},{"lineNumber":73,"author":{"gitId":"oliviajohansen"},"content":"                    case \"D\":"},{"lineNumber":74,"author":{"gitId":"oliviajohansen"},"content":"                        String by \u003d arr[3];"},{"lineNumber":75,"author":{"gitId":"oliviajohansen"},"content":"                        task \u003d new Deadline(description, by);"},{"lineNumber":76,"author":{"gitId":"oliviajohansen"},"content":"                        break;"},{"lineNumber":77,"author":{"gitId":"oliviajohansen"},"content":"                    case \"E\":"},{"lineNumber":78,"author":{"gitId":"oliviajohansen"},"content":"                        String eventTime \u003d arr[3];"},{"lineNumber":79,"author":{"gitId":"oliviajohansen"},"content":"                        task \u003d new Event(description, eventTime);"},{"lineNumber":80,"author":{"gitId":"oliviajohansen"},"content":"                        break;"},{"lineNumber":81,"author":{"gitId":"oliviajohansen"},"content":"                    default: //case \"T\""},{"lineNumber":82,"author":{"gitId":"oliviajohansen"},"content":"                        task \u003d new Todo(description);"},{"lineNumber":83,"author":{"gitId":"oliviajohansen"},"content":"                        break;"},{"lineNumber":84,"author":{"gitId":"oliviajohansen"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"oliviajohansen"},"content":"                if (isDone.equals(\"0\")) {"},{"lineNumber":86,"author":{"gitId":"oliviajohansen"},"content":"                    task.markDone();"},{"lineNumber":87,"author":{"gitId":"oliviajohansen"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"oliviajohansen"},"content":"                tasks.add(task);"},{"lineNumber":89,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"oliviajohansen"},"content":"        return tasks;"},{"lineNumber":91,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":93,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"oliviajohansen"},"content":"     * Store updated task list in data file."},{"lineNumber":95,"author":{"gitId":"oliviajohansen"},"content":"     * "},{"lineNumber":96,"author":{"gitId":"oliviajohansen"},"content":"     * @param tasks Tasks to store."},{"lineNumber":97,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"oliviajohansen"},"content":"    public void writeFile(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":99,"author":{"gitId":"oliviajohansen"},"content":"        FileWriter fileWriter;"},{"lineNumber":100,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"oliviajohansen"},"content":"            fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":102,"author":{"gitId":"oliviajohansen"},"content":"            String newData \u003d \"\";"},{"lineNumber":103,"author":{"gitId":"oliviajohansen"},"content":"            for(int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":104,"author":{"gitId":"oliviajohansen"},"content":"                Task task \u003d tasks.get(i);"},{"lineNumber":105,"author":{"gitId":"oliviajohansen"},"content":"                newData +\u003d i \u003d\u003d 0 ? task.toSave() : \"\\n\" + task.toSave();"},{"lineNumber":106,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"oliviajohansen"},"content":"            fileWriter.write(newData);"},{"lineNumber":108,"author":{"gitId":"oliviajohansen"},"content":"            fileWriter.close();"},{"lineNumber":109,"author":{"gitId":"oliviajohansen"},"content":"        } catch (IOException e) {"},{"lineNumber":110,"author":{"gitId":"oliviajohansen"},"content":"            DukeException d \u003d new DukeException(e.getMessage());"},{"lineNumber":111,"author":{"gitId":"oliviajohansen"},"content":"            layout.print(d.getMessage());"},{"lineNumber":112,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":114}},{"path":"src/main/java/duke/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.io;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":" * Manage interaction with the user."},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"    private final Layout layout;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"    private final TaskList taskList;"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    public Ui(TaskList taskList) {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"        layout \u003d new Layout();"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    public String greet() {"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"        String logo \u003d \"\\t ____        _        \\n\""},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"                + \"\\t|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"                + \"\\t| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"                + \"\\t| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        String greeting \u003d \"Hello! I\u0027m\" + \"\\n\" + logo + \"\\n\\t\" + \"What can I do for you?\";"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        return layout.print(greeting);"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":27}},{"path":"src/main/java/duke/task/DateAndTimeFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Parser;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":" * Format date and time."},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"public class DateAndTimeFormatter {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    ArrayList\u003cObject\u003e dateAndTime;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    protected DateAndTimeFormatter(String by) {"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"        dateAndTime \u003d dateAndTimeFormatter(by);"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    };"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"     * Return specified deadline or event time in a different format "},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"     * if valid date and time are given."},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"     * For ease of readability."},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"     * @param date Date to format."},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"     * @return ArrayList of LocalDate object and String that represents 12 hour time."},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"    private ArrayList\u003cObject\u003e dateAndTimeFormatter(String date) {"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"        return Parser.dateAndTimeFormatter(date);"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"    public LocalDate getDate() {"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"        if (dateAndTime.get(0) !\u003d null) {"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"            return (LocalDate) dateAndTime.get(0);"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"        return null;"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"    public String getTime() {"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"        if (dateAndTime.get(1) !\u003d null) {"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"            return (String) dateAndTime.get(1);"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"        return null;"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"    public String getFormattedBy(LocalDate localDate, String time) {"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"        String formattedBy \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"        if (localDate !\u003d null) {"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E, MMM dd yyyy\");"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"            formattedBy +\u003d localDate.format(formatter);"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"        if (time !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"            formattedBy +\u003d localDate !\u003d null ? \" \" + time : time;"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"        if (formattedBy.length() !\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"            formattedBy \u003d \"(\" + formattedBy + \")\";"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"        return formattedBy;"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":62}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Parser;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":" * Represents a specific task with a deadline."},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"    private final String by;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    private LocalDate localDate;"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    private String time;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    private DateAndTimeFormatter dateAndTimeFormatter;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"        this.by \u003d by;"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"        initialiseDate();"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    private void initialiseDate() {"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        dateAndTimeFormatter \u003d new DateAndTimeFormatter(by);"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        localDate \u003d dateAndTimeFormatter.getDate();"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"        time \u003d dateAndTimeFormatter.getTime();"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \") \" + dateAndTimeFormatter.getFormattedBy(localDate,"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"                time);"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"    public String toSave() {"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"        return \"D | \" + getDoneInteger() + \" | \" + description + \" | \" + this.by;"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"    public boolean equals(Object d) {"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"        if (d instanceof Deadline) {"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"            Deadline deadline \u003d (Deadline) d;"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"            return this.description.equals(deadline.description) \u0026\u0026"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"                    this.by.equals(deadline.by) \u0026\u0026"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"                    this.localDate.equals(deadline.localDate) \u0026\u0026"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"                    this.time.equals(deadline.time);"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"            return false;"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"    public boolean isSameDate(String date) {"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"        if (localDate !\u003d null) {"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"            LocalDate inputDate \u003d parser.checkDate(date);"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"            return localDate.equals(inputDate);"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"        return false;"},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"   }"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"   "},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":62}},{"path":"src/main/java/duke/task/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":" * Represents an exception when using the task manager, Duke."},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"        super(\"\\u2639 oh no! \" + message + \"\\nPlease type help for a list of commands\");"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"        return getMessage();"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":15}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Parser;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":" * Represents a specific task with event details."},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    private final String eventTime;"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    private LocalDate localDate;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    private String time;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    private DateAndTimeFormatter dateAndTimeFormatter;"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    public Event(String description, String eventTime) {"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"        initialiseDate();"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    private void initialiseDate() {"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"        dateAndTimeFormatter \u003d new DateAndTimeFormatter(eventTime);"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"        localDate \u003d dateAndTimeFormatter.getDate();"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        time \u003d dateAndTimeFormatter.getTime();"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"    public boolean isSameDate(String date) {"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"        if (localDate !\u003d null) {"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"            LocalDate inputDate \u003d parser.checkDate(date);"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"            return localDate.equals(inputDate);"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"        return false;"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \") \"+ dateAndTimeFormatter.getFormattedBy(localDate, time);"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"    public String toSave() {"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"        return \"E | \" + getDoneInteger() + \" | \" + description + \" | \" + this.eventTime;"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":" * Represents a task. "},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"    private boolean done;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"    protected final String description;"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    public Task(String task) {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"        this.description \u003d task;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"        done \u003d false;"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"     * Label task as completed or done."},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    public void markDone() {"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"        done \u003d true;"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"     * Return a tick or cross unicode depending on the done status of a task."},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"     * "},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"     * @return String of unicode symbol."},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    private String getStatusSymbol() {"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        return done ? \"[\\u2713]\" : \"[\\u2718]\";"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"     * Return 0 or 1 depending on the done status of a task."},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"     * For storage purposes."},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"     * "},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"     * @return 0 or 1."},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"    protected int getDoneInteger() {"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"        return done ? 0 : 1;"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"        return getStatusSymbol() + \" \" + description;"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"    public String toSave() {"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"        return getDoneInteger() + \" | \" + description;"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"     * Return true or false - whether task contains input word."},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"     * @param word Input filter word."},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"     * @return boolean."},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"    public boolean containsWord(String word) {"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"        String [] arr \u003d description.split(\" \");"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"            return Arrays.stream(arr).filter(str -\u003e str.contains(word)).toArray().length \u003e 0;"},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"        } catch (Exception e) {"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"            System.out.println(\"EXCEPTION\");"},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"            return true;"},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"    public boolean fuzzyMatch(String word) {"},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":"        String [] arr \u003d description.split(\" \");"},{"lineNumber":68,"author":{"gitId":"oliviajohansen"},"content":"        return Arrays.stream(arr).filter(str -\u003e partialEquals(word, str)).toArray().length \u003e 0;"},{"lineNumber":69,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":71,"author":{"gitId":"oliviajohansen"},"content":"    private boolean partialEquals(String inputWord, String descriptionWord) {"},{"lineNumber":72,"author":{"gitId":"oliviajohansen"},"content":"        int mid \u003d (int) Math.ceil(inputWord.length() / 2.0);"},{"lineNumber":73,"author":{"gitId":"oliviajohansen"},"content":"        return descriptionWord.length() \u003e\u003d mid \u0026\u0026 inputWord.substring(0, mid).equals(descriptionWord.substring(0,"},{"lineNumber":74,"author":{"gitId":"oliviajohansen"},"content":"                mid));"},{"lineNumber":75,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":77,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":78,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"oliviajohansen"},"content":"     * Return true or false - whether date of task is equal to input date."},{"lineNumber":80,"author":{"gitId":"oliviajohansen"},"content":"     * Always overidden."},{"lineNumber":81,"author":{"gitId":"oliviajohansen"},"content":"     * @param word Input date."},{"lineNumber":82,"author":{"gitId":"oliviajohansen"},"content":"     * @return boolean."},{"lineNumber":83,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"oliviajohansen"},"content":"    public boolean isSameDate(String word) {"},{"lineNumber":85,"author":{"gitId":"oliviajohansen"},"content":"        return false;"},{"lineNumber":86,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":88,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":88}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.AddTask;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.Exit;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.FindTask;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.FindTaskByDate;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.Help;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.ManageTask;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.ShowTasks;"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Storage;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":" * Represents a current task list manager."},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"public class TaskList {"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    private final Storage storage;"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        this.storage \u003d storage;"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"     * Read commands by user and return associated command."},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"     * @param arr Array of words in user input."},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    public Command getCommands(String[] arr) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"            switch (arr[0]) {"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"            case \"bye\":"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"                return new Exit(storage);"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"            case \"list\":"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"                return new ShowTasks();"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"            case \"done\":"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"                return new ManageTask(ManageTask.Action.DONE, arr[1]);"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"            case \"delete\":"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"                return new ManageTask(ManageTask.Action.DELETE, arr[1]);"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"            case \"help\":"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"                return new Help();"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"            case \"deadline\":"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"                return new AddTask(AddTask.Type.DEADLINE, arr);"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"            case \"event\":"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"                return new AddTask(AddTask.Type.EVENT, arr);"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"            case \"todo\":"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"                return new AddTask(AddTask.Type.TODO, arr);"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"            case \"find\":"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"                return new FindTask(arr);"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"            case \"date\":"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"                return new FindTaskByDate(arr);"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"            default:"},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"                DukeException e \u003d new DukeException(\"I do not understand your command\");"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"                throw e;"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"            DukeException d \u003d new DukeException(\"Please specify task number\");"},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"            throw d;"},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"        return tasks;"},{"lineNumber":67,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":69,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":69}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":" * Represents a specific task."},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    public String toSave() {"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"        return \"T | \" + getDoneInteger() + \" | \" + description;"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"  maxWidth\u003d\"1.7976931348623157E308\" "},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    \u003c/children\u003e"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"\u003c/fx:root\u003e"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":""}],"authorContributionMap":{"oliviajohansen":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\""},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"            id\u003d\"anchor\"\u003e"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"            \u003ccontent\u003e"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"            \u003c/content\u003e"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"\u003c/AnchorPane\u003e"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"\u003c!--VBox: prefHeight\u003d\"552.0\"--\u003e"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"\u003c!--AnchorPane: prefHeight\u003d\"600.0\"--\u003e"}],"authorContributionMap":{"oliviajohansen":25}},{"path":"src/test/java/duke/command/AddTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"public class AddTaskTest {"},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    ArrayList\u003cTask\u003e actualTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    Layout layout \u003d new Layout();"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    String dummyAddTask \u003d \"deadline maplesaga wedding /at 23-12-2021 1400\";"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    public void addTaskTest() {"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"        AddTask addDeadlineCommand \u003d new AddTask(AddTask.Type.DEADLINE, dummyAddTask.split(\" \"));"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"        addDeadlineCommand.execute(actualTasks, layout);"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        expected.add(new Deadline(\"maplesaga wedding\", \"23-12-2021 1400\"));"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        assertEquals(actualTasks, expected);"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":27}},{"path":"src/test/java/duke/command/ManageTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.ManageTask;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"public class ManageTaskTest {"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    ArrayList\u003cTask\u003e actualTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    Layout layout \u003d new Layout();"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    Task dummyDeadline \u003d new Deadline(\"maplesaga wedding\", \"23-12-2021 1400\");"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    String dummyTaskNumber \u003d \"1\";"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"    public void manageTaskTest() {"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        ManageTask doneTaskCommand \u003d new ManageTask(ManageTask.Action.DONE, dummyTaskNumber);"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"        doneTaskCommand.execute(actualTasks, layout);"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"        "},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"        Task expectedDeadline \u003d new Deadline(\"maplesaga wedding\", \"23-12-2021 1400\");"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"        expectedDeadline.markDone();"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        expected.add(expectedDeadline);"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"        assertEquals(actualTasks, expected);"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"    @BeforeEach"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"    public void init() {"},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"        actualTasks.add(dummyDeadline);"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"    @AfterEach"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"    public void cleanUp() {"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"        actualTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"}        "}],"authorContributionMap":{"oliviajohansen":45}},{"path":"src/test/java/duke/io/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.io;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    public void getDataAndDescriptionTest() {"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"        String dummyTask \u003d \"deadline feed cat tuna /by 2312 26-8-2020\";"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"        String [] actualDateAndDescription \u003d Parser.getDateAndDescription(dummyTask.split(\" \"));"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"        String [] expected \u003d { \"2312 26-8-2020\", \"feed cat tuna\" };"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"        assertArrayEquals(actualDateAndDescription, expected);"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    public void dateAndTimeFormatterTest() {"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        String dummyEventTime \u003d \"31-8-2022 Wedding 2222 Prepare gift\";"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        ArrayList\u003cObject\u003e actual \u003d Parser.dateAndTimeFormatter(dummyEventTime);"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"        ArrayList\u003cObject\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"        expected.add(LocalDate.of(2022, 8, 31));"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        expected.add(\"10.22pm\");"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"        assertEquals(actual, expected);"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":30}},{"path":"src/test/java/duke/task/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Storage;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"public class StorageStub extends Storage {"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"    StorageStub() {"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"        super(\"data/duke.txt\");"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":9}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"import duke.io.Layout;"},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":11,"author":{"gitId":"oliviajohansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"oliviajohansen"},"content":""},{"lineNumber":13,"author":{"gitId":"oliviajohansen"},"content":"public class TaskListTest {"},{"lineNumber":14,"author":{"gitId":"oliviajohansen"},"content":"    ArrayList\u003cTask\u003e actualTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"oliviajohansen"},"content":"    StorageStub storageStub \u003d new StorageStub();"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"    Layout layout \u003d new Layout();"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"    TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"    String dummyAddTask \u003d \"deadline week 3 ip and tp /by 26-8-2020 wednesday 2359\";"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"    String dummyMarkDoneTask \u003d \"done 1\";"},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"    public void readCommandAddTaskTest() {"},{"lineNumber":23,"author":{"gitId":"oliviajohansen"},"content":"        Command command;"},{"lineNumber":24,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"oliviajohansen"},"content":"            command \u003d taskList.getCommands(dummyAddTask.split(\" \"));"},{"lineNumber":26,"author":{"gitId":"oliviajohansen"},"content":"            command.execute(actualTasks, layout);"},{"lineNumber":27,"author":{"gitId":"oliviajohansen"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"oliviajohansen"},"content":"            //not supposed to enter here"},{"lineNumber":29,"author":{"gitId":"oliviajohansen"},"content":"            System.out.println(\"Not supposed to enter\");"},{"lineNumber":30,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"oliviajohansen"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"oliviajohansen"},"content":"        expected.add(new Deadline(\"week 3 ip and tp\", \"26-8-2020 wednesday 2359\"));"},{"lineNumber":33,"author":{"gitId":"oliviajohansen"},"content":"        assertEquals(actualTasks, expected);"},{"lineNumber":34,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":36,"author":{"gitId":"oliviajohansen"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"oliviajohansen"},"content":"    public void readCommandManageTaskTest() {"},{"lineNumber":38,"author":{"gitId":"oliviajohansen"},"content":"        Command addCommand;"},{"lineNumber":39,"author":{"gitId":"oliviajohansen"},"content":"        Command markDoneCommand;"},{"lineNumber":40,"author":{"gitId":"oliviajohansen"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"oliviajohansen"},"content":"            addCommand \u003d taskList.getCommands(dummyAddTask.split(\" \"));"},{"lineNumber":42,"author":{"gitId":"oliviajohansen"},"content":"            addCommand.execute(actualTasks, layout);"},{"lineNumber":43,"author":{"gitId":"oliviajohansen"},"content":"            markDoneCommand \u003d taskList.getCommands(dummyMarkDoneTask.split(\" \"));"},{"lineNumber":44,"author":{"gitId":"oliviajohansen"},"content":"            markDoneCommand.execute(actualTasks, layout);"},{"lineNumber":45,"author":{"gitId":"oliviajohansen"},"content":"        } catch (DukeException e) {"},{"lineNumber":46,"author":{"gitId":"oliviajohansen"},"content":"            //not supposed to enter here"},{"lineNumber":47,"author":{"gitId":"oliviajohansen"},"content":"            System.out.println(\"Not supposed to enter\");"},{"lineNumber":48,"author":{"gitId":"oliviajohansen"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"oliviajohansen"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"oliviajohansen"},"content":"        Deadline deadline \u003d new Deadline(\"week 3 ip and tp\", \"26-8-2020 wednesday 2359\");"},{"lineNumber":51,"author":{"gitId":"oliviajohansen"},"content":"        deadline.markDone();"},{"lineNumber":52,"author":{"gitId":"oliviajohansen"},"content":"        expected.add(deadline);"},{"lineNumber":53,"author":{"gitId":"oliviajohansen"},"content":"        assertEquals(actualTasks, expected);"},{"lineNumber":54,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":56,"author":{"gitId":"oliviajohansen"},"content":"    @BeforeEach"},{"lineNumber":57,"author":{"gitId":"oliviajohansen"},"content":"    public void init() {"},{"lineNumber":58,"author":{"gitId":"oliviajohansen"},"content":"        taskList \u003d new TaskList(actualTasks, storageStub);"},{"lineNumber":59,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":61,"author":{"gitId":"oliviajohansen"},"content":"    @AfterEach"},{"lineNumber":62,"author":{"gitId":"oliviajohansen"},"content":"    public void cleanUp() {"},{"lineNumber":63,"author":{"gitId":"oliviajohansen"},"content":"        actualTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":64,"author":{"gitId":"oliviajohansen"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"oliviajohansen"},"content":"    "},{"lineNumber":66,"author":{"gitId":"oliviajohansen"},"content":"}"}],"authorContributionMap":{"oliviajohansen":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oliviajohansen"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"oliviajohansen"},"content":"deadline assignment 30% /by tomorrow 1159"},{"lineNumber":3,"author":{"gitId":"oliviajohansen"},"content":"list"},{"lineNumber":4,"author":{"gitId":"oliviajohansen"},"content":"event wedding /at fullerton sunday 4pm "},{"lineNumber":5,"author":{"gitId":"oliviajohansen"},"content":"list"},{"lineNumber":6,"author":{"gitId":"oliviajohansen"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"oliviajohansen"},"content":"list"},{"lineNumber":8,"author":{"gitId":"oliviajohansen"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"oliviajohansen"},"content":"list"}],"authorContributionMap":{"oliviajohansen":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"oliviajohansen"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"oliviajohansen":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"oliviajohansen"},"content":"#if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"},{"lineNumber":17,"author":{"gitId":"oliviajohansen"},"content":"#then"},{"lineNumber":18,"author":{"gitId":"oliviajohansen"},"content":"if"},{"lineNumber":19,"author":{"gitId":"oliviajohansen"},"content":"  ! ("},{"lineNumber":20,"author":{"gitId":"oliviajohansen"},"content":"    find ../src/main/java -name \"*.java\" \u003esources.txt"},{"lineNumber":21,"author":{"gitId":"oliviajohansen"},"content":"    javac -cp ../src -Xlint:none -d ../bin @sources.txt"},{"lineNumber":22,"author":{"gitId":"oliviajohansen"},"content":"  )"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"oliviajohansen":7,"-":37}}]
