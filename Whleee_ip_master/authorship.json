[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] adder"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[D][✘] adder /by 2019-09-08 1800"
      }
    ],
    "authorContributionMap": {
      "Whleee": 3
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] adder"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] testing"
      }
    ],
    "authorContributionMap": {
      "Whleee": 3
    }
  },
  {
    "path": "src/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] |borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[D][✘] |return book /by 2020-07-20 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[E][✘] |project meeting /at 2020-08-10 1900"
      }
    ],
    "authorContributionMap": {
      "Whleee": 4
    }
  },
  {
    "path": "src/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "deadline return book /by 2020-07-20 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "event project meeting /at 2020-08-10 1900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Whleee": 5
    }
  },
  {
    "path": "src/main/java/duke/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor with description of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Deadlines(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.type \u003d \"Deadlines\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the Deadline to the desired String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param deadline the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return deadline in the form of a String."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the LocalDate of the Deadline."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setDateTime() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int index \u003d this.deadline.indexOf(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateTemp \u003d this.deadline.substring(0, index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        //System.out.println(date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int dateIndex \u003d dateTemp.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateOnly \u003d dateTemp.substring(0, dateIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (dateOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            dateOnly \u003d adder + dateOnly;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int monIndex \u003d dateTemp.indexOf(\u0027/\u0027, dateTemp.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String monOnly \u003d dateTemp.substring(dateTemp.indexOf(\u0027/\u0027) + 1, monIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (monOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            monOnly \u003d adder + monOnly;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String yearOnly \u003d dateTemp.substring(monIndex + 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dateTemp \u003d dateOnly + \"/\" + monOnly + \"/\" + yearOnly;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(dateTemp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp, formatter);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "         */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [D][\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + this.getDescription().substring(0,description.indexOf(\"/\")) + \"(by: \" + this.getDeadline() + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 70
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor specifying filepath."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Runs the main logic of Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void run() throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ui.start(storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        new Duke(\"store.ser\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            Path relativePath \u003d Paths.get(\"data/store.ser\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(\"\" + absolutePath));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            ArrayList\u003cTask\u003e array \u003d (ArrayList\u003cTask\u003e) in.readObject();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            for (Task task : array) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (EOFException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            throw new IOException(e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String intro \u003d \"-------------------------\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"-------------------------\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (next.equals(\"blah\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        while (next !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int counter \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                for (Task task : store) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        System.out.println(counter + \". [\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (next.contains(\"done\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (next.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please state what task has been completed.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(next.substring(5)) - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                curr.markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"  [\" + curr.getStatusIcon() + \"] \" + curr.getDescription());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (next.contains(\"todo\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (next.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    ToDos curr \u003d new ToDos(next.substring(5));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new IOException(\"Please create a folder called \\\"data\\\" in the project root!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (next.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Deadlines curr \u003d new Deadlines(next.substring(9));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDeadline(description.substring(index));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\")) + \"(by: \" + curr.getDeadline() + \")\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new IOException(\"Please create a folder called \\\"data\\\" in the project root!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (next.contains(\"event\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Events curr \u003d new Events(next.substring(6));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setStart(description.substring(index));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\")) + \"(at: \" + curr.getStart() + \")\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"] |\" + task.getDescription());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new IOException(\"Please create a folder called \\\"data\\\" in the project root!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (next.contains(\"delete\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (next.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please specify what task to delete.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(next.substring(7)) - 1;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.remove(curr);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(curr);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (!next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"added: \" + next);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.add(new Task(next));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }  else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                scan.close();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Path relativePath \u003d Paths.get(\"data/store.ser\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                ObjectOutputStream out \u003d new ObjectOutputStream("
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        new FileOutputStream(\"\" + absolutePath)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                );"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                out.writeObject(store);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                out.flush();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                out.close();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Whleee": 215,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "class DukeException extends Exception implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 8
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private String start;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor specifying the Task start date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Events(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.type \u003d \"Events\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the start time to the specified string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param start"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setStart(String start) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the start time of the Event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the start time in String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getStart() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the LocalDate of the Event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setDateTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int index \u003d this.start.indexOf(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateTemp \u003d this.start.substring(0, index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-mm-dd\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int index \u003d this.start.indexOf(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateTemp \u003d this.start.substring(0, index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int dateIndex \u003d dateTemp.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateOnly \u003d dateTemp.substring(0, dateIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (dateOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            dateOnly \u003d adder + dateOnly;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int monIndex \u003d dateTemp.indexOf(\u0027/\u0027, dateTemp.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String monOnly \u003d dateTemp.substring(dateTemp.indexOf(\u0027/\u0027) + 1, monIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (monOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            monOnly \u003d adder + monOnly;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int yearIndex \u003d dateTemp.indexOf(\u0027/\u0027, monIndex + 1 );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String yearOnly \u003d dateTemp.substring(monIndex + 1,yearIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dateTemp \u003d dateOnly + \"/\" + monOnly + \"/\" + yearOnly;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp, formatter);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "         */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [\" + this.getType() + \"][\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + this.getDescription().substring(0,description.indexOf(\"/\")) + \"(at: \" + this.getStart() + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 72
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor specifying the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Parses the specified String as required."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param str the String to be parsed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void parse(String str) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d this.tasks.getList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (str.equals(\"blah\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        while (str !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int counter \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                for (Task task : store) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        System.out.println(counter + \". [\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (str.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please state what task has been completed.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(str.substring(5)) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                curr.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"  [\" + curr.getStatusIcon() + \"] \" + curr.getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (str.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    ToDos curr \u003d new ToDos(str.substring(5));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"duke.txt\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    FileOutputStream oFile \u003d new FileOutputStream(yourFile, false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Deadlines curr \u003d new Deadlines(str.substring(9));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDeadline(description.substring(index));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\")) + \"(by: \" + curr.getDeadline() + \")\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"duke.txt\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"event\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Events curr \u003d new Events(str.substring(6));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setStart(description.substring(index));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\")) + \"(at: \" + curr.getStart() + \")\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"] |\" + task.getDescription());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"delete\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (str.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please specify what task to delete.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(str.substring(7)) - 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.remove(curr);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(curr);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"find\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                TaskList tasks \u003d new TaskList(store);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int index \u003d str.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                String query \u003d str.substring(index);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                tasks.find(query);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (!str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"added: \" + str);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.add(new Task(str));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 185
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.EOFException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor specifying the filename in the form of a String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param filename the path of the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Storage (String filename) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Loads the file if it exists. If not, create the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return ArrayList with the previous saved Tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, ClassNotFoundException{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            Path relativePath \u003d Paths.get(filename);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(\"\" + absolutePath));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            ArrayList\u003cTask\u003e array \u003d (ArrayList\u003cTask\u003e) in.readObject();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            for (Task task : array) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (EOFException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            File yourFile \u003d new File(\"store.ser\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            yourFile.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            FileOutputStream oFile \u003d new FileOutputStream(yourFile, false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Stores the current task list into a File."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param task the current ArrayList of Tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public static void store(ArrayList\u003cTask\u003e task) throws IOException{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Path relativePath \u003d Paths.get(\"store.ser\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ObjectOutputStream out \u003d new ObjectOutputStream("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                new FileOutputStream(\"\" + absolutePath)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        out.writeObject(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        out.flush();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        out.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 66
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor specifying the description of the Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description the description of the Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the description of the Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the task description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the Status Icon of the Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the Task current Status Icon"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the Type of the Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the type of Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (type.equals(\"ToDos\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } else if (type.equals(\"Deadlines\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } else if (type.equals(\"Events\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [\" + this.getType() + \"][\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 58
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor with no arguments."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor with specified ArrayList of Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param list the specified ArrayList of Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the ArrayList of Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the current Tasks ArrayList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void find(String str) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (task.getDescription().contains(str)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(counter + \". [\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            System.out.println(\"There are no tasks that match your search!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 44
    }
  },
  {
    "path": "src/main/java/duke/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor specifying the description of the Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.type \u003d \"ToDos\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [\" + this.getType() + \"][\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + this.getDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 16
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor with no arguments."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Starts the User Interface to accept user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param storage the Storage used to store Tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void start(Storage storage) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String intro \u003d \"-------------------------\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"-------------------------\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Storage store \u003d storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        TaskList tasks \u003d new TaskList(store.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Parser parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        while (next !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                scan.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Storage.store(tasks.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            parser.parse(next);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Whleee": 44
    }
  },
  {
    "path": "src/main/java/duke/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] test"
      }
    ],
    "authorContributionMap": {
      "Whleee": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "deadline return book /by 2020-07-20 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "event project meeting /at 2020-08-10 1900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Whleee": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Whleee": 3,
      "-": 35
    }
  }
]
