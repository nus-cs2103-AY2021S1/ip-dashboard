[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"# duke.duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"1. After the importing is complete, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"chuyiting":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    String javaFxVersion \u003d \u002711.0.2\u0027"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"        showExceptions true"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"        exceptionFormat \"full\""},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"        showCauses true"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"        showStackTraces true"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"        showStandardStreams \u003d false"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"application {"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"    mainClassName \u003d \"duke.launcher.GuiLauncher\""},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"shadowJar {"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"    archiveBaseName \u003d \"guiDuke\""},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"    archiveClassifier \u003d null"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"checkstyle {"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"run{"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"    standardInput \u003d System.in"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":59}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"Create Todo task to your schedule."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"### `Todo \u003cdescription\u003e` "},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"1. A todo task will be created accordingly."},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"2. If your description is empty, Duke would warn and ask you to put."},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"3. The command is case insensitive, Todo, TODO, todo are all fine."},{"lineNumber":14,"author":{"gitId":"-"},"content":" "},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"Example of usage: "},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"`Todo My CS2103t homework`"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"Got it. I have added this task:"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    [T][⤫] My CS2103t homework"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"Now you have ? tasks in your list."},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"### Feature 2"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"Create Deadline task to your schedule."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"## Usage"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"### `Deadline \u003cdescription\u003e /\u003cDATE\u003e` "},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"1. A deadline task will be created accordingly."},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"2. If your description is empty, Duke would warn and ask you to put."},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"3. If your deadline is not specified, Duke would warn and ask you to put."},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"4. Now Duke supports three DATE format, namely yyyy-mm-dd, yyyy-mm-dd HH:mm, E"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"5. The command is case insensitive, Deadline, DEADLINE, deadline are all fine."},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":" "},{"lineNumber":38,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"`Deadline My CS2103t homework /Wed`"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"Expected outcome:"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"Got it. I have added this task:"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"    [D][⤫] My CS2103t homework (The next Wednesday from Now)"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"Now you have ? tasks in your list."},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"### Feature 3"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"Create Event task to your schedule."},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"## Usage"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"### `Event \u003cdescription\u003e /\u003cDATE\u003e ~ \u003cDATE\u003e` "},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"1. An event task will be created accordingly."},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"2. If your description is empty, Duke would warn and ask you to put."},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"3. If your duration is not specified, Duke would warn and ask you to put."},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"4. Now Duke supports three DATE format, namely yyyy-mm-dd, yyyy-mm-dd HH:mm, E"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"5. The command is case insensitive, Event, EVENT, event are all fine."},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":" "},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"Example of usage: "},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"`Event My CS2103t team meeting /2020-09-25 10:00~12:00`"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"Got it. I have added this task:"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"    [E][⤫] My CS2103t team meeting (Sep 25 2020 10:00 ~ Sep 25 2020 12:00)"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"Now you have ? tasks in your list."},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"### Feature 4"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"List all the tasks."},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":"## Usage"},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"### `List` "},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"1. The command is case insensitive, List, LIST, list are all fine."},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"2. List and ls both work."},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"3. All the tasks will be listed with an ID in front."},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":" "},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"Example of usage: "},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"`ls`"},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"Expected outcome:"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":"  1. [E][⤫] My CS2103t team meeting (Sep 25 2020 10:00 ~ Sep 25 2020 12:00)"},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"  2. [D][⤫] My CS2103t team meeting (Sep 26 2020 10:00)"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":"### Feature 5"},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"Find specific tasks"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"## Usage"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"### `Find \u003cqueryKey\u003e` "},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"1. The command is case insensitive, find, Find, FIND are all fine."},{"lineNumber":99,"author":{"gitId":"chuyiting"},"content":"2. All the tasks that has the queryKey will be listed. (include Time)"},{"lineNumber":100,"author":{"gitId":"-"},"content":" "},{"lineNumber":101,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":102,"author":{"gitId":"chuyiting"},"content":"`Find Sep 25`"},{"lineNumber":103,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":104,"author":{"gitId":"chuyiting"},"content":"Expected outcome:"},{"lineNumber":105,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":106,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":107,"author":{"gitId":"chuyiting"},"content":"     [E][⤫] My CS2103t team meeting (Sep 25 2020 10:00 ~ Sep 25 2020 12:00)"},{"lineNumber":108,"author":{"gitId":"chuyiting"},"content":"     [D][⤫] My CS2103t team meeting (Sep 25 2020 10:00)"},{"lineNumber":109,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":110,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":111,"author":{"gitId":"chuyiting"},"content":"### Feature 5"},{"lineNumber":112,"author":{"gitId":"chuyiting"},"content":"Done specific tasks"},{"lineNumber":113,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":114,"author":{"gitId":"chuyiting"},"content":"## Usage"},{"lineNumber":115,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":116,"author":{"gitId":"chuyiting"},"content":"### `Done \u003ctaskID\u003e` "},{"lineNumber":117,"author":{"gitId":"chuyiting"},"content":"1. The command is case insensitive, done, Done, DONE are all fine."},{"lineNumber":118,"author":{"gitId":"chuyiting"},"content":"2. All tasks created will be marked as undone by default."},{"lineNumber":119,"author":{"gitId":"-"},"content":" "},{"lineNumber":120,"author":{"gitId":"chuyiting"},"content":"Example of usage: "},{"lineNumber":121,"author":{"gitId":"chuyiting"},"content":"`Done 1`"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":126,"author":{"gitId":"chuyiting"},"content":"Tres bien!! I have helped you mark task CS2103 homework1 as Done"},{"lineNumber":127,"author":{"gitId":"chuyiting"},"content":"  [T][✔️]CS2103 homework1"},{"lineNumber":128,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":129,"author":{"gitId":"chuyiting"},"content":"```"},{"lineNumber":130,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":131,"author":{"gitId":"chuyiting"},"content":"### Feature 6"},{"lineNumber":132,"author":{"gitId":"chuyiting"},"content":"Show all the available commands"},{"lineNumber":133,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":134,"author":{"gitId":"chuyiting"},"content":"## Usage"},{"lineNumber":135,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":136,"author":{"gitId":"chuyiting"},"content":"### `Help`  "},{"lineNumber":137,"author":{"gitId":"chuyiting"},"content":"1. The command is case insensitive, help, Help, HELP are all fine."},{"lineNumber":138,"author":{"gitId":"chuyiting"},"content":" "},{"lineNumber":139,"author":{"gitId":"chuyiting"},"content":"Example of usage: "},{"lineNumber":140,"author":{"gitId":"chuyiting"},"content":"`Help`"},{"lineNumber":141,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":142,"author":{"gitId":"chuyiting"},"content":"### Feature 7"},{"lineNumber":143,"author":{"gitId":"chuyiting"},"content":"Exit Duke"},{"lineNumber":144,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":145,"author":{"gitId":"chuyiting"},"content":"## Usage"},{"lineNumber":146,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":147,"author":{"gitId":"chuyiting"},"content":"### `Bye`"},{"lineNumber":148,"author":{"gitId":"chuyiting"},"content":"1. The command is case insensitive, bye, Bye, BYE are all fine."},{"lineNumber":149,"author":{"gitId":"chuyiting"},"content":"2. Once you exit Duke, textfield will be disabled, relaunch Duke to use again."},{"lineNumber":150,"author":{"gitId":"chuyiting"},"content":" "},{"lineNumber":151,"author":{"gitId":"chuyiting"},"content":"Example of usage: "},{"lineNumber":152,"author":{"gitId":"chuyiting"},"content":"`Bye`"},{"lineNumber":153,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":154,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":155,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":156,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":157,"author":{"gitId":"chuyiting"},"content":""}],"authorContributionMap":{"chuyiting":135,"-":22}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":"@rem ##########################################################################"},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"@rem"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"@rem ##########################################################################"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"@rem Find java.exe"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"echo."},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"echo."},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"echo location of your Java installation."},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"goto fail"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":":findJavaFromJavaHome"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"echo."},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"echo."},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"echo location of your Java installation."},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"goto fail"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":":init"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":":win9xME_args"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"@rem Slurp the command line arguments."},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"set _SKIP\u003d2"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":":win9xME_args_slurp"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":":execute"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"@rem Setup the command line"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"@rem Execute Gradle"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":":end"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":":fail"},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"exit /b 1"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":":mainEnd"},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":":omega"}],"authorContributionMap":{"chuyiting":84}},{"path":"src/main/java/duke/DukeCli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import duke.ui.Cli;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Constants;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"public class DukeCli {"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"     * Launch Duke."},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    public static void launchDuke() {"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"        //there is no need to set default storage, here is just showcasing the usage of Cli"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"        Cli.getInstance().setStorage(Constants.DEFAULTSTORAGE).loop();"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""}],"authorContributionMap":{"chuyiting":15,"-":1}},{"path":"src/main/java/duke/DukeCommandMatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.ContentMetaCommand;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.DurationMetaCommand;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.MetaCommand;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.TimeMetaCommand;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.CommandNotFoundException;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.NullCommandException;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"import duke.parsers.CommandParser;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"import duke.storage.Storage;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.Deadline;"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.Event;"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.SingletonTaskList;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.Task;"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.ToDo;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"import duke.ui.Printer;"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Constants;"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":" * The class to match the command to Duke\u0027s response."},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"public class DukeCommandMatcher {"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"    private static final String DURATION_DELIMITER \u003d \" ~ \";"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    private static final DateTimeFormatter STANDARD_DATE_TIME_FORMATTER \u003d"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"MMM d yyyy\")"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"                    .optionalStart().appendPattern(\" HH:mm\")"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"                    .optionalEnd().toFormatter();"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"    private SingletonTaskList taskList;"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"    public DukeCommandMatcher(Storage database) {"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"        this.taskList \u003d SingletonTaskList.getInstance(database);"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"     * Match the command to corresponding behavior."},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"     * @param command"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"     * @return message of implementation"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"     * @throws DukeException when error occurs during Duke implementation"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"    public String handleCommand(String command) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"        if (Objects.equals(command, \"\")) {"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"            throw new NullCommandException(command);"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"        CommandParser parser \u003d new CommandParser(command);"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"        MetaCommand outcome \u003d parser.parse();"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"        switch (outcome.getType()) {"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"        case EXIT:"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"            return handleExit();"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"        case LIST:"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"            return handleList();"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"        case DONE:"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"            return handleDone(outcome);"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"        case TODO:"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"            return handleTodo(outcome);"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"        case DEADLINE:"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"            return handleDeadline(outcome);"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"        case EVENT:"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"            return handleEvent(outcome);"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":"        case DELETE:"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"            return handleDelete(outcome);"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"        case FIND:"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":"            return handleFind(outcome);"},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":"        case HELP:"},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"            return handleHelp();"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"        default:"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":"        throw new CommandNotFoundException(command);"},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"    private String handleExit() {"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"        Printer.printBye();"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":"        return Constants.EXITRESPONSE;"},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"    private String handleAdd(Task task) {"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"        return taskList.add(task);"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"    private String handleList() throws DukeException {"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"        return taskList.listAll();"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"    private String handleDone(MetaCommand metaCommand) throws DukeException {"},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"        String idxStr \u003d ((ContentMetaCommand) metaCommand).getContent();"},{"lineNumber":99,"author":{"gitId":"chuyiting"},"content":"        int targetTaskPos \u003d Integer.parseInt(idxStr) - 1;"},{"lineNumber":100,"author":{"gitId":"chuyiting"},"content":"        return taskList.setTaskDone(targetTaskPos);"},{"lineNumber":101,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":103,"author":{"gitId":"chuyiting"},"content":"    private String handleTodo(MetaCommand metaCommand) {"},{"lineNumber":104,"author":{"gitId":"chuyiting"},"content":"        String content \u003d ((ContentMetaCommand) metaCommand).getContent();"},{"lineNumber":105,"author":{"gitId":"chuyiting"},"content":"        ToDo todo \u003d new ToDo(content);"},{"lineNumber":106,"author":{"gitId":"chuyiting"},"content":"        return handleAdd(todo);"},{"lineNumber":107,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":109,"author":{"gitId":"chuyiting"},"content":"    private String handleDeadline(MetaCommand metaCommand) {"},{"lineNumber":110,"author":{"gitId":"chuyiting"},"content":"        String content \u003d ((ContentMetaCommand) metaCommand).getContent();"},{"lineNumber":111,"author":{"gitId":"chuyiting"},"content":"        String time \u003d STANDARD_DATE_TIME_FORMATTER.format(((TimeMetaCommand) metaCommand).getTime());"},{"lineNumber":112,"author":{"gitId":"chuyiting"},"content":"        Deadline deadline \u003d new Deadline(content, time);"},{"lineNumber":113,"author":{"gitId":"chuyiting"},"content":"        System.out.println(\"deadline time: \" + deadline.getTask());"},{"lineNumber":114,"author":{"gitId":"chuyiting"},"content":"        return handleAdd(deadline);"},{"lineNumber":115,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":117,"author":{"gitId":"chuyiting"},"content":"    private String handleEvent(MetaCommand metaCommand) {"},{"lineNumber":118,"author":{"gitId":"chuyiting"},"content":"        String content \u003d ((DurationMetaCommand) metaCommand).getContent();"},{"lineNumber":119,"author":{"gitId":"chuyiting"},"content":"        String startTime \u003d STANDARD_DATE_TIME_FORMATTER.format(((DurationMetaCommand) metaCommand).getStartTime());"},{"lineNumber":120,"author":{"gitId":"chuyiting"},"content":"        String endTime \u003d STANDARD_DATE_TIME_FORMATTER.format(((DurationMetaCommand) metaCommand).getEndTime());"},{"lineNumber":121,"author":{"gitId":"chuyiting"},"content":"        Event event \u003d new Event(content, startTime + DURATION_DELIMITER + endTime);"},{"lineNumber":122,"author":{"gitId":"chuyiting"},"content":"        return handleAdd(event);"},{"lineNumber":123,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":125,"author":{"gitId":"chuyiting"},"content":"    private String handleDelete(MetaCommand metaCommand) throws DukeException {"},{"lineNumber":126,"author":{"gitId":"chuyiting"},"content":"        String idxStr \u003d ((ContentMetaCommand) metaCommand).getContent();"},{"lineNumber":127,"author":{"gitId":"chuyiting"},"content":"        int targetTaskPos \u003d Integer.parseInt(idxStr) - 1;"},{"lineNumber":128,"author":{"gitId":"chuyiting"},"content":"        return taskList.delete(targetTaskPos);"},{"lineNumber":129,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":131,"author":{"gitId":"chuyiting"},"content":"    private String handleFind(MetaCommand metaCommand) throws DukeException {"},{"lineNumber":132,"author":{"gitId":"chuyiting"},"content":"        String queryKey \u003d ((ContentMetaCommand) metaCommand).getContent();"},{"lineNumber":133,"author":{"gitId":"chuyiting"},"content":"        return taskList.query(queryKey);"},{"lineNumber":134,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":136,"author":{"gitId":"chuyiting"},"content":"    private String handleHelp() {"},{"lineNumber":137,"author":{"gitId":"chuyiting"},"content":"        return Printer.printListCommands();"},{"lineNumber":138,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":140,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":140}},{"path":"src/main/java/duke/DukeGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"public class DukeGui extends Application {"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeGui.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"public enum Command {"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"    EXIT(\"^(b|B)(y|Y)(e|E)$\"),"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    LIST(\"^(l|L)(i|I)?(s|S)(t|T)?$\"),"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    DONE(\"^(d|D)(o|O)(n|N)(e|E)$\"),"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    TODO(\"^(t|T)(o|O)(d|D)(o|O)$\"),"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    DEADLINE(\"^(d|D)(e|E)(a|A)(d|D)(l|L)(i|I)(n|N)(e|E)$\"),"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    EVENT(\"^(e|E)(v|V)(e|E)(n|N)(t|T)$\"),"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    DELETE(\"^(d|D)(e|E)(l|L)(e|E)(t|T)(e|E)$\"),"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    FIND(\"^(f|F)(i|I)(n|N)(d|D)$\"),"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    HELP(\"^(h|H)(e|E)(l|L)(p|P)$\");"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    private String pattern;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    Command(String pattern) {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        this.pattern \u003d pattern;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    public boolean matchPattern(String input) {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"        return input.matches(pattern);"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":25}},{"path":"src/main/java/duke/command/metacommands/ContentMetaCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.command.metacommands;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"public class ContentMetaCommand extends MetaCommand {"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"    private String content;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    public String getContent() {"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"        return content;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    public void setContent(String content) {"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"        this.content \u003d content;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":14}},{"path":"src/main/java/duke/command/metacommands/DurationMetaCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.command.metacommands;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"public class DurationMetaCommand extends ContentMetaCommand {"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    private LocalDateTime startTime;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    private LocalDateTime endTime;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    public LocalDateTime getStartTime() {"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"        return startTime;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    public void setStartTime(LocalDateTime startTime) {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public LocalDateTime getEndTime() {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        return endTime;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    public void setEndTime(LocalDateTime endTime) {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":24}},{"path":"src/main/java/duke/command/metacommands/MetaCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.command.metacommands;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"public class MetaCommand {"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    private Command type;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    private String response;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    public String getResponse() {"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"        return response;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    public void setResponse(String response) {"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        this.response \u003d response;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    public Command getType() {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        return type;"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    public void setType(Command type) {"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        this.type \u003d type;"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":25}},{"path":"src/main/java/duke/command/metacommands/TimeMetaCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.command.metacommands;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"public class TimeMetaCommand extends ContentMetaCommand {"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    private LocalDateTime time;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"        return time;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    public void setTime(LocalDateTime time) {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"        this.time \u003d time;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":15}},{"path":"src/main/java/duke/dateformats/DateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.dateformats;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DateFormatException;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"public interface DateFormat {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    boolean check(String date);"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    LocalDateTime mapToLocalDateTime(String date) throws DateFormatException;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":11}},{"path":"src/main/java/duke/dateformats/DayOnlyFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.dateformats;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.DayOfWeek;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import java.time.temporal.TemporalAdjusters;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"public class DayOnlyFormat implements DateFormat {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    private final List\u003cString\u003e days \u003d Arrays.asList(\"^MON(DAY)?$\", \"^TUE(SDAY)?$\", \"^WED(NESDAY)?$\", \"^THU(RSDAY)?$\","},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"            \"^FRI(DAY)?$\", \"^SAT(URDAY)?$\", \"^SUN(DAY)?$\");"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public boolean check(String date) {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        return days.stream().anyMatch(day -\u003e date.toUpperCase().matches(day));"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"     * Format date string to standard date format as LocalDateTime object."},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"     * @param date input date string"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"     * @return"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    public LocalDateTime mapToLocalDateTime(String date) {"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"            return days.stream().filter(day -\u003e date.toUpperCase().matches(day)).map(day -\u003e"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"                            LocalDateTime.of(LocalDate.now(), LocalTime.of(0, 0))"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"                                    .with(TemporalAdjusters.next(DayOfWeek.of(days.indexOf(day) + 1)))"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"            ).collect(Collectors.toList()).get(0);"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"            assert false : \"should only be called after checked\";"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"            return null;"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":37}},{"path":"src/main/java/duke/dateformats/StandardDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.dateformats;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DateFormatException;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"public class StandardDateFormat implements DateFormat {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    //Solution below adapted from https://stackoverflow.com/questions/40175196"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    private static final DateTimeFormatter INPUTDATEFORMATTER \u003d"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"yyyy-MM-dd\")"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"            .optionalStart().appendPattern(\" HH:mm\")"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"            .optionalEnd().parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_DAY, 0).toFormatter();"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    public boolean check(String date) {"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"            LocalDate ldt \u003d LocalDate.parse(date);"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"            return true;"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"            return false;"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    public LocalDateTime mapToLocalDateTime(String date) throws DateFormatException {"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"            LocalDateTime ld \u003d LocalDateTime.parse(date, INPUTDATEFORMATTER);"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"            return ld;"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"            throw new DateFormatException(\"Date format is not valid.\");"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":41}},{"path":"src/main/java/duke/dateformats/StandardTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.dateformats;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DateFormatException;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"public class StandardTimeFormat implements DateFormat {"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    //Solution below adapted from https://stackoverflow.com/questions/40175196"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    private static final DateTimeFormatter INPUTDATEFORMATTER \u003d"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"yyyy-MM-dd\")"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"                    .optionalStart().appendPattern(\" HH:mm\")"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"                    .toFormatter();"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public boolean check(String date) {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"            LocalDateTime ldt \u003d LocalDateTime.parse(date, INPUTDATEFORMATTER);"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"            return true;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"            return false;"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    public LocalDateTime mapToLocalDateTime(String date) throws DateFormatException {"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"            LocalDateTime ld \u003d LocalDateTime.parse(date, INPUTDATEFORMATTER);"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"            return ld;"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"            throw new DateFormatException(\"Date format is not valid.\");"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":35}},{"path":"src/main/java/duke/exceptions/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public class CommandNotFoundException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"    public CommandNotFoundException(String err) {"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"        super(err);"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"        return \"🙈 OOPS!!! \\n\""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"                + \"Sorry I don\u0027t understand what that means\";"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":13}},{"path":"src/main/java/duke/exceptions/DateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Constants;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"public class DateFormatException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    public DateFormatException(String errorMessage) {"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"        super(errorMessage);"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"        return \"The input format of date is not valid\\n\""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"                + \"please write date in the forms of \" + Constants.DF_LOCAL_TIME;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"}"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""}],"authorContributionMap":{"chuyiting":16}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":" * Exception related to Duke implementation"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    public DukeException(String errMessage) {"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"        super(errMessage);"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":10}},{"path":"src/main/java/duke/exceptions/DurationErrorType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public enum DurationErrorType {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"    INVALIDINPUTERROR,"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"    STARTENDTIMESEQUENCEERROR;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":6}},{"path":"src/main/java/duke/exceptions/DurationFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Constants;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"public class DurationFormatException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    private DurationErrorType errorType;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"     * Constructor of DurationFormatException."},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"     * @param errorMessage the error message"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"     * @param errorType the type of error"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    public DurationFormatException(String errorMessage, DurationErrorType errorType) {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        super(errorMessage);"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        this.errorType \u003d errorType;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        switch (this.errorType) {"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"        case INVALIDINPUTERROR:"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"            return \"The duration format of date is not valid\\n\""},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"                    + \"please write the duration in the forms of \""},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"                    + Constants.DF_LOCAL_TIME + \"-\" + Constants.DF_LOCAL_TIME"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"                    + \" or yyyy-mm-dd hh:mm-hh:mm\";"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"        case STARTENDTIMESEQUENCEERROR:"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"            return \"Your start time is after your end time!!\";"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"        default:"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"            return \"Other duration errors\";"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":32}},{"path":"src/main/java/duke/exceptions/LackOfTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public class LackOfTimeException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"    private String typeOfCommand;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"     * Constructor for lack of time exception."},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"     * @param err"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"     * @param typeOfCommand"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    public LackOfTimeException(String err, String typeOfCommand) {"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"        super(err);"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"        this.typeOfCommand \u003d typeOfCommand;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        return \"⚠️OOPS!!! The time/date of \" + this.typeOfCommand + \" cannot be empty\\n\""},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"                + \"please put the time/date after \\\"/\\\"\";"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":21}},{"path":"src/main/java/duke/exceptions/NullCommandContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public class NullCommandContentException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"    private String typeOfCommand;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"     * Constructor for null command content exception."},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"     * @param err errorMessage"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"     * @param typeOfCommand command type"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    public NullCommandContentException(String err, String typeOfCommand) {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"        super(err);"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        this.typeOfCommand \u003d typeOfCommand;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        return \"💔OH NO~~ The description of \" + this.typeOfCommand + \" cannot be empty\";"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":20}},{"path":"src/main/java/duke/exceptions/NullCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public class NullCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"     * Constructor of null command exception."},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"     * @param err error message"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    public NullCommandException(String err) {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"        super(err);"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        return \"🙈OOPS!!! The command cannot be empty\";"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":17}},{"path":"src/main/java/duke/exceptions/TaskNotSpecifyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"public class TaskNotSpecifyException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    private String typeOfCommand;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"     * Constructor for Task not specify exception."},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"     * @param err errorm message"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"     * @param typeOfCommand command type"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    public TaskNotSpecifyException(String err, String typeOfCommand) {"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        super(err);"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"        this.typeOfCommand \u003d typeOfCommand;"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"        if (Objects.equals(typeOfCommand, \"DELETE\")) {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"            return \"🙃Your majesty! Please specify which task you want me to delete. Thanks\";"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        } else if (Objects.equals(typeOfCommand, \"DONE\")) {"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"            return \"🙃Your majesty! Please specify which task you want me to mark as done. Thanks\";"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"        return \"TaskNotSpecifyException being thrown\";"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":28}},{"path":"src/main/java/duke/exceptions/TaskOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public class TaskOutOfBoundException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"    private int taskNum;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"     * Constuctor for task out of bound exception."},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"     * @param err error message"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"     * @param taskNum input task number"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    public TaskOutOfBoundException(String err, int taskNum) {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"        super(err);"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    public String getMessage() {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        return \"😝OOPS!!! You do not have task \" + taskNum + \" in the schedule.\";"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":21}},{"path":"src/main/java/duke/launcher/CliLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.launcher;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import duke.DukeCli;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"public class CliLauncher {"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"        DukeCli.launchDuke();"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":9}},{"path":"src/main/java/duke/launcher/GuiLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.launcher;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import duke.DukeGui;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"public class GuiLauncher {"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"        Application.launch(DukeGui.class, args);"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":10}},{"path":"src/main/java/duke/parsers/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.parsers;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.ContentMetaCommand;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.DurationMetaCommand;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.MetaCommand;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.command.metacommands.TimeMetaCommand;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.CommandNotFoundException;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.LackOfTimeException;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.NullCommandContentException;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.TaskNotSpecifyException;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Pair;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"public class CommandParser implements Parser\u003cMetaCommand\u003e {"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    private static final String TIME_DELIMITER \u003d \"/\";"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    private String input;"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    public CommandParser(String input) {"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"        this.input \u003d input;"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"    public MetaCommand parse() throws DukeException {"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"        //separate the first word(command) from the rest"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        String[] commandAndRest \u003d input.trim().split(\"\\\\s+\", 2);"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"        assert commandAndRest.length \u003e 0 : \"the command is empty\"; //this should be handled in UI"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"        String command \u003d commandAndRest[0];"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"        for (Command commandType : Command.values()) {"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"            //the command is in the list"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"            if (commandType.matchPattern(command)) {"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"                switch (commandType) {"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"                case EXIT:"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"                    return handleSimpleMetaCommand(Command.EXIT);"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"                case LIST:"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"                    return handleSimpleMetaCommand(Command.LIST);"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"                case DONE:"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"                    return handleNumberContentMetaCommand(Command.DONE, commandAndRest);"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"                case TODO:"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"                    return handleContentMetaCommand(Command.TODO, commandAndRest);"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"                case DEADLINE:"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"                    return handleTimeMetaCommand(Command.DEADLINE, commandAndRest);"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"                case EVENT:"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"                    return handleDurationMetaCommand(Command.EVENT, commandAndRest);"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"                case DELETE:"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"                    return handleNumberContentMetaCommand(Command.DELETE, commandAndRest);"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"                case FIND:"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"                    return handleContentMetaCommand(Command.FIND, commandAndRest);"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"                case HELP:"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"                    return handleSimpleMetaCommand(Command.HELP);"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"                default:"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"                    break;"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"        throw new CommandNotFoundException(command);"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"    private MetaCommand handleSimpleMetaCommand(Command type) {"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"        MetaCommand mc \u003d new MetaCommand();"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"        mc.setType(type);"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"        return mc;"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"    private MetaCommand handleContentMetaCommand(Command type, String[] input) throws DukeException {"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":"        ContentMetaCommand cmc \u003d new ContentMetaCommand();"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"        cmc.setType(type);"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":"            cmc.setContent(input[1]);"},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"            switch (type) {"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"            case TODO:"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"                throw new NullCommandContentException(\"Description cannot be null\", \"Todo\");"},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"            case FIND:"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"                throw new NullCommandContentException(\"no query body\", \"FIND\");"},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":"            default:"},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"                throw new DukeException(\"unspecified exception\");"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"        return cmc;"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":"    private MetaCommand handleNumberContentMetaCommand(Command type, String[] input) throws DukeException {"},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"        ContentMetaCommand cmc \u003d new ContentMetaCommand();"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"        cmc.setType(type);"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":"            String idxStr \u003d input[1].trim();"},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"            //make sure the content is in the correct format"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"            int idx \u003d Integer.parseInt(idxStr);"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"            cmc.setContent(idxStr);"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"            switch (type) {"},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"            case DELETE:"},{"lineNumber":99,"author":{"gitId":"chuyiting"},"content":"                throw new TaskNotSpecifyException(\"task to deletion not specified\", \"DELETE\");"},{"lineNumber":100,"author":{"gitId":"chuyiting"},"content":"            case DONE:"},{"lineNumber":101,"author":{"gitId":"chuyiting"},"content":"                throw new TaskNotSpecifyException(\"task to be done not specified\", \"DONE\");"},{"lineNumber":102,"author":{"gitId":"chuyiting"},"content":"            default:"},{"lineNumber":103,"author":{"gitId":"chuyiting"},"content":"                throw new DukeException(\"unspecified exception\");"},{"lineNumber":104,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"chuyiting"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":106,"author":{"gitId":"chuyiting"},"content":"            throw new DukeException(\"Content of the command is not valid. Should be in the form of integer\");"},{"lineNumber":107,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"chuyiting"},"content":"        return cmc;"},{"lineNumber":109,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":111,"author":{"gitId":"chuyiting"},"content":"    private MetaCommand handleTimeMetaCommand(Command command, String[] input) throws DukeException {"},{"lineNumber":112,"author":{"gitId":"chuyiting"},"content":"        TimeMetaCommand tmc \u003d new TimeMetaCommand();"},{"lineNumber":113,"author":{"gitId":"chuyiting"},"content":"        tmc.setType(command);"},{"lineNumber":114,"author":{"gitId":"chuyiting"},"content":"        String[] splitContent;"},{"lineNumber":115,"author":{"gitId":"chuyiting"},"content":"        //set content"},{"lineNumber":116,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"chuyiting"},"content":"            String content \u003d input[1].trim();"},{"lineNumber":118,"author":{"gitId":"chuyiting"},"content":"            splitContent \u003d content.split(TIME_DELIMITER, 2);"},{"lineNumber":119,"author":{"gitId":"chuyiting"},"content":"            tmc.setContent(splitContent[0]);"},{"lineNumber":120,"author":{"gitId":"chuyiting"},"content":"            if (content.isEmpty()) {"},{"lineNumber":121,"author":{"gitId":"chuyiting"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":122,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":124,"author":{"gitId":"chuyiting"},"content":"            throw new NullCommandContentException(\"Description cannot be null\", \"Deadline\");"},{"lineNumber":125,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":127,"author":{"gitId":"chuyiting"},"content":"        //set time"},{"lineNumber":128,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"chuyiting"},"content":"            LocalDateTime date \u003d new DateParser(splitContent[1]).parse();"},{"lineNumber":130,"author":{"gitId":"chuyiting"},"content":"            tmc.setTime(date);"},{"lineNumber":131,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":132,"author":{"gitId":"chuyiting"},"content":"            throw new LackOfTimeException(\"The time cannot be empty\", \"Duke.Deadline\");"},{"lineNumber":133,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"chuyiting"},"content":"        return tmc;"},{"lineNumber":135,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":137,"author":{"gitId":"chuyiting"},"content":"    private MetaCommand handleDurationMetaCommand(Command command, String[] input) throws DukeException {"},{"lineNumber":138,"author":{"gitId":"chuyiting"},"content":"        DurationMetaCommand dmc \u003d new DurationMetaCommand();"},{"lineNumber":139,"author":{"gitId":"chuyiting"},"content":"        dmc.setType(command);"},{"lineNumber":140,"author":{"gitId":"chuyiting"},"content":"        String[] splitInput;"},{"lineNumber":141,"author":{"gitId":"chuyiting"},"content":"        //set content"},{"lineNumber":142,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":143,"author":{"gitId":"chuyiting"},"content":"            String content \u003d input[1].trim();"},{"lineNumber":144,"author":{"gitId":"chuyiting"},"content":"            splitInput \u003d content.split(TIME_DELIMITER, 2);"},{"lineNumber":145,"author":{"gitId":"chuyiting"},"content":"            if (content.isEmpty()) {"},{"lineNumber":146,"author":{"gitId":"chuyiting"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":147,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"chuyiting"},"content":"            dmc.setContent(splitInput[0]);"},{"lineNumber":149,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":150,"author":{"gitId":"chuyiting"},"content":"            throw new NullCommandContentException(\"Description cannot be null\", \"Event\");"},{"lineNumber":151,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":153,"author":{"gitId":"chuyiting"},"content":"        //set start and end time"},{"lineNumber":154,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":155,"author":{"gitId":"chuyiting"},"content":"            Pair\u003cLocalDateTime, LocalDateTime\u003e duration \u003d new DurationParser(splitInput[1]).parse();"},{"lineNumber":156,"author":{"gitId":"chuyiting"},"content":"            dmc.setStartTime(duration.getFirst());"},{"lineNumber":157,"author":{"gitId":"chuyiting"},"content":"            dmc.setEndTime(duration.getSecond());"},{"lineNumber":158,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":159,"author":{"gitId":"chuyiting"},"content":"            throw new LackOfTimeException(\"The time cannot be empty\", \"Event\");"},{"lineNumber":160,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":162,"author":{"gitId":"chuyiting"},"content":"        return dmc;"},{"lineNumber":163,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":164}},{"path":"src/main/java/duke/parsers/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.parsers;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.DateFormat;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.DayOnlyFormat;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.StandardDateFormat;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.StandardTimeFormat;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DateFormatException;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"public class DateParser implements Parser\u003cLocalDateTime\u003e {"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    private static final List\u003cDateFormat\u003e DATE_TIME_FORMAT_LIST \u003d"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"            Arrays.asList(new DayOnlyFormat(), new StandardDateFormat(), new StandardTimeFormat());"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    private String date;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    public DateParser(String date) {"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"        this.date \u003d date;"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"    public LocalDateTime parse() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"        LocalDateTime ldt;"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"        for (DateFormat format: DATE_TIME_FORMAT_LIST) {"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"            if (format.check(date)) {"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"                ldt \u003d format.mapToLocalDateTime(date);"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"                return ldt;"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"        throw new DateFormatException(\"The date format is not valid.\");"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":35}},{"path":"src/main/java/duke/parsers/DurationParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.parsers;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DurationErrorType;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DurationFormatException;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Pair;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"public class DurationParser implements Parser\u003cPair\u003cLocalDateTime, LocalDateTime\u003e\u003e {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    private static final String DURATION_DELIMITER \u003d \"~\";"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    private static final String TIME_DELIMITER \u003d \":\";"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    private String duration;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public DurationParser(String duration) {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        this.duration \u003d duration;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    public Pair\u003cLocalDateTime, LocalDateTime\u003e parse() throws DukeException {"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"        String[] splitDuration \u003d duration.split(DURATION_DELIMITER);"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"            LocalDateTime startTime \u003d new DateParser(splitDuration[0].trim()).parse();"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"            String endTimeInput \u003d splitDuration[1].trim();"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"            LocalDateTime endTime;"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"            //handle if end time only contains time"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"            if (checkTimeFormat(endTimeInput)) {"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"                //it always works, because the startTime is in the standard format"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"                String[] splitTime \u003d endTimeInput.split(TIME_DELIMITER);"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"                int hour \u003d Integer.parseInt(splitTime[0]);"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"                int minute \u003d Integer.parseInt(splitTime[1]);"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"                endTime \u003d startTime.with(LocalTime.of(hour, minute));"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"            } else { //when the end date time is specified"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"                endTime \u003d new DateParser(endTimeInput).parse();"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"            if (startTime.isAfter(endTime)) {"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"                throw new DurationFormatException(\"Start time should be before the end time\","},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"                        DurationErrorType.STARTENDTIMESEQUENCEERROR);"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"            return new Pair\u003c\u003e(startTime, endTime);"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"            throw new DurationFormatException(\"Duration is not complete\", DurationErrorType.INVALIDINPUTERROR);"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"    private boolean checkTimeFormat(String time) {"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"        //solutions below adapted from"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"        // https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch04s06.html"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"        return time.matches(\"^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$\");"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":57}},{"path":"src/main/java/duke/parsers/MarkdownParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.parsers;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.ui.gui.markdown.Markdown;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.ui.gui.markdown.NormText;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import duke.ui.gui.markdown.Tag;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"public class MarkdownParser implements Parser\u003cList\u003cMarkdown\u003e\u003e {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    private String string;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    public MarkdownParser(String string) {"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"        this.string \u003d string;"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    public List\u003cMarkdown\u003e parse() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"        List\u003cMarkdown\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        String parsedStr \u003d this.string;"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"        while (hasTag(parsedStr)) {"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"            int tagStartIdx \u003d parsedStr.indexOf(Tag.START_PATTERN);"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"            int startIdx \u003d tagStartIdx + Tag.START_PATTERN.length();"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"            int endIdx \u003d parsedStr.indexOf(Tag.END_PATTERN);"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"            String text \u003d parsedStr.substring(0, tagStartIdx);"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"            String tag \u003d parsedStr.substring(startIdx, endIdx);"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"            if (!Objects.equals(text, \"\")) {"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"                result.add(new NormText(text));"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"            result.add(new Tag(tag));"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"            parsedStr \u003d parsedStr.substring(endIdx + Tag.END_PATTERN.length());"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"        if (!Objects.equals(parsedStr, \"\")) {"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"            result.add(new NormText(parsedStr));"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"        return result;"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"    private boolean hasTag(String str) {"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"        return str.contains(Tag.START_PATTERN) \u0026\u0026 str.contains(Tag.END_PATTERN);"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":46}},{"path":"src/main/java/duke/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.parsers;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":" * Parser that parses information into type T."},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"public interface Parser\u003cT\u003e {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    T parse() throws DukeException;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":10}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.Deadline;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.Event;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.Task;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.ToDo;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":" * Class for the representation of the storage/database."},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    private String databasePath;"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    public Storage(String databasePath) {"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"        this.databasePath \u003d databasePath;"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"     * Real all the tasks from the database."},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"     * @return the list of all the tasks from the database"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    public List\u003cTask\u003e readAll() {"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"            File databaseFile \u003d new File(databasePath);"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"            databaseFile.getParentFile().mkdirs();"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"            databaseFile.createNewFile();"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"            BufferedReader csvReader \u003d new BufferedReader(new FileReader(databaseFile));"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"            String line;"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"            while ((line \u003d csvReader.readLine()) !\u003d null) {"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"                Task task;"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"                String[] taskStr \u003d line.split(\",\");"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"                task \u003d storageLineParser(taskStr);"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"                tasks.add(task);"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"            System.err.println(\"Read failed. \\nDatabase connection error.\");"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"        return tasks;"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"     * Update the {@code tasks} to the database."},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"     * @param tasks tasks to update the database"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"    public void update(List\u003cTask\u003e tasks) {"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"            File databaseFile \u003d new File(databasePath);"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"            FileWriter csvWriter \u003d new FileWriter(databaseFile);"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"            for (Task task: tasks) {"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"                String[] formatTask \u003d formatTask(task);"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"                csvWriter.append(String.join(\",\", formatTask));"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"                csvWriter.append(\u0027\\n\u0027);"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"            csvWriter.flush();"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"            csvWriter.close();"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"            System.err.println(\"Creation failed. \\nDatabase connection error.\");"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"    private String[] formatTask(Task task) {"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"        String[] formatTask \u003d new String[] {"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":"                task.getTaskType(),"},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":"                task.getStatus() ? \"1\" : \"0\","},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"                task.getTask(),"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"                task.getTime().isEmpty() ? \"\" : task.getTime().get()"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"        };"},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"        return formatTask;"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"     * Query for a specific task in the database with a query key."},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"     * @param queryKey the key used to query the database"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"     * @return"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"    public List\u003cTask\u003e query(String queryKey) {"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"            File databaseFile \u003d new File(databasePath);"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":"            BufferedReader csvReader \u003d new BufferedReader(new FileReader(databaseFile));"},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":"            String line;"},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"            while ((line \u003d csvReader.readLine()) !\u003d null) {"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"                Task task;"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"                if (line.contains(queryKey)) {"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":"                    String[] taskStr \u003d line.split(\",\");"},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"                    task \u003d storageLineParser(taskStr);"},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"                    tasks.add(task);"},{"lineNumber":99,"author":{"gitId":"chuyiting"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"chuyiting"},"content":"        } catch (IOException e) {"},{"lineNumber":102,"author":{"gitId":"chuyiting"},"content":"            System.err.println(\"Read failed. \\nDatabase connection error.\");"},{"lineNumber":103,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"chuyiting"},"content":"        return tasks;"},{"lineNumber":105,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":107,"author":{"gitId":"chuyiting"},"content":"    private Task storageLineParser(String[] taskStr) {"},{"lineNumber":108,"author":{"gitId":"chuyiting"},"content":"        Task task;"},{"lineNumber":109,"author":{"gitId":"chuyiting"},"content":"        switch (taskStr[0]) {"},{"lineNumber":110,"author":{"gitId":"chuyiting"},"content":"        case \"T\": {"},{"lineNumber":111,"author":{"gitId":"chuyiting"},"content":"            task \u003d new ToDo(taskStr[2], taskStr[1]);"},{"lineNumber":112,"author":{"gitId":"chuyiting"},"content":"            break;"},{"lineNumber":113,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"chuyiting"},"content":"        case \"E\": {"},{"lineNumber":115,"author":{"gitId":"chuyiting"},"content":"            task \u003d new Event(taskStr[1], taskStr[2], taskStr[3]);"},{"lineNumber":116,"author":{"gitId":"chuyiting"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"chuyiting"},"content":"        case \"D\": {"},{"lineNumber":119,"author":{"gitId":"chuyiting"},"content":"            task \u003d new Deadline(taskStr[1], taskStr[2], taskStr[3]);"},{"lineNumber":120,"author":{"gitId":"chuyiting"},"content":"            break;"},{"lineNumber":121,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"chuyiting"},"content":"        default: {"},{"lineNumber":123,"author":{"gitId":"chuyiting"},"content":"            task \u003d null;"},{"lineNumber":124,"author":{"gitId":"chuyiting"},"content":"            break;"},{"lineNumber":125,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"chuyiting"},"content":"        return task;"},{"lineNumber":128,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":130,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":130}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":" * The class for deadline object."},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    private String deadline;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"     * Default constructor for deadline."},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"     * @param task"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"     * @param deadline"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    public Deadline(String task, String deadline) {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        super(task);"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"     * Constructor with status."},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"     * @param status"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"     * @param task"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"     * @param deadline"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    public Deadline(String status, String task, String deadline) {"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        super(task, Objects.equals(status, \"1\") ? true : false);"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"    public String getTaskType() {"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"        return \"D\";"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"        return \"[D]\" + super.toString() + \" (\" + deadline + \")\";"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"    public Optional\u003cString\u003e getTime() {"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"        return Optional.of(deadline);"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":48}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":" * The class for event object."},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    private String duration;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"     * Default constructor for a new event object."},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"     * @param task"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"     * @param duration"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    public Event(String task, String duration) {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        super(task);"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        this.duration \u003d duration;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"     * Constructor for an event with an existing event object."},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"     * @param status"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"     * @param task"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"     * @param duration"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    public Event(String status, String task, String duration) {"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        super(task, Objects.equals(status, \"1\") ? true : false);"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"        this.duration \u003d duration;"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"    public String getTaskType() {"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"        return \"E\";"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"        return \"[E]\" + super.toString() + \" (\" + duration + \")\";"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"    public Optional\u003cString\u003e getTime() {"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"        return Optional.of(duration);"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":48}},{"path":"src/main/java/duke/tasks/SingletonTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.TaskOutOfBoundException;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.ui.Printer;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":" * Class for task list."},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"public class SingletonTaskList {"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    private static SingletonTaskList instance; //this class should only be instantiate once"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    private SingletonTaskList(Storage database) {"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        this.storage \u003d database;"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"        tasks \u003d storage.readAll();"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    public static synchronized SingletonTaskList getInstance(Storage database) {"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"        if (instance \u003d\u003d null) {"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"            instance \u003d new SingletonTaskList(database);"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"        return instance;"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"     * Add task to the task list and the database."},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"     * @param task task to add"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"    public String add(Task task) {"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"        tasks.add(task);"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"        int numOfTask \u003d tasks.size();"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"        String message \u003d Printer.printAdd(task, numOfTask);"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"        storage.update(tasks);"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"        return message;"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"     * Delete task from the task list ant the database."},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"     * @param idx the idx of task to delete"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"     * @throws TaskOutOfBoundException when the idx is not valid"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"     * @see duke.exceptions.TaskOutOfBoundException"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"    public String delete(int idx) throws TaskOutOfBoundException {"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"            String message \u003d Printer.printDelete(tasks.get(idx), tasks.size() - 1);"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"            tasks.remove(idx);"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"            storage.update(tasks);"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"            return message;"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"            throw new TaskOutOfBoundException(\"task number out of bound\", idx + 1);"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"     * List all the tasks in the task list."},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"    public String listAll() throws DukeException {"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"            return Printer.printNoTaskReminder();"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"        return Printer.printAllTask(tasks, true);"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":"     * Set {@code idx} of task done."},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":"     * @param idx idx of the task"},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"     * @throws TaskOutOfBoundException when the {@code idx} is not valid"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"     * @see duke.exceptions.TaskOutOfBoundException"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"    public String setTaskDone(int idx) throws TaskOutOfBoundException {"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":"            Task task \u003d this.tasks.get(idx);"},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"            task.setStatus(true);"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"            String message \u003d Printer.printDoneTask(task);"},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"            storage.update(tasks);"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"            return message;"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"            throw new TaskOutOfBoundException(\"Target number of task out of bound\", idx + 1);"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":"     * Query tasks in the taskList with the {@code queryKey}."},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"     * @param queryKey the key used to query the tasks"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"    public String query(String queryKey) throws DukeException {"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":"        List\u003cTask\u003e matchedTasks \u003d storage.query(queryKey);"},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"        return Printer.printAllTask(matchedTasks, false);"},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":100,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":100}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Optional;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":" * The class for an abstract idea of task."},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    private String task;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    private Boolean status;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    protected Task(String task) { //not meant to be instantiated by classes outside of this package"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        this.task \u003d task;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"        this.status \u003d false;"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    protected Task(String task, boolean status) {"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        this.task \u003d task;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"        this.status \u003d status;"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    public String getTaskType() {"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"        return \"task\";"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"    public Optional\u003cString\u003e getTime() {"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"        return Optional.empty();"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    public String getTask() {"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"        return task;"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"    public void setTask(String task) {"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"        this.task \u003d task;"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"    public Boolean getStatus() {"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"        return status;"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"    public void setStatus(Boolean status) {"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"        this.status \u003d status;"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"    @Override public String toString() {"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"        return \"[\" + statusToIcon() + \"] \" + this.task;"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"    private Character statusToIcon() {"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"        if (this.status) {"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"            return \u0027\\u2714\u0027;"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"            assert !this.status : \"status is \" + this.status;"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"            return \u0027\\u2716\u0027;"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":60}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":" * The class for todoo object."},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    public ToDo(String task) {"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    public ToDo(String task, String status) {"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        super(task, Objects.equals(status, \"1\") ? true : false);"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        return \"T\";"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":27}},{"path":"src/main/java/duke/ui/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import duke.DukeCommandMatcher;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Constants;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.utils.UtilFunction;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"public class Cli {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    private static Cli cli;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    private static Scanner dukeScanner;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    private DukeCommandMatcher dcm;"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    private Storage storage;"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    private Cli() {} //this class is not meant to be instantiated"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"     * Get the unique instance of Cli."},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"     * @return instance of Cli"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"    public static synchronized Cli getInstance() {"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"        if (cli \u003d\u003d null) {"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"            cli \u003d new Cli();"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"            cli.setStorage(Constants.DEFAULTSTORAGE);"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        return cli;"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"     * Storage setter."},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"     * @param storage"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"     * @return Cli object with storage set."},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"    public Cli setStorage(Storage storage) {"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"        this.storage \u003d storage;"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"        return this;"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"    private boolean checkShouldEndLoop(String response) {"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"        return Objects.equals(response, Constants.EXITRESPONSE);"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"    private void startLoop() {"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"        Cli.dukeScanner \u003d new Scanner(System.in);"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"    private boolean hasInput() {"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"        assert dukeScanner !\u003d null : \"duke scanner has not been initiated yet.\";"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"        return dukeScanner.hasNextLine();"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"    private String getInput() {"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"        return dukeScanner.nextLine();"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"    private String execute() {"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"        //setStorage must be invoked before execute"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"        assert this.storage !\u003d null : \"storage is not set yet\";"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"        this.dcm \u003d new DukeCommandMatcher(this.storage);"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"        assert !(this.dcm \u003d\u003d null) : \"duke command matcher is not created yet\";"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"        String response;"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"            response \u003d this.dcm.handleCommand(getInput());"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"        } catch (Exception err) {"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"            UtilFunction.printLimit(err.toString());"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":"            response \u003d \"exception thrown\";"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"        return response;"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"     * Launch the Duke loop."},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"     * @throws IllegalStateException"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"     * @see IllegalStateException"},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"    public void loop() throws IllegalStateException {"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"        Printer.printGreeting();"},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"        startLoop();"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"        while (hasInput()) {"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":"            Printer.printDivision();"},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"            String response \u003d execute();"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":"            if (checkShouldEndLoop(response)) {"},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":"            Printer.printDivision();"},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"        dukeScanner.close();"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":95}},{"path":"src/main/java/duke/ui/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Constants;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.utils.UtilFunction;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"public class Printer {"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    //This is not meant to be initiated."},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    private Printer () {}"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"     * Print the add task."},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"     * @param task the task added to the database"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"     * @param numOfTask the total number of task in the database"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    public static String printAdd(Task task, int numOfTask) {"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"                + \"   \" + task + \u0027\\n\u0027 + \"Now you have \" + numOfTask"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"                + (numOfTask \u003e 1 ? \" tasks \" : \" task \") + \"in the list.\";"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        UtilFunction.printLimit(message);"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"        return message;"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"     * Print the delete task."},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"     * @param task the task deleted from the database"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"     * @param numOfTask the total number of task in the database"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    public static String printDelete(Task task, int numOfTask) {"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + \"   \""},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"                + task + \"\\n\" + \"Now you have \" + numOfTask + \" duke.tasks in the list.\";"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"        UtilFunction.printLimit(message);"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"        return message;"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"     * Print the reminder when list command is used but the database is empty."},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"    public static String printNoTaskReminder() {"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"        String message \u003d \"😝You don\u0027t have any task in the schedule yet~~\\n\""},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"                + \"Use todo/deadline/event command to create your tasks~\";"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"        UtilFunction.printLimit(message);"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"        return message;"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"     * Print the task that has been done."},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"     * @param task the task that has been done"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"    public static String printDoneTask(Task task) {"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"        String message \u003d \"Très bien!I have helped you marked task \" + task.getTask() + \" as done\\n\""},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"                + task;"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"        UtilFunction.printLimit(message);"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"        return message;"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"     * Print all the tasks."},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"     * @param tasks the tasks to print"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"    public static String printAllTask(List\u003cTask\u003e tasks, boolean withLabel) throws DukeException {"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"        String message \u003d \"\";"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"            message +\u003d (withLabel ? (i + \". \") : (\"   \")) + tasks.get(i - 1) + \"\\n\";"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"        UtilFunction.printLimit(message);"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":"            throw new DukeException(\"OOPS!! No match result is found.\");"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"        return message;"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"    static void printGreeting() {"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"        System.out.println(Constants.DIVIDER);"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"        System.out.println(Constants.GREETING);"},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"        System.out.println(Constants.DIVIDER);"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"     * Print bye message."},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"     * @return bye message"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":"    public static String printBye() {"},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"        String message \u003d \"Farewell/再見/さようなら～～\";"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":"        System.out.println(message);"},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"        return message;"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"     * Print all available commands for Duke."},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"     * @return all available commands"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":"    public static String printListCommands() {"},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"        String commandList \u003d \"\u003ctag\u003eHelp\u003c/tag\u003e: List all available commands. \""},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eDone\u003c/tag\u003e: Mark the task as done. \""},{"lineNumber":99,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eTodo\u003c/tag\u003e: Create a todo task. \""},{"lineNumber":100,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eDeadline\u003c/tag\u003e: Create a deadline task. \""},{"lineNumber":101,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eEvent\u003c/tag\u003e: Create your event task. \""},{"lineNumber":102,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eFind\u003c/tag\u003e: Find task by query key. \""},{"lineNumber":103,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eDelete\u003c/tag\u003e: Delete one of your task. \""},{"lineNumber":104,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eLi?st?\u003c/tag\u003e: List out all existing tasks. \""},{"lineNumber":105,"author":{"gitId":"chuyiting"},"content":"                + \"\\n\u003ctag\u003eBye\u003c/tag\u003e: Turn off the Duke. \";"},{"lineNumber":106,"author":{"gitId":"chuyiting"},"content":"        System.out.println(commandList);"},{"lineNumber":107,"author":{"gitId":"chuyiting"},"content":"        return commandList;"},{"lineNumber":108,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":110,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"chuyiting"},"content":"     * Print the division line."},{"lineNumber":112,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"chuyiting"},"content":"    public static void printDivision() {"},{"lineNumber":114,"author":{"gitId":"chuyiting"},"content":"        System.out.println(Constants.DIVIDER);"},{"lineNumber":115,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":116}},{"path":"src/main/java/duke/ui/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui.gui;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.ui.gui.markdown.Markdown;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.utils.UtilFunction;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"import javafx.geometry.Pos;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.Node;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.control.Label;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.image.Image;"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.text.TextFlow;"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":" * An example of a custom control using FXML."},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":" * containing text from the speaker."},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"public class DialogBox extends HBox {"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"    private TextFlow dialog;"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    private Label name;"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    private Circle displayPicture;"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"    private VBox nameAndDialog;"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"    private HBox fullInfo;"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"    private Label timeStamp;"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"    private DialogBox(List\u003cMarkdown\u003e markdownList, Image img, boolean isUser) {"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"            fxmlLoader.load();"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"            e.printStackTrace();"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"        if (isUser) {"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"            name.setText(\"You\");"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"            dialog.setStyle(\"-fx-background-color: #66ff33\");"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"            nameAndDialog.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"            name.setText(\"Duke\");"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"            dialog.setStyle(\"-fx-background-color: #ffffff\");"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"        for (Markdown markdown : markdownList) {"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"            dialog.getChildren().add(markdown.create());"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"        dialog.setMinHeight(Label.USE_PREF_SIZE);"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"        dialog.setLineSpacing(2);"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"        timeStamp.setText(UtilFunction.getCurrentTime());"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"        //move to fxml"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"        displayPicture.setRadius(20);"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"        displayPicture.setFill(new ImagePattern(img));"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"    private void flip() {"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"        ObservableList\u003cNode\u003e timeAndDialog \u003d FXCollections.observableArrayList(fullInfo.getChildren());"},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"        //flip the avatar and the dialog"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"        Collections.reverse(tmp);"},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"        //flip the time stamp and the dialog"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"        Collections.reverse(timeAndDialog);"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"        fullInfo.getChildren().setAll(timeAndDialog);"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"    public static DialogBox getUserDialog(List\u003cMarkdown\u003e text, Image img) {"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"        return new DialogBox(text, img, true);"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"    public static DialogBox getDukeDialog(List\u003cMarkdown\u003e text, Image img) {"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"        var db \u003d new DialogBox(text, img, false);"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"        db.flip();"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":"        return db;"},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":98}},{"path":"src/main/java/duke/ui/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui.gui;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.DukeCommandMatcher;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.parsers.MarkdownParser;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import duke.ui.Printer;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"import duke.ui.gui.markdown.ErrorText;"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"import duke.ui.gui.markdown.Markdown;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"import duke.ui.gui.markdown.NormText;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"import duke.utils.Constants;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"import javafx.beans.value.ChangeListener;"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"import javafx.beans.value.ObservableValue;"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"import javafx.fxml.FXML;"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"import javafx.geometry.Insets;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.control.Button;"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.image.Image;"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"    private VBox dialogContainer;"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"    private TextField userInput;"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"    private Button sendButton;"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"    private HBox userPanel;"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DonaldTrump.jpg\"));"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"    private final ChangeListener\u003cBoolean\u003e inputFocusListener \u003d this::handleFocusedInputField;"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"     * Initializer for main window."},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"    public void initialize() {"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"        NormText greetingText \u003d new NormText(Constants.GREETING);"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Arrays.asList(greetingText), dukeImage));"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"        userInput.focusedProperty().addListener(this.inputFocusListener);"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"    private void handleFocusedInputField(ObservableValue\u003c? extends Boolean\u003e observableValue,"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"                                         Boolean oldVal, Boolean newVal) {"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"        if (newVal) {"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"            userInput.setStyle(\"-fx-background-radius: 10\");"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"            userPanel.setPadding(new Insets(3, 5, 3, 5));"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":"            userPanel.setSpacing(10);"},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":"            userInput.setPrefWidth(325);"},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"chuyiting"},"content":"            userInput.setStyle(\"-fx-background-radius: 30\");"},{"lineNumber":69,"author":{"gitId":"chuyiting"},"content":"            userPanel.setPadding(new Insets(3, 5, 3, 25));"},{"lineNumber":70,"author":{"gitId":"chuyiting"},"content":"            userInput.setPrefWidth(275);"},{"lineNumber":71,"author":{"gitId":"chuyiting"},"content":"            userPanel.setSpacing(30.0);"},{"lineNumber":72,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":75,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":76,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"chuyiting"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":78,"author":{"gitId":"chuyiting"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":79,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"chuyiting"},"content":"    @FXML"},{"lineNumber":81,"author":{"gitId":"chuyiting"},"content":"    private void handleUserInput() {"},{"lineNumber":82,"author":{"gitId":"chuyiting"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":83,"author":{"gitId":"chuyiting"},"content":"        //handle input"},{"lineNumber":84,"author":{"gitId":"chuyiting"},"content":"        if (!Objects.equals(input.trim(), \"\")) {"},{"lineNumber":85,"author":{"gitId":"chuyiting"},"content":"            NormText inputText \u003d new NormText(input);"},{"lineNumber":86,"author":{"gitId":"chuyiting"},"content":"            dialogContainer.getChildren().add(DialogBox.getUserDialog(Arrays.asList(inputText), userImage));"},{"lineNumber":87,"author":{"gitId":"chuyiting"},"content":"            handleDukeOutput(input);"},{"lineNumber":88,"author":{"gitId":"chuyiting"},"content":"            userInput.clear();"},{"lineNumber":89,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":92,"author":{"gitId":"chuyiting"},"content":"    private void handleDukeOutput(String input) {"},{"lineNumber":93,"author":{"gitId":"chuyiting"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"chuyiting"},"content":"            Storage database \u003d new Storage(\"data/tasksTable.csv\");"},{"lineNumber":95,"author":{"gitId":"chuyiting"},"content":"            DukeCommandMatcher parser \u003d new DukeCommandMatcher(database);"},{"lineNumber":96,"author":{"gitId":"chuyiting"},"content":"            String response \u003d parser.handleCommand(input);"},{"lineNumber":97,"author":{"gitId":"chuyiting"},"content":"            MarkdownParser mdParser \u003d new MarkdownParser(response);"},{"lineNumber":98,"author":{"gitId":"chuyiting"},"content":"            List\u003cMarkdown\u003e markdownList \u003d mdParser.parse();"},{"lineNumber":99,"author":{"gitId":"chuyiting"},"content":"            DialogBox db;"},{"lineNumber":100,"author":{"gitId":"chuyiting"},"content":"            if (Objects.equals(response, Constants.EXITRESPONSE)) {"},{"lineNumber":101,"author":{"gitId":"chuyiting"},"content":"                NormText byeText \u003d new NormText(Printer.printBye());"},{"lineNumber":102,"author":{"gitId":"chuyiting"},"content":"                db \u003d DialogBox.getDukeDialog(Arrays.asList(byeText), dukeImage);"},{"lineNumber":103,"author":{"gitId":"chuyiting"},"content":"                userInput.setEditable(false);"},{"lineNumber":104,"author":{"gitId":"chuyiting"},"content":"                userInput.setStyle(\"-fx-background-color: grey;\");"},{"lineNumber":105,"author":{"gitId":"chuyiting"},"content":"                userInput.focusedProperty().removeListener(this.inputFocusListener);"},{"lineNumber":106,"author":{"gitId":"chuyiting"},"content":"                userInput.setPromptText(\"Restart to launch duke again!!\");"},{"lineNumber":107,"author":{"gitId":"chuyiting"},"content":"            } else {"},{"lineNumber":108,"author":{"gitId":"chuyiting"},"content":"                assert response !\u003d Constants.EXITRESPONSE : response;"},{"lineNumber":109,"author":{"gitId":"chuyiting"},"content":"                db \u003d DialogBox.getDukeDialog(markdownList, dukeImage);"},{"lineNumber":110,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"chuyiting"},"content":"            dialogContainer.getChildren().add(db);"},{"lineNumber":112,"author":{"gitId":"chuyiting"},"content":"        } catch (Exception e) {"},{"lineNumber":113,"author":{"gitId":"chuyiting"},"content":"            ErrorText exceptionText \u003d new ErrorText(e.getMessage());"},{"lineNumber":114,"author":{"gitId":"chuyiting"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(Arrays.asList(exceptionText), dukeImage));"},{"lineNumber":115,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":118,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":118}},{"path":"src/main/java/duke/ui/gui/markdown/ErrorText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui.gui.markdown;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.Node;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.text.Font;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.text.FontWeight;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.text.Text;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"public class ErrorText extends NormText {"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    public ErrorText(String text) {"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"        super(text);"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    public Node create() {"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"        Text text \u003d (Text) super.create();"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        text.setFill(Color.RED);"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        text.setFont(Font.font(null, FontWeight.BOLD, DEFAULT_TEXT_SIZE));"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        return text;"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":22}},{"path":"src/main/java/duke/ui/gui/markdown/Markdown.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui.gui.markdown;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.Node;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"public interface Markdown {"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"    Node create();"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":7}},{"path":"src/main/java/duke/ui/gui/markdown/NormText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui.gui.markdown;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.Node;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.text.Text;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"public class NormText implements Markdown {"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    protected static final int DEFAULT_TEXT_SIZE \u003d 12;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    private String text;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    public NormText(String text) {"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"        this.text \u003d text;"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    public Node create() {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        Text text \u003d new Text(this.text);"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        text.setWrappingWidth(180);"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"        text.setLineSpacing(2.0);"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"        return text;"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":24}},{"path":"src/main/java/duke/ui/gui/markdown/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.ui.gui.markdown;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import javafx.geometry.Insets;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import javafx.scene.text.Font;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"public class Tag implements Markdown {"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    public static final String START_PATTERN \u003d \"\u003ctag\u003e\";"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    public static final String END_PATTERN \u003d \"\u003c/tag\u003e\";"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    private static final String DEFAULT_TAG_COLOR \u003d \"#2eb8b8\";"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    private static final int DEFAULT_TEXT_SIZE \u003d 12;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    private String tag;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    public Tag(String tag) {"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"        this.tag \u003d tag;"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    public Node create() {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"        Label tag \u003d new Label(this.tag);"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        tag.setStyle(\"-fx-background-color: \" + DEFAULT_TAG_COLOR + \"; \""},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"                + \"-fx-font-weight: bold; \""},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"                + \"-fx-border-radius: 2, 2, 2, 2;\""},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"                + \"-fx-background-radius: 2, 2, 2, 2; \");"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"        tag.setTextFill(Color.web(\"#ffffff\"));"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"        tag.setFont(new Font(DEFAULT_TEXT_SIZE));"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"        tag.setPadding(new Insets(2, 2, 2, 2));"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        return tag;"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":32}},{"path":"src/main/java/duke/utils/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.DateFormat;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.DayOnlyFormat;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.StandardDateFormat;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import duke.dateformats.StandardTimeFormat;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import duke.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"public class Constants {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"     * Greeting for Duke."},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public static final String GREETING \u003d"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"            \"Hello/您好/こんにちは I\u0027m Duke\\n\""},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"            + \"What can I do for you?\";"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"     * Divider for Duke output."},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    public static final String DIVIDER \u003d \"__________________________________________________\";"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"     * Standard date format."},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    public static final String DF_LOCAL_TIME \u003d \"yyyy-mm-dd (hh:mm)?\";"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"     * Default console width."},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"    public static final int CONSOLEWIDTH \u003d 50;"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"    public static final String EXITRESPONSE \u003d \"EXIT\";"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"    public static final Storage DEFAULTSTORAGE \u003d new Storage(\"data/tasksTable.csv\");"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"    public static final List\u003cDateFormat\u003e DATE_TIME_FORMAT_LIST \u003d"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"            Arrays.asList(new DayOnlyFormat(), new StandardDateFormat(), new StandardTimeFormat());"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":"    public static final String PERIODERROR \u003d \"perioderror\";"},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":46}},{"path":"src/main/java/duke/utils/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public class Pair\u003cT, U\u003e {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"    private T first;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"    private U second;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"     * Constructor for Pair."},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"     * @param first first element"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"     * @param second second element"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    public Pair(T first, U second) {"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"        this.first \u003d first;"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        this.second \u003d second;"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    public U getSecond() {"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        return second;"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    public void setSecond(U second) {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"        this.second \u003d second;"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"    public T getFirst() {"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"        return first;"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    public void setFirst(T first) {"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"        this.first \u003d first;"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":32}},{"path":"src/main/java/duke/utils/UtilFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":" * @author Eddy"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":" * @version 1.0.0"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":" */"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"public class UtilFunction {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"     * Util function used to match pattern of the string."},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"     * @param patternStr the pattern you want to check"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"     * @param string the string to check"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"     * @return true if the string matches the string pattern"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    public static Boolean matchPattern(String patternStr, String string) {"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        Pattern pattern \u003d Pattern.compile(patternStr);"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"        Matcher matcher \u003d pattern.matcher(string);"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"        return matcher.find();"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"     * Util function used to print message within {@value duke.utils.Constants#CONSOLEWIDTH}."},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"     * @param output the string meant to be printed in the console"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"    public static void printLimit(String output) {"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"        String[] sentences \u003d output.split(\"\\n\");"},{"lineNumber":35,"author":{"gitId":"chuyiting"},"content":"        for (String sentence: sentences) {"},{"lineNumber":36,"author":{"gitId":"chuyiting"},"content":"            if (sentence.length() \u003c Constants.CONSOLEWIDTH) {"},{"lineNumber":37,"author":{"gitId":"chuyiting"},"content":"                System.out.println(sentence);"},{"lineNumber":38,"author":{"gitId":"chuyiting"},"content":"            } else {"},{"lineNumber":39,"author":{"gitId":"chuyiting"},"content":"                assert sentence.length() \u003e\u003d Constants.CONSOLEWIDTH : \"sentence length: \" + sentence.length();"},{"lineNumber":40,"author":{"gitId":"chuyiting"},"content":"                wrapAndDisplay(sentence);"},{"lineNumber":41,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":45,"author":{"gitId":"chuyiting"},"content":"    private static void wrapAndDisplay(String sentence) {"},{"lineNumber":46,"author":{"gitId":"chuyiting"},"content":"        String[] words \u003d sentence.split(\"\\\\s+\");"},{"lineNumber":47,"author":{"gitId":"chuyiting"},"content":"        int count \u003d 0;"},{"lineNumber":48,"author":{"gitId":"chuyiting"},"content":"        for (String word: words) {"},{"lineNumber":49,"author":{"gitId":"chuyiting"},"content":"            count +\u003d word.length();"},{"lineNumber":50,"author":{"gitId":"chuyiting"},"content":"            if (count \u003c Constants.CONSOLEWIDTH) {"},{"lineNumber":51,"author":{"gitId":"chuyiting"},"content":"                System.out.print(word + \" \");"},{"lineNumber":52,"author":{"gitId":"chuyiting"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"chuyiting"},"content":"                System.out.print(\u0027\\n\u0027 + word + \" \");"},{"lineNumber":54,"author":{"gitId":"chuyiting"},"content":"                count \u003d word.length();"},{"lineNumber":55,"author":{"gitId":"chuyiting"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"chuyiting"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"chuyiting"},"content":"        System.out.print(\u0027\\n\u0027);"},{"lineNumber":58,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":60,"author":{"gitId":"chuyiting"},"content":"    public static String getCurrentTime() {"},{"lineNumber":61,"author":{"gitId":"chuyiting"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"HH:mm\");"},{"lineNumber":62,"author":{"gitId":"chuyiting"},"content":"        Date now \u003d new Date(System.currentTimeMillis());"},{"lineNumber":63,"author":{"gitId":"chuyiting"},"content":"        return formatter.format(now);"},{"lineNumber":64,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":66,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":67,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"390.0\" spacing\u003d\"5\" stylesheets\u003d\"@../css/dialog_box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"        \u003cHBox fx:id\u003d\"fullInfo\" alignment\u003d\"BOTTOM_LEFT\"\u003e"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"            \u003cLabel fx:id\u003d\"timeStamp\" text\u003d\"timeStamp\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"            \u003cVBox fx:id\u003d\"nameAndDialog\" xmlns:fx\u003d\"http://javafx.com/fxml\" \u003e"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"name\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"                    \u003cTextFlow fx:id\u003d\"dialog\" maxWidth\u003d\"200\" /\u003e"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"            \u003c/VBox\u003e"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"        \u003c/HBox\u003e"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\"  pickOnBounds\u003d\"true\" /\u003e"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"chuyiting":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.image.Image?\u003e"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: white;\" stylesheets\u003d\"@../css/main_window.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.gui.MainWindow\"\u003e"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    \u003cchildren\u003e"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"559.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"AS_NEEDED\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"            \u003ccontent\u003e"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #99ccff#99ccff;\" stylesheets\u003d\"@../css/main_window.css\" /\u003e"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"            \u003c/content\u003e"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        \u003cHBox fx:id\u003d\"userPanel\" layoutY\u003d\"555.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: white; -fx-padding: 3,0,0,0;\"\u003e"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"            \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"565.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"37.0\" prefWidth\u003d\"325.0\" promptText\u003d\"type \u0026quot;help\u0026quot; if do know where to start\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"            \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minWidth\u003d\"37.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"37.0\" prefWidth\u003d\"37.0\" style\u003d\"-fx-background-radius: 0; -fx-background-color: #ffffff;\" textAlignment\u003d\"CENTER\" textFill\u003d\"#0277bd\"\u003e"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"                \u003cfont\u003e"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"                    \u003cFont /\u003e"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"                \u003c/font\u003e"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"                \u003cgraphic\u003e"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"                    \u003cImageView blendMode\u003d\"DARKEN\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"                        \u003cImage url\u003d\"@../images/sendButton.png\" /\u003e"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"                    \u003c/ImageView\u003e"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"                \u003c/graphic\u003e"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"            \u003c/Button\u003e"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"        \u003c/HBox\u003e"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"    \u003c/children\u003e"},{"lineNumber":34,"author":{"gitId":"chuyiting"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"chuyiting":34}},{"path":"src/test/java/duke/DukeCommandMatcherTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"public class DukeCommandMatcherTest {"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":5}},{"path":"src/test/java/duke/dateformats/DayOnlyFormatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.dateformats;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.DayOfWeek;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"import java.time.temporal.TemporalAdjusters;"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"public class DayOnlyFormatTest {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    public void checkTest_correctInput_trueResponse() {"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"        DayOnlyFormat format \u003d new DayOnlyFormat();"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(true, format.check(\"Tue\"));"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    public void checkTest_incorrectInput_falseResponse() {"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"        DayOnlyFormat format \u003d new DayOnlyFormat();"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(false, format.check(\"2020-09-25\"));"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    public void mapToLocalDateTest_validFormat() {"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":"        DayOnlyFormat format \u003d new DayOnlyFormat();"},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(LocalDateTime.of(LocalDate.now(), LocalTime.of(0, 0))"},{"lineNumber":30,"author":{"gitId":"chuyiting"},"content":"                        .with(TemporalAdjusters.next(DayOfWeek.WEDNESDAY)),"},{"lineNumber":31,"author":{"gitId":"chuyiting"},"content":"                format.mapToLocalDateTime(\"Wed\"));"},{"lineNumber":32,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":33}},{"path":"src/test/java/duke/dateformats/StandardDateFormatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.dateformats;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DateFormatException;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"public class StandardDateFormatTest {"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    public void checkTest_correctFormatInput_trueResponse() {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        StandardDateFormat sdf \u003d new StandardDateFormat();"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(true, sdf.check(\"2020-09-20\"));"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    public void checkTest_incorrectFormatInput_falseResponse() {"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"        StandardDateFormat sdf \u003d new StandardDateFormat();"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(false, sdf.check(\"Mon\"));"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    public void mapToLocalDateTest_correctFormat() throws DateFormatException {"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":"        StandardDateFormat sdf \u003d new StandardDateFormat();"},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(LocalDateTime.of(2020, 9, 25, 0, 0),"},{"lineNumber":26,"author":{"gitId":"chuyiting"},"content":"                sdf.mapToLocalDateTime(\"2020-09-25\"));"},{"lineNumber":27,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":29,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":29}},{"path":"src/test/java/duke/dateformats/StandardTimeFormatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.dateformats;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"import duke.exceptions.DateFormatException;"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"public class StandardTimeFormatTest {"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"    public void checkTest_correctFormatWithTimeInput_trueResponse() {"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"        StandardTimeFormat stf \u003d new StandardTimeFormat();"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(true, stf.check(\"2020-09-25 12:00\"));"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"    public void mapToLocalDateTest_withTime() throws DateFormatException {"},{"lineNumber":20,"author":{"gitId":"chuyiting"},"content":"        StandardTimeFormat sdf \u003d new StandardTimeFormat();"},{"lineNumber":21,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(LocalDateTime.of(2020, 9, 25, 12, 30),"},{"lineNumber":22,"author":{"gitId":"chuyiting"},"content":"                sdf.mapToLocalDateTime(\"2020-09-25 12:30\"));"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":25,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":25}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    public void defaultConstructor_noInput_falseStatusTaskBuilt() {"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"        Task task \u003d new Task(\"my task\");"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(false, task.getStatus());"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    public void normalConstructor_trueInput_trueStatusTaskBuilt() {"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"        Task task \u003d new Task(\"my task\", true);"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(true, task.getStatus());"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":19}},{"path":"src/test/java/duke/utils/UtilFunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"public class UtilFunctionTest {"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"    public void matchPatternTest() {"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(true,"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"               UtilFunction.matchPattern(\"^(l|L)(i|I)?(s|S)(t|T)?$\", \"ls\"));"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"        Assertions.assertEquals(true,"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"                UtilFunction.matchPattern(\"^(l|L)(i|I)?(s|S)(t|T)?$\", \"list\"));"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":""},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"}"}],"authorContributionMap":{"chuyiting":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chuyiting"},"content":"ls"},{"lineNumber":2,"author":{"gitId":"chuyiting"},"content":"List"},{"lineNumber":3,"author":{"gitId":"chuyiting"},"content":"gibberish"},{"lineNumber":4,"author":{"gitId":"chuyiting"},"content":"deadLiNe"},{"lineNumber":5,"author":{"gitId":"chuyiting"},"content":"deadline return book"},{"lineNumber":6,"author":{"gitId":"chuyiting"},"content":"deadline return book /2020-08-08"},{"lineNumber":7,"author":{"gitId":"chuyiting"},"content":"deadline return book2 /20200808"},{"lineNumber":8,"author":{"gitId":"chuyiting"},"content":"liSt"},{"lineNumber":9,"author":{"gitId":"chuyiting"},"content":"event"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"event presentation"},{"lineNumber":11,"author":{"gitId":"chuyiting"},"content":"event presentation /2020-08-25"},{"lineNumber":12,"author":{"gitId":"chuyiting"},"content":"event presentation2 /20200826"},{"lineNumber":13,"author":{"gitId":"chuyiting"},"content":"ls"},{"lineNumber":14,"author":{"gitId":"chuyiting"},"content":"done 1"},{"lineNumber":15,"author":{"gitId":"chuyiting"},"content":"done 0"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"find"},{"lineNumber":17,"author":{"gitId":"chuyiting"},"content":"find book"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"list"},{"lineNumber":19,"author":{"gitId":"chuyiting"},"content":"bye"}],"authorContributionMap":{"chuyiting":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"chuyiting"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"chuyiting"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"chuyiting":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"chuyiting"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/utils/*.java ../src/main/java/duke/storage/*.java ../src/main/java/duke/tasks/*.java ../src/main/java/duke/ui/*.java ../src/main/java/duke/exceptions/*.java ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"chuyiting"},"content":"java -classpath ../bin duke.DukeCli \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"chuyiting":2,"-":36}}]
