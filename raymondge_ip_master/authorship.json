[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 63
    }
  },
  {
    "path": "data/duke.txt.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "raymondge": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raymondge"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raymondge"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raymondge"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "raymondge": 103
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates data for a deadline task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 24
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * A chat bot reacting on tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Duke extends Application{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    UI ui \u003d new UI();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        storage.createDirectory(\"TestList\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        // Add functionality to handle user input."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String userInputText \u003d userInput.getText();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        System.out.println(\"user input:\" + userInputText);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String response \u003d newParser.uiResponse(tasks, ui,userInputText);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        System.out.println(\"response:\" + response);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String dukeText \u003d getResponse(response);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        //storage.updateDirectory(tasks);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 148,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Give the message of what problem the program runs into."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates data for an event task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getTime() + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 24
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Deadline exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\" OOPS!!! The description of a Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Event exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\" OOPS!!! The description of a Event cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Event exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidFormatException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidFormatException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\" OOPS!!! You have entered a wrong format.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Input exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\" OOPS!!! Sorry I do not understand this command!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Todo input exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidTodoException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidTodoException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        //Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Main.main(args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        launch(args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            duke.storage.createDirectory(\"TaskList\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 34
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private UI ui \u003d new UI();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /*private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String userInputText \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        System.out.println(\"user input:\" + userInputText);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String response \u003d newParser.uiResponse(tasks, ui,userInputText);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        System.out.println(\"response:\" + response);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String dukeText \u003d duke.getResponse(response);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                DialogBox.getUserDialog(userText, userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        storage.updateDirectory(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 71
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /*public void run(TaskList tasks, UI ui) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String textMessage \u003d sc.nextLine();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                String[] keyPhrase \u003d textMessage.split(\"/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                String[] keyword \u003d keyPhrase[0].split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (textMessage.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (keyword[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(tasks.findTask(keyword[1]));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (keyword[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    int index \u003d Integer.parseInt(keyword[1]) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(tasks.deleteTask(index));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (keyword[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    if(keyPhrase.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidTodoException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    Todo newTodo \u003d new Todo(textMessage.substring(5), false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(tasks.addTask(newTodo));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (keyword[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    if(keyPhrase.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    String[] tempString \u003d textMessage.substring(9).split(\" /by\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(tempString[0], false, LocalDate.parse(tempString[1]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(tasks.addTask(newDeadline));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (keyword[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    if(keyPhrase.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidEventException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    String[] tempString \u003d textMessage.substring(7).split(\" /at\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    Event newEvent \u003d new Event(tempString[0], false,  LocalDate.parse(tempString[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(tasks.addTask(newEvent));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (textMessage.equals(\"list\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(tasks.showList());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (keyword[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    int index \u003d Integer.parseInt(keyword[1]) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    tasks.getTasks().get(index).markDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(\"Nice I\u0027ve marked this tasks as done\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    System.out.println(tasks.getTasks().get(index));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    throw new InvalidInputException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            textMessage \u003d sc.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String uiResponse(TaskList tasks, UI ui,String uiInput) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String textMessage \u003d uiInput;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                String[] keyword \u003d textMessage.split(\" \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (textMessage.equals(\"bye\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    response +\u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else if (keyword[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    response +\u003d tasks.findTask(keyword[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else if (keyword[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    int index \u003d Integer.parseInt(keyword[1]) - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    response +\u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else if (keyword[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    if(keyword.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidTodoException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    Todo newTodo \u003d new Todo(textMessage.substring(5), false);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    response +\u003d tasks.addTask(newTodo);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else if (keyword[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    if(keyword.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        String[] tempString \u003d textMessage.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(tempString[0], false, LocalDate.parse(tempString[1]));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        response +\u003d tasks.addTask(newDeadline);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    } catch (Exception e){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidFormatException();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else if (keyword[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    if(keyword.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidEventException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        String[] tempString \u003d textMessage.substring(7).split(\" /at \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        Event newEvent \u003d new Event(tempString[0], false, LocalDate.parse(tempString[1]));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        response +\u003d tasks.addTask(newEvent);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    } catch (Exception e){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                        throw new InvalidFormatException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else if (textMessage.equals(\"list\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    response +\u003d tasks.showList();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else if (keyword[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    int index \u003d Integer.parseInt(keyword[1]) - 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    tasks.getTasks().get(index).markDone();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    response +\u003d \"Nice I\u0027ve marked this tasks as done\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    response +\u003d tasks.getTasks().get(index);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    throw new InvalidInputException();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                response +\u003d e.getMessage();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 174
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void createDirectory(String dirName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        File file \u003d new File(dirName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                file.mkdir();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void updateDirectory(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        File fileDir \u003d new File(\"TaskList\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        File[] fileList \u003d fileDir.listFiles();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        for (File f : fileList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            if (f.toString().substring(0, 13).equals(\"TaskList/Task\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                Path path \u003d FileSystems.getDefault().getPath(f.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    Files.delete(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            writeToFile(tasks.getTasks().get(i), i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void createFile(String fileName) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        File file \u003d new File(fileName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void writeToFile(Task task, int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(new FileOutputStream(\"ToDo/item\" + todoNum + \".txt\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            out.writeObject(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Task readFromFile(String fileDir) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(fileDir));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            task \u003d (Task) in.readObject();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void updateList(TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        File fileDir \u003d new File(\"TaskList\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        File[] fileList \u003d fileDir.listFiles();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        for (File f : fileList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            if (f.toString().substring(0, 13).equals(\"TaskList/Task\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                tasks.getTasks().add(readFromFile(f.toString()));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "raymondge": 87
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /** The task\u0027s messages */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /** Whether the task is Done*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public boolean checkDone(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        ArrayList\u003cTask\u003e listOfFoundItems \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        for (Task s : tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            String[] items \u003d s.description.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            for (int i \u003d 0; i \u003c items.length; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (keyword.equals(items[i])) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    listOfFoundItems.add(s);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        int iterator \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        output +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        for (Task s : listOfFoundItems) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            output +\u003d iterator + \".\" + s.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            iterator++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String addTask(Task myTask) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.tasks.add(myTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"added: \" + myTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String deleteTask(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Task myTask \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"removed: \" + myTask;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String showList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        int iterator \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        for (Task s : tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            output +\u003d iterator + \".\" + s.toString() + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            iterator++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 59
    }
  },
  {
    "path": "src/main/java/Test.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Test {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        UI ui \u003d new UI();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        storage.createDirectory(\"FileSaver1\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        storage.updateList(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        //newParser.run(tasks, ui);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        storage.updateDirectory(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        tasks.showList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        System.out.println(\"Thank you for using! See you next time!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 16
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates data for a todo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 13
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates messages for interacting with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * manages user interfacce interactions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void print(String s){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "raymondge": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "raymondge": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "raymondge": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 10
    }
  },
  {
    "path": "src/test/java/UITest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class UITest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void MessagePrintTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            String testString \u003d \"☹ OOPS!!! The description of a Deadline cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            UI ui \u003d new UI();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "delete 3"
      }
    ],
    "authorContributionMap": {
      "raymondge": 6
    }
  }
]
