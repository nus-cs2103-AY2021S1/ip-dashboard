[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author Damith C. Rajapakse"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://nus-cs2103-ay2021s1.github.io/website/schedule/week2/project.html with minor modifications"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 1,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    // different possible commands that can be received from the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String DIVIDER \u003d \"__________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private final static String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private static void messageEcho(String word) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        System.out.println(word);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        System.out.println(DIVIDER + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private static String listIterator(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        StringBuilder string \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        string.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        for (int i \u003d0; i \u003c list.size(); i++){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            if (list.size() \u003d\u003d i + 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                string.append(i + 1).append(\". \").append(list.get(i).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                string.append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        return string.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    private static boolean isNumber(String size) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            int tempInt \u003d Integer.parseInt(size);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public void runDuke() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        messageEcho(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            String word \u003d sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                if (word.equals(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    messageEcho(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                if (word.equals(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    messageEcho(listIterator(list));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                String[] tempArray \u003d word.trim().split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                if (tempArray[0].equals(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (tempArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new InvalidDoneFormatException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (!isNumber(tempArray[1])) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new IncorrectDoneInputException(list.size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    int itemIndex \u003d Integer.parseInt(tempArray[1]) - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (itemIndex \u003c 0 || Integer.parseInt(tempArray[1]) \u003e list.size()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new IncorrectDoneInputException(list.size());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    list.get(itemIndex).markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    messageEcho(\"Nice! I\u0027ve marked this task as done:\\n\" + list.get(itemIndex).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                if ((tempArray[0].equals(DELETE_COMMAND))) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (tempArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new InvalidDeleteFormatException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (!isNumber(tempArray[1])) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new IncorrectDeleteInputException(list.size());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    int itemIndex \u003d Integer.parseInt(tempArray[1]) - 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (itemIndex \u003c 0 || Integer.parseInt(tempArray[1]) \u003e list.size()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new IncorrectDeleteInputException(list.size());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    Task deletedTask \u003d list.get(itemIndex);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    list.remove(itemIndex);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    messageEcho(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    + \"\\nNow you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                if (tempArray[0].equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (tempArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new InvalidDeadlineFormatException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    String deadlineAndDate \u003d word.substring(9);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    String[] deadlineDateArray \u003d deadlineAndDate.trim().split(\" /by \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (deadlineDateArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new InvalidDeadlineFormatException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    Deadline newDeadlineTask \u003d new Deadline(deadlineDateArray[0], deadlineDateArray[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    list.add(newDeadlineTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    messageEcho("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\\n\" + newDeadlineTask.toString() +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                                    \"\\nNow you have \" + list.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                if (tempArray[0].equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (!(tempArray.length \u003e 1)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new InvalidToDoFormatException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    String task \u003d word.substring(5);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    ToDo newToDoTask \u003d new ToDo(task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    list.add(newToDoTask);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    messageEcho("
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\\n\" + newToDoTask.toString() +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                                    \"\\nNow you have \" + list.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                if (tempArray[0].equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (tempArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new InvalidEventFormatException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    String eventAndDate \u003d word.substring(6);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    String[] eventDateArray \u003d eventAndDate.trim().split(\" /at \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    if (eventDateArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                        throw new InvalidEventFormatException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    Event newEventTask \u003d new Event(eventDateArray[0], eventDateArray[1]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    list.add(newEventTask);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    messageEcho("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\\n\" + newEventTask.toString() +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                                    \"\\nNow you have \" + list.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                messageEcho(e.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        new Duke().runDuke();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 159,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 13
    }
  },
  {
    "path": "src/main/java/IncorrectDeleteInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class IncorrectDeleteInputException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public IncorrectDeleteInputException(int listSize) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"Input for delete command is invalid! Input a number between 1 and \" + listSize + \".\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 5
    }
  },
  {
    "path": "src/main/java/IncorrectDoneInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class IncorrectDoneInputException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public IncorrectDoneInputException(int listSize) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"Input for done command is invalid! Input a number between 1 and \" + listSize + \".\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 5
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"☹ OOPS!!! Sorry I do not understand this command!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 5
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class InvalidDeadlineFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public InvalidDeadlineFormatException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"☹ OOPS!!! The format of deadline command seems to be wrong.\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        + \"Try the following format: deadline task /by time\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 6
    }
  },
  {
    "path": "src/main/java/InvalidDeleteFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class InvalidDeleteFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public InvalidDeleteFormatException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"☹ OOPS!!! Format for delete command doesnt seem to be correct. Eg. delete 2\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 5
    }
  },
  {
    "path": "src/main/java/InvalidDoneFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class InvalidDoneFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public InvalidDoneFormatException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"☹ OOPS!!! Format for done command doesnt seem to be correct. Eg. done 2\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 6
    }
  },
  {
    "path": "src/main/java/InvalidEventFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class InvalidEventFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public InvalidEventFormatException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"☹ OOPS!!! The format of event command seems to be wrong.\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "                + \"Try the following format: event task /at time\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 6
    }
  },
  {
    "path": "src/main/java/InvalidToDoFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class InvalidToDoFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public InvalidToDoFormatException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": " * @author Damith C. Rajapakse"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": " * Reused from https://nus-cs2103-ay2021s1.github.io/website/schedule/week2/project.html with minor modifications"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author Damith C. Rajapakse"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://nus-cs2103-ay2021s1.github.io/website/schedule/week2/project.html with minor modifications"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() throws TaskCompletedException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new TaskCompletedException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027[\u0027 + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 8,
      "-": 24
    }
  },
  {
    "path": "src/main/java/TaskCompletedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class TaskCompletedException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public TaskCompletedException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(\"☹ OOPS!!! Task is already done!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 5
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "todo CS2100"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "todo CS2101"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "event rotaract club presentation /at Sun 8am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "deadline CS2103 quiz /by Mon 12am"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done s"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "delete"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "event /at Tues 8am"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "deadline /at Mon 12am"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "blah"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ashley-Lau"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Ashley-Lau": 2,
      "-": 19
    }
  }
]
