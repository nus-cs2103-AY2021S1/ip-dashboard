[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"repositories {"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"    mavenCentral()"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":"}"},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":"dependencies {"},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":56,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":57,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":58,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":59,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":60,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":61,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":62,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":63,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":64,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":65,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":66,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":67,"author":{"gitId":"euzintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":68,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":24,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"# Eu Zin\u0027s Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"Eu Zin\u0027s Duke is a simple no frills(because Eu Zin is not great at jxml yet) to-do list that can help you keep track of your bust day! "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"## Contents:"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"  - Quickstart"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"  - Features"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"      - List View"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"      - Add todo "},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"      - Add event"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"      - Add deadline"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"      - Mark as Complete"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"      - Delete task"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"      - Set task duration"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"      - Search for a task"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"  - FAQ "},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"  - Command Summary"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"---"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"# Quickstart"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"Due to the easy-to-use nature of Eu Zin\u0027s Duke, this will be the quickest Quickstart Guide you\u0027ve ever seen."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"### 1. Open Eu Zin\u0027s Duke"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"You will arrive at the main dialog page. It will look something like this:"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"![Image](start.png)"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"You will notice 3 important features:"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"1. The User Input Box - For you to type in the commands for Eu Zin\u0027s Duke"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"2. The Send Button - To send your commands to Eu Zin\u0027s Duke when you are done entering them"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"3. The Scroll Bar - To Scroll up and down the dialog box"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"### 2. Create your first Task"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"Your task can come in 3 forms: todo, event and deadline."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"##### todo"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"These tasks are the most basic of tasks, they **only have a description**."},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"To create a todo input:"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"`todo \u003cdescription\u003e` and hit *Send*"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"##### event"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"These tasks have a **description** and a **timeframe**."},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"To create an event input:"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"`event \u003cdescription\u003e /at \u003ctimeframe\u003e` and hit *Send*"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"The description and timefram cane be of any string format."},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"##### deadline"},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"These tasks have a **description** and a **date-time**"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"To create a deadline input:"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":"`deadline \u003cdescription\u003e /by \u003cdate-time\u003e` and hit *Send*"},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":"The description can be of any String format."},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":"\u003e **_NOTE:_** **The date-time must be strictly in either of these formats:** DD/MM/YYYY TTTT   *OR*   YYYY/MM/DD TTTT"},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":"### Complete your task"},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":"Once you\u0027ve completed your task, input:"},{"lineNumber":56,"author":{"gitId":"euzintan"},"content":"`done \u003cindex\u003e`"},{"lineNumber":57,"author":{"gitId":"euzintan"},"content":"index being the number of the task you just completed."},{"lineNumber":58,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":59,"author":{"gitId":"euzintan"},"content":"You should see your task appear completed in this format"},{"lineNumber":60,"author":{"gitId":"euzintan"},"content":"![Image](done.png)"},{"lineNumber":61,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":62,"author":{"gitId":"euzintan"},"content":"That\u0027s it for the Quickstart. You can refer to the Features sections below for everything Eu Zin\u0027s Duke can do."},{"lineNumber":63,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":64,"author":{"gitId":"euzintan"},"content":"---"},{"lineNumber":65,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":66,"author":{"gitId":"euzintan"},"content":"# Features"},{"lineNumber":67,"author":{"gitId":"euzintan"},"content":"Eu Zin\u0027s Duke contains easy to use features that are activated by typing commands in the User Input Box and hitting the *Send* Button."},{"lineNumber":68,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":69,"author":{"gitId":"euzintan"},"content":"### List View: `list`"},{"lineNumber":70,"author":{"gitId":"euzintan"},"content":"Shows every task in your list, completed or not."},{"lineNumber":71,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":72,"author":{"gitId":"euzintan"},"content":"Format: `list`"},{"lineNumber":73,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":74,"author":{"gitId":"euzintan"},"content":"### Add todo: `todo`"},{"lineNumber":75,"author":{"gitId":"euzintan"},"content":"Adds a todo to the end of your list."},{"lineNumber":76,"author":{"gitId":"euzintan"},"content":"A todo consists of only a **description**."},{"lineNumber":77,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":78,"author":{"gitId":"euzintan"},"content":"Format: `todo \u003cdescription\u003e`"},{"lineNumber":79,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":80,"author":{"gitId":"euzintan"},"content":"### Add event: `event`"},{"lineNumber":81,"author":{"gitId":"euzintan"},"content":"Adds an event to the end of your list."},{"lineNumber":82,"author":{"gitId":"euzintan"},"content":"An event consists of a **description** and a **timeframe**, which can be input in any string format."},{"lineNumber":83,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":84,"author":{"gitId":"euzintan"},"content":"Format: `event \u003cdescription\u003e /at \u003ctimeframe\u003e`"},{"lineNumber":85,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":86,"author":{"gitId":"euzintan"},"content":"### Add deadline: `deadline`"},{"lineNumber":87,"author":{"gitId":"euzintan"},"content":"Adds a deadline to the end of your list."},{"lineNumber":88,"author":{"gitId":"euzintan"},"content":"A deadline consists of a **description** and a **date-time**. The description can be in any string format."},{"lineNumber":89,"author":{"gitId":"euzintan"},"content":"\u003e **_NOTE:_** **The date-time must be strictly in either of these formats:** DD/MM/YYYY TTTT   *OR*   YYYY/MM/DD TTTT"},{"lineNumber":90,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":91,"author":{"gitId":"euzintan"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdate-time\u003e`"},{"lineNumber":92,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":93,"author":{"gitId":"euzintan"},"content":"### Mark as Complete: `done`"},{"lineNumber":94,"author":{"gitId":"euzintan"},"content":"When you have finished a task, you can mark it as complete. It will be displayed on your list with a tick."},{"lineNumber":95,"author":{"gitId":"euzintan"},"content":"The task to mark as complete is **specified by its index number in integer form**"},{"lineNumber":96,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":97,"author":{"gitId":"euzintan"},"content":"Format: `done \u003cindex\u003e`"},{"lineNumber":98,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":99,"author":{"gitId":"euzintan"},"content":"### Delete task: `delete`"},{"lineNumber":100,"author":{"gitId":"euzintan"},"content":"Removed a task completely from your list."},{"lineNumber":101,"author":{"gitId":"euzintan"},"content":"The task to delete is **specified by its index number in integer form**"},{"lineNumber":102,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":103,"author":{"gitId":"euzintan"},"content":"Format: `delete \u003cindex\u003e`"},{"lineNumber":104,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":105,"author":{"gitId":"euzintan"},"content":"### Set task duration: `duration`"},{"lineNumber":106,"author":{"gitId":"euzintan"},"content":"Set a duration for a particular task in your list."},{"lineNumber":107,"author":{"gitId":"euzintan"},"content":"The task to set duration for is **specified by its index number in integer form**"},{"lineNumber":108,"author":{"gitId":"euzintan"},"content":"The duration can be enter in any string format."},{"lineNumber":109,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":110,"author":{"gitId":"euzintan"},"content":"Format: `duration \u003cindex\u003e \u003cduration\u003e`"},{"lineNumber":111,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":112,"author":{"gitId":"euzintan"},"content":"### Search for a task: `find`"},{"lineNumber":113,"author":{"gitId":"euzintan"},"content":"Find a particular task in your list using a keyword."},{"lineNumber":114,"author":{"gitId":"euzintan"},"content":"The keyword can be in any string format."},{"lineNumber":115,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":116,"author":{"gitId":"euzintan"},"content":"Format: `find \u003ckeyword\u003e`"},{"lineNumber":117,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":118,"author":{"gitId":"euzintan"},"content":"---"},{"lineNumber":119,"author":{"gitId":"euzintan"},"content":"# FAQ"},{"lineNumber":120,"author":{"gitId":"euzintan"},"content":"##### Q. Will my list be saved after I close Eu Zin\u0027s Duke?"},{"lineNumber":121,"author":{"gitId":"euzintan"},"content":"##### A: Yes it will be saved and loaded when you reopen Eu Zin\u0027s Duke."},{"lineNumber":122,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":123,"author":{"gitId":"euzintan"},"content":"---"},{"lineNumber":124,"author":{"gitId":"euzintan"},"content":"# Command Summary"},{"lineNumber":125,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":126,"author":{"gitId":"euzintan"},"content":"| Action | Format |"},{"lineNumber":127,"author":{"gitId":"euzintan"},"content":"| ------ | ------ |"},{"lineNumber":128,"author":{"gitId":"euzintan"},"content":"| Add todo | Format: `todo \u003cdescription\u003e` |"},{"lineNumber":129,"author":{"gitId":"euzintan"},"content":"| Add event | Format: `event \u003cdescription\u003e /at \u003ctimeframe\u003e`|"},{"lineNumber":130,"author":{"gitId":"euzintan"},"content":"| Add deadline | Format: `deadline \u003cdescription\u003e /by \u003cdate-time\u003e` |"},{"lineNumber":131,"author":{"gitId":"euzintan"},"content":"| Mark as Complete | Format: `done \u003cindex\u003e` |"},{"lineNumber":132,"author":{"gitId":"euzintan"},"content":"| Delete Task | Format: `delete \u003cindex\u003e` |"},{"lineNumber":133,"author":{"gitId":"euzintan"},"content":"| Search for Task | Format: `find \u003ckeyword\u003e` |"}],"authorContributionMap":{"euzintan":124,"-":9}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"    LocalDate deadlineDate;"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"    LocalTime deadlineTime;"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"    public Deadline(String userInput) throws deadlineException {"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"        String[] StringArr \u003d handleUserInput(userInput);"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"        this.description \u003d StringArr[0];"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"        deadlineDate \u003d processDate(StringArr[1]);"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"        deadlineTime \u003d processTime(StringArr[1]);"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"    // Constructor for use by Storage.loadFromDisk();"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"    public Deadline(String description, String deadline, boolean isDone) throws deadlineException {"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"        deadlineDate \u003d processDate(deadline);"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"        deadlineTime \u003d processTime(deadline);"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"    private String[] handleUserInput(String userInput) throws deadlineException {"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"        String[] StringArr \u003d userInput.split(\" /by \");"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"        if (StringArr.length !\u003d 2) throw new deadlineException(\"\\\"1.Please provide a deadline is the following \" +"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"                \"format: \u003cdescription /by YYYY/MM/DD TTTT\u003e or \u003cdescription /by DD/YY/MMMM TTTT\u003e\");"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"        StringArr[0] \u003d StringArr[0].replace(\"deadline \", \"\");"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"        if (StringArr[0].equals(\"\")) throw new deadlineException(\"Please give a description\");"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"        return StringArr;"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"    private LocalDate processDate(String deadline) throws deadlineException {"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"        String[] dateTimeSplit \u003d deadline.split(\" \");"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"        String[] dateSplit \u003d dateTimeSplit[0].split(\"/\");"},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"        if (dateTimeSplit.length !\u003d 2 || dateSplit.length !\u003d 3)"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"            throw new deadlineException(\"3.Please provide a deadline is the following \" +"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"                    \"format: \u003cdescription /by YYYY/MM/DD\u003e or \u003cdescription /by DD/YY/MMMM\u003e\");"},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"        if (dateSplit[0].length() \u003d\u003d 4) {"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"            return LocalDate.of(Integer.parseInt(dateSplit[0]), Integer.parseInt(dateSplit[1]), Integer.parseInt(dateSplit[2]));"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"            return LocalDate.of(Integer.parseInt(dateSplit[2]), Integer.parseInt(dateSplit[1]), Integer.parseInt(dateSplit[0]));"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"    private LocalTime processTime(String deadline) {"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"        String[] dateTimeSplit \u003d deadline.split(\" \");"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":"        return LocalTime.of(Integer.parseInt(dateTimeSplit[1].substring(0, 2)), Integer.parseInt(dateTimeSplit[1].substring(2)));"},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":"    public String getDescription() {"},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":"        return super.getDescription() + \" ~ \" + deadlineDate.toString().replaceAll(\"-\", \"/\") + \" \" + deadlineTime.toString().replace(\":\", \"\");"},{"lineNumber":56,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":58,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"euzintan"},"content":"    public String getStatusIcon() {"},{"lineNumber":60,"author":{"gitId":"euzintan"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"},{"lineNumber":61,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":63,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"euzintan"},"content":"        String returnString \u003d \"\";"},{"lineNumber":66,"author":{"gitId":"euzintan"},"content":"        returnString +\u003d \"[D]\" + super.getStatusIcon() + this.description + \" (by:\" + deadlineDate.toString() + \" \" + deadlineTime.toString() + \")\";"},{"lineNumber":67,"author":{"gitId":"euzintan"},"content":"        if (!duration.equals(\"\")) returnString +\u003d \" (duration: \" + this.duration + \")\";"},{"lineNumber":68,"author":{"gitId":"euzintan"},"content":"        return returnString;"},{"lineNumber":69,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":70}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"import javafx.scene.text.Text;"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":" */"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":"        return new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"euzintan"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"euzintan"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"euzintan"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":60}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"    private final Storage storage;"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    private final Parser parser;"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"    private final Ui ui;"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"    public Duke() throws IOException, ToDoException, eventException, deadlineException {"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"        Storage dukeStorage \u003d Storage.initialiseStorage();"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"        this.storage \u003d dukeStorage;"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"     * Replace this stub with your completed method."},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"    String getResponse(String userInput) throws IOException{"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"        TaskList taskList \u003d this.storage.taskList;"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"            if (userInput.equals(\"bye\")) {"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"                return ui.showByeMessage();"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"            } else if (userInput.equals(\"list\")) {"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"                return ui.showList(storage.taskList);"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"            } else if (userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\")) {"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"                return parser.processAddTaskInput(userInput, taskList, storage, ui);"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"                TaskList originalTaskList \u003d TaskList.copy(taskList);"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"                parser.processOtherActionInput(userInput, taskList, ui, storage);"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"                return ui.showOtherActionMessage(userInput, originalTaskList);"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"        } catch (DukeException e) {"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"            return e.toString();"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"euzintan":35,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class DukeException extends Throwable {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"    String message \u003d \"\";"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    public DukeException() {};"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"        this.message \u003d message;"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"        if (!message.equals(\"\")) return message;"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"        else return \"Duke is too dumb, Duke dunno what you mean\";"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":14}},{"path":"src/main/java/DurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class DurationException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"        return \"Please provide a duration to set in the following format: duration \u003cindex of task in list\u003e \u003cduration to set, e.g 2 hours\u003e\";"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    String timeFrame;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    public Event(String userInput) throws eventException {"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"        String[] handledUserInput \u003d handleUserInput(userInput);"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"        this.description \u003d handledUserInput[0];"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"        this.timeFrame \u003d handledUserInput[1];"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"    public Event(String description, String timeFrame, boolean isDone) throws eventException {"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"        this.timeFrame \u003d timeFrame;"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"    private String[] handleUserInput(String userInput) throws eventException{"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"        eventException properFormatAdvisoryException \u003d new eventException(\"Please provide event in the following \" +"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"                \"format: \u003cdescription /at time-frame\u003e\");"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"        if (userInput.equals(\"event\")) throw properFormatAdvisoryException;"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"        String[] StringArr \u003d userInput.split(\" /at\");"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"        if (StringArr.length !\u003d 2) throw properFormatAdvisoryException;"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"        StringArr[0] \u003d StringArr[0].replace(\"event \", \"\");"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"        return StringArr;"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"    public String getDescription() {"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"        return super.getDescription() + \" ~ \" + this.timeFrame;"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"        String returnString \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"        returnString +\u003d \"[E]\" + getStatusIcon() + this.description + \" (at:\" + this.timeFrame + \")\";"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"        if (!duration.equals(\"\")) returnString +\u003d \" (duration: \" + this.duration + \")\";"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"        return returnString;"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":45}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"    public Main() throws IOException, ToDoException, eventException, deadlineException {"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":" */"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"        duke \u003d d;"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"    private void handleUserInput() throws IOException {"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":"        userInput.clear();"},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":52}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"     * Returns appropriate task after processing userInput. Calls on ui to give user a response"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"     * @param userInput"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"     * @return Task to be used by Duke instance"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"     * @throws ToDoException"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"     * @throws deadlineException"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"     * @throws eventException"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"    public String processAddTaskInput(String userInput, TaskList taskList, Storage storage, Ui ui) throws DukeException, IOException {"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"        String taskType \u003d userInput.split(\" \")[0];"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"        Task thisTask \u003d null;"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"        switch (taskType) {"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"            case \"todo\":"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"                thisTask \u003d new Task(userInput.replace(\"todo \", \"\"));"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"                taskList.addTask(thisTask, storage);"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"                return ui.showAddTaskMessage(thisTask, taskList);"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"            case \"deadline\":"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"                thisTask \u003d new Deadline(userInput);"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"                taskList.addTask(thisTask, storage);"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"                return ui.showAddTaskMessage(thisTask, taskList);"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"            case \"event\":"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"                thisTask \u003d new Event(userInput);"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"                taskList.addTask(thisTask, storage);"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"                return ui.showAddTaskMessage(thisTask, taskList);"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"            default:"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"                throw new DukeException();"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"     * Processes userInput and calls on ui to give appropriate response to the user"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"     * @param userInput"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"     * @param taskList"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"     * @throws IOException"},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"     * @throws DukeException"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"    public String processOtherActionInput(String userInput, TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"        String actionType \u003d splitUserInput[0];"},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":"        if (splitUserInput[1].equals(\"\")) throw new DukeException(\"Please enter an index/duration\");"},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"        switch (actionType) {"},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"            case \"done\":"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"                int doneIndex \u003d Integer.parseInt(userInput.replace(\"done \", \"\"));"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":"                assert doneIndex \u003e\u003d 1 : \"Index must be a positive value\";"},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":"                taskList.taskCompleted(doneIndex, storage);"},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":"                return ui.showOtherActionMessage(userInput, taskList);"},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":"            case \"delete\":"},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":"                int indexDeleted \u003d Integer.parseInt(userInput.replace(\"delete \", \"\"));"},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":"                TaskList duplicatedTaskList \u003d TaskList.copy(taskList);"},{"lineNumber":56,"author":{"gitId":"euzintan"},"content":"                assert indexDeleted \u003e\u003d 1 : \"Index must be a positive value\";"},{"lineNumber":57,"author":{"gitId":"euzintan"},"content":"                taskList.deleteTask(indexDeleted, storage);"},{"lineNumber":58,"author":{"gitId":"euzintan"},"content":"                return ui.showOtherActionMessage(userInput, duplicatedTaskList);"},{"lineNumber":59,"author":{"gitId":"euzintan"},"content":"            case \"find\":"},{"lineNumber":60,"author":{"gitId":"euzintan"},"content":"                return ui.showOtherActionMessage(userInput, taskList);"},{"lineNumber":61,"author":{"gitId":"euzintan"},"content":"            case \"duration\":"},{"lineNumber":62,"author":{"gitId":"euzintan"},"content":"                if (userInput.equals(\"duration\")) throw new DurationException();"},{"lineNumber":63,"author":{"gitId":"euzintan"},"content":"                int indexSettingDuration \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":64,"author":{"gitId":"euzintan"},"content":"                assert indexSettingDuration \u003e\u003d 1 : \"Index must be a positive value\";"},{"lineNumber":65,"author":{"gitId":"euzintan"},"content":"                taskList.setDuration(userInput, storage);"},{"lineNumber":66,"author":{"gitId":"euzintan"},"content":"                return ui.showOtherActionMessage(userInput, taskList);"},{"lineNumber":67,"author":{"gitId":"euzintan"},"content":"            default:"},{"lineNumber":68,"author":{"gitId":"euzintan"},"content":"                throw new DukeException();"},{"lineNumber":69,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":71}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import java.io.FileWriter;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"import java.io.PrintWriter;"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"    public TaskList taskList;"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"    static private final String HOME \u003d System.getProperty(\"user.home\");"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"    static private final java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"data\");"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"    static private final java.nio.file.Path FILE \u003d java.nio.file.Paths.get(HOME, \"data\", \"iPStorage.txt\");"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"    public static Storage initialiseStorage() throws IOException, ToDoException, eventException, deadlineException {"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"        Storage returnStorage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"        returnStorage.taskList \u003d TaskList.retrieveTaskList(FILE);"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"        returnStorage.loadFromDisk();"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"        return returnStorage;"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"     * Called when Duke is initialised"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"     * @throws IOException"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"    public void loadFromDisk() throws IOException, ToDoException, eventException, deadlineException {"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"        taskList \u003d TaskList.retrieveTaskList(FILE);"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"     * Writes a specific task to the hard disc. Called by saveToDisk() method"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"     * @param task"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"     * @param printWriter"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"     * @throws IOException"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"    public void writeTask(Task task, PrintWriter printWriter) throws IOException {"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"        Class taskType \u003d task.getClass();"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"        if (taskType.equals(Event.class)) {"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"            printWriter.print(\"E ~ \");"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"        } else if (taskType.equals(Deadline.class)) {"},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"            printWriter.print(\"D ~ \");"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"            printWriter.print(\"T ~ \");"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":"        printWriter.print(task.isDone ? \"1 ~ \" : \"0 ~ \");"},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"        printWriter.print(task.getDescription());"},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"        printWriter.print(\" ~ \" + task.getDuration());"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"        printWriter.print(\"\\n\");"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":"     * Called every time a change is made to the list. Updates the data stored on hard disc"},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":"     * @throws IOException"},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"euzintan"},"content":"    public void saveToDisk() throws IOException {"},{"lineNumber":57,"author":{"gitId":"euzintan"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(PATH);"},{"lineNumber":58,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":59,"author":{"gitId":"euzintan"},"content":"        if (!directoryExists) {"},{"lineNumber":60,"author":{"gitId":"euzintan"},"content":"            Files.createDirectory(PATH);"},{"lineNumber":61,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":63,"author":{"gitId":"euzintan"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE.toFile());"},{"lineNumber":64,"author":{"gitId":"euzintan"},"content":"        PrintWriter printWriter \u003d new PrintWriter(fileWriter);"},{"lineNumber":65,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":66,"author":{"gitId":"euzintan"},"content":"        for (Task task : taskList.getList()) {"},{"lineNumber":67,"author":{"gitId":"euzintan"},"content":"            writeTask(task, printWriter);"},{"lineNumber":68,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"euzintan"},"content":"        printWriter.close();"},{"lineNumber":70,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":71}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    protected String duration \u003d \"\";"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    public Task() { }"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"    public Task(String description, boolean isDone) throws ToDoException {"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"        if (description.equals(\"\")) throw new ToDoException();"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"    public Task(String description, boolean isDone, String duration) {"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"        this.duration \u003d duration;"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"    public String getDescription() {"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"        return this.description;"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"    public String getStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"    public String toString(){"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"        String returnString \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"        returnString +\u003d \"[T]\" + this.getStatusIcon() + this.description;"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"        if (!duration.equals(\"\")) returnString +\u003d \" (duration: \" + this.duration + \")\";"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"        return returnString;"},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"    public void setDuration(String duration) {"},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"        this.duration \u003d duration;"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"    public String getDuration() {"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"        return duration;"},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":47}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import javax.lang.model.type.ArrayType;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"import java.util.Iterator;"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"    private TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"    private void add(Task task) {"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"        this.taskList.add(task);"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"     * Called by Storage when Duke is initialised. Looks for the on hard disc storage of the list. If found, retrieves it to be used by Duke"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"     * Else the text file is created to be used for future storing on hard disc"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"     * @param File"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"     * @return"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"     * @throws IOException"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"    public static TaskList retrieveTaskList(Path File) throws IOException, ToDoException, eventException, deadlineException {"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"        TaskList returnTaskList \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"        if (java.nio.file.Files.exists(File)) {"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"            Scanner scanner \u003d new Scanner(File);"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"                Task taskAdded \u003d null;"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"                String taskData \u003d scanner.nextLine();"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"                String[] taskDataDivided \u003d taskData.split(\" ~ \");"},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"                boolean isDone \u003d taskDataDivided[1].equals(\"1\");"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"                switch (taskDataDivided[0]) {"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"                    case \"E\":"},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"                        taskAdded \u003d new Event(taskDataDivided[2], taskDataDivided[3], isDone);"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"                        if (taskDataDivided.length \u003e 4) taskAdded.setDuration(taskDataDivided[4]);"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"                        returnTaskList.add(taskAdded);"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"                        break;"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"                    case \"D\":"},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":"                        taskAdded \u003d new Deadline(taskDataDivided[2], taskDataDivided[3], isDone);"},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"                        if (taskDataDivided.length \u003e 4) taskAdded.setDuration(taskDataDivided[4]);"},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"                        returnTaskList.add(taskAdded);"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"                        break;"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":"                    case \"T\":"},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":"                        taskAdded \u003d new Task(taskDataDivided[2], isDone);"},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":"                        if (taskDataDivided.length \u003e 3) taskAdded.setDuration(taskDataDivided[3]);"},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":"                        returnTaskList.add(taskAdded);"},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":"                        break;"},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"euzintan"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"euzintan"},"content":"        return returnTaskList;"},{"lineNumber":59,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":61,"author":{"gitId":"euzintan"},"content":"    public static TaskList copy(TaskList copiedTaskList) {"},{"lineNumber":62,"author":{"gitId":"euzintan"},"content":"        return new TaskList(copiedTaskList.getList());"},{"lineNumber":63,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":65,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"euzintan"},"content":"     * Getter to return a copy of the ArrayList"},{"lineNumber":67,"author":{"gitId":"euzintan"},"content":"     * @return copy of ArrayList"},{"lineNumber":68,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"euzintan"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":70,"author":{"gitId":"euzintan"},"content":"        ArrayList\u003cTask\u003e returnTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":71,"author":{"gitId":"euzintan"},"content":"        for (Task task : taskList) returnTaskList.add(task);"},{"lineNumber":72,"author":{"gitId":"euzintan"},"content":"        return returnTaskList;"},{"lineNumber":73,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":75,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"euzintan"},"content":"     * Deletes task specific to the index"},{"lineNumber":77,"author":{"gitId":"euzintan"},"content":"     * @param index"},{"lineNumber":78,"author":{"gitId":"euzintan"},"content":"     * @throws deleteException"},{"lineNumber":79,"author":{"gitId":"euzintan"},"content":"     * @throws IOException"},{"lineNumber":80,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"euzintan"},"content":"    public void deleteTask(int index, Storage storage) throws deleteException, IOException {"},{"lineNumber":82,"author":{"gitId":"euzintan"},"content":"        if (index \u003c\u003d taskList.size()) {"},{"lineNumber":83,"author":{"gitId":"euzintan"},"content":"            taskList.remove(index - 1);"},{"lineNumber":84,"author":{"gitId":"euzintan"},"content":"            storage.saveToDisk();"},{"lineNumber":85,"author":{"gitId":"euzintan"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"euzintan"},"content":"            throw new deleteException();"},{"lineNumber":87,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":90,"author":{"gitId":"euzintan"},"content":"    public void setDuration(String userInput, Storage storage) throws IOException {"},{"lineNumber":91,"author":{"gitId":"euzintan"},"content":"        String[] splitBySpaces \u003d userInput.split(\" \");"},{"lineNumber":92,"author":{"gitId":"euzintan"},"content":"        int indexSettingDuration \u003d Integer.parseInt(splitBySpaces[1]);"},{"lineNumber":93,"author":{"gitId":"euzintan"},"content":"        String durationSet \u003d splitBySpaces[2];"},{"lineNumber":94,"author":{"gitId":"euzintan"},"content":"        Task taskSettingDurationFor \u003d taskList.get(indexSettingDuration-1);"},{"lineNumber":95,"author":{"gitId":"euzintan"},"content":"        taskSettingDurationFor.setDuration(durationSet);"},{"lineNumber":96,"author":{"gitId":"euzintan"},"content":"        storage.saveToDisk();"},{"lineNumber":97,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":99,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"euzintan"},"content":"     * Add Task given to the list"},{"lineNumber":101,"author":{"gitId":"euzintan"},"content":"     * @param task"},{"lineNumber":102,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"euzintan"},"content":"    public void addTask(Task task, Storage storage) throws IOException {"},{"lineNumber":104,"author":{"gitId":"euzintan"},"content":"        taskList.add(task);"},{"lineNumber":105,"author":{"gitId":"euzintan"},"content":"        storage.saveToDisk();"},{"lineNumber":106,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":108,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"euzintan"},"content":"     * Marks task with given index as completed"},{"lineNumber":110,"author":{"gitId":"euzintan"},"content":"     * @param index"},{"lineNumber":111,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"euzintan"},"content":"    public void taskCompleted(int index, Storage storage) throws IOException {"},{"lineNumber":113,"author":{"gitId":"euzintan"},"content":"        taskList.get(index - 1).isDone \u003d true;"},{"lineNumber":114,"author":{"gitId":"euzintan"},"content":"        storage.saveToDisk();"},{"lineNumber":115,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":117,"author":{"gitId":"euzintan"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"euzintan"},"content":"     * getter for the size of the ArrayList"},{"lineNumber":119,"author":{"gitId":"euzintan"},"content":"     * @return"},{"lineNumber":120,"author":{"gitId":"euzintan"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"euzintan"},"content":"    public int getSize() {"},{"lineNumber":122,"author":{"gitId":"euzintan"},"content":"        return taskList.size();"},{"lineNumber":123,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":125,"author":{"gitId":"euzintan"},"content":"    public ArrayList\u003cTask\u003e searchFor(String searchString) {"},{"lineNumber":126,"author":{"gitId":"euzintan"},"content":"        ArrayList\u003cTask\u003e returnArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":127,"author":{"gitId":"euzintan"},"content":"        for (Task task : taskList) {"},{"lineNumber":128,"author":{"gitId":"euzintan"},"content":"            if (task.getDescription().contains(searchString)) returnArrayList.add(task);"},{"lineNumber":129,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"euzintan"},"content":"        return returnArrayList;"},{"lineNumber":131,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"euzintan"},"content":"    "},{"lineNumber":133,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":134,"author":{"gitId":"euzintan"},"content":"    public String printTaskList() {"},{"lineNumber":135,"author":{"gitId":"euzintan"},"content":"        if (this.taskList.size() \u003d\u003d 0) {"},{"lineNumber":136,"author":{"gitId":"euzintan"},"content":"            return \"You currently have nothing on your list\";"},{"lineNumber":137,"author":{"gitId":"euzintan"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"euzintan"},"content":"            String returnString \u003d \"Here\u0027s what you have on your list\";"},{"lineNumber":139,"author":{"gitId":"euzintan"},"content":"            int counter \u003d 0;"},{"lineNumber":140,"author":{"gitId":"euzintan"},"content":"            Iterator\u003cTask\u003e taskIterator \u003d this.taskList.iterator();"},{"lineNumber":141,"author":{"gitId":"euzintan"},"content":"            while (taskIterator.hasNext()) {"},{"lineNumber":142,"author":{"gitId":"euzintan"},"content":"                Task thisTask \u003d taskIterator.next();"},{"lineNumber":143,"author":{"gitId":"euzintan"},"content":"                returnString +\u003d \"\\n\" + (counter + 1) + \". \" + thisTask.toString();"},{"lineNumber":144,"author":{"gitId":"euzintan"},"content":"                counter++;"},{"lineNumber":145,"author":{"gitId":"euzintan"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"euzintan"},"content":"            return returnString;"},{"lineNumber":147,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":149}},{"path":"src/main/java/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class ToDoException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"        return \"what todo gimme smth to write pls\";"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":7}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"    public void showWelcomeMessage() {"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"        System.out.println(LOGO + \"\\nHello im Eu Zin\u0027s Duke, he spent thursday afternoon creating me cuz he forgot abt the iP\");"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"    public String showAddTaskMessage(Task thisTask, TaskList taskList) {"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"        return \"I\u0027ve added\\n\" + thisTask.toString() + \" | to your list. \\nNow got \" + (taskList.getSize()) + \" task in the list\\n\";"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"    public String showOtherActionMessage(String userInput, TaskList taskList) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"        String processedInput \u003d userInput.split(\" \")[0];"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"        switch (processedInput) {"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"            case \"done\" :"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"                int doneIndex \u003d Integer.parseInt(userInput.substring(5));"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"                return \"ok sure good job i guess\\n\" + taskList.getList().get(doneIndex-1) + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"            case \"delete\" :"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"                int indexDeleted \u003d Integer.parseInt(userInput.replace(\"delete \", \"\"));"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"                return \"ok deleted this task alr:\\n\" + taskList.getList().get(indexDeleted-1) + \"\\n\" + \"Now you left \" + (taskList.getSize()-1)"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"                        + \" task(s)\";"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"            case \"find\" :"},{"lineNumber":29,"author":{"gitId":"euzintan"},"content":"                ArrayList\u003cTask\u003e taskArrayList \u003d taskList.searchFor(userInput.split(\" \")[1]);"},{"lineNumber":30,"author":{"gitId":"euzintan"},"content":"                if (taskArrayList.size() \u003d\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"euzintan"},"content":"                    return \"We were unable to find your task\";"},{"lineNumber":32,"author":{"gitId":"euzintan"},"content":"                } else {"},{"lineNumber":33,"author":{"gitId":"euzintan"},"content":"                    String returnString \u003d \"Here is what we found \\n\";"},{"lineNumber":34,"author":{"gitId":"euzintan"},"content":"                    for (Task task : taskArrayList) {"},{"lineNumber":35,"author":{"gitId":"euzintan"},"content":"                        returnString +\u003d task.toString() + \"\\n\";"},{"lineNumber":36,"author":{"gitId":"euzintan"},"content":"                    }"},{"lineNumber":37,"author":{"gitId":"euzintan"},"content":"                    return returnString;"},{"lineNumber":38,"author":{"gitId":"euzintan"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"euzintan"},"content":"            case \"duration\" :"},{"lineNumber":40,"author":{"gitId":"euzintan"},"content":"                int indexSettingDuration \u003d Integer.parseInt(userInput.split(\" \")[1]);"},{"lineNumber":41,"author":{"gitId":"euzintan"},"content":"                return \"duration has been set for:\\n\" + taskList.getList().get(indexSettingDuration-1);"},{"lineNumber":42,"author":{"gitId":"euzintan"},"content":"            default :"},{"lineNumber":43,"author":{"gitId":"euzintan"},"content":"                throw new DukeException();"},{"lineNumber":44,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":47,"author":{"gitId":"euzintan"},"content":"    public String showByeMessage() {"},{"lineNumber":48,"author":{"gitId":"euzintan"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":49,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":51,"author":{"gitId":"euzintan"},"content":"    public String showList(TaskList taskList) {"},{"lineNumber":52,"author":{"gitId":"euzintan"},"content":"        return taskList.printTaskList();"},{"lineNumber":53,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":55,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":55}},{"path":"src/main/java/deadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class deadlineException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"    public deadlineException(String message) {"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"        if (!message.equals(\"\")) return message;"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"        else return \"what deadline gimme smth to write pls\";"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":11}},{"path":"src/main/java/deleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class deleteException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"        return \"delete whaaaaaaaaat\";"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":5}},{"path":"src/main/java/eventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class eventException extends  DukeException {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    public eventException(String message) {"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"        if (!message.equals(\"\")) return message;"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"        else return \"what event gimme smth to write pls\";"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":12}},{"path":"src/main/java/searchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"public class searchException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"    @Override"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"    public String toString() {"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"        return \"nothing to search\";"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":7}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"2.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"false\" /\u003e"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"        \u003cInsets bottom\u003d\"0.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"0.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"euzintan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"            \u003cFont name\u003d\"Book Antiqua\" size\u003d\"12.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"652.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"euzintan":23}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"import org.junit.jupiter.api.DynamicTest;"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":6,"author":{"gitId":"euzintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":8,"author":{"gitId":"euzintan"},"content":"public class DukeTest {"},{"lineNumber":9,"author":{"gitId":"euzintan"},"content":"    Parser parser \u003d new Parser();"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":11,"author":{"gitId":"euzintan"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"euzintan"},"content":"    public void invalidUserInputTest() throws IOException, DukeException {"},{"lineNumber":13,"author":{"gitId":"euzintan"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"euzintan"},"content":"            parser.processOtherActionInput(\"anyhow\", new TaskList(), new Ui());"},{"lineNumber":15,"author":{"gitId":"euzintan"},"content":"        } catch (DukeException e) {"},{"lineNumber":16,"author":{"gitId":"euzintan"},"content":"            assertEquals(e.toString(), \"Duke is too dumb, Duke dunno what you mean\");"},{"lineNumber":17,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"euzintan"},"content":""},{"lineNumber":20,"author":{"gitId":"euzintan"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"euzintan"},"content":"    public void deadlineWithoutDescriptionTest() throws ToDoException, eventException {"},{"lineNumber":22,"author":{"gitId":"euzintan"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"euzintan"},"content":"            parser.processAddTaskInput(\"deadline\", new TaskList(), new Ui());"},{"lineNumber":24,"author":{"gitId":"euzintan"},"content":"        } catch (deadlineException e) {"},{"lineNumber":25,"author":{"gitId":"euzintan"},"content":"            assertEquals(e.toString(), \"what deadline gimme smth to write pls\");"},{"lineNumber":26,"author":{"gitId":"euzintan"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"euzintan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"euzintan"},"content":"}"}],"authorContributionMap":{"euzintan":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"euzintan"},"content":"todo bring dogs for walk"},{"lineNumber":2,"author":{"gitId":"euzintan"},"content":"event birthday party /at tonight"},{"lineNumber":3,"author":{"gitId":"euzintan"},"content":"deadline finish tutorial /by today"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"euzintan"},"content":"list"}],"authorContributionMap":{"euzintan":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"euzintan"},"content":"if not exist C:\\Users\\euzun\\IdeaProjects\\ip\\bin mkdir C:\\Users\\euzun\\IdeaProjects\\ip\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"euzintan"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"euzintan"},"content":"java -classpath C:\\Users\\euzun\\IdeaProjects\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"euzintan":3,"-":18}}]
