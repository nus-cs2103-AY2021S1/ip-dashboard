[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 5,
      "-": 45
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "T | 0 | readbook"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "T | 1 | meeting"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "D | 0 | return book | 2020-08-26"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "E | 1 | meeting2 | 2020-08-24"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * Main class of Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs the Duke initialized with the path of the target file to store and read."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param filePath the path of the target file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            ui.showError(e.getMsg());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Runs the Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                String[] commands \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                if (commands[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                tasks.runCommand(commands, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                ui.showError(e.getMsg());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Execute the program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param args the argument Array of String."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 57,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A class deals with making sense of the user command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Parses the full command to a Array of String."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param command the full command from user\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return a Array of String parsed from the full command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public static String[] parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String[] commands \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        if (commands.length \u003e 1 \u0026\u0026 commands[1] !\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            commands[1] \u003d commands[1].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String[] temp;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        commands \u003d Arrays.copyOf(commands, 3);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String key;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        switch (commands[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return commands;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (!isNumeric(commands[1])) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The argument of done command is not a number.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return commands;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (!isNumeric(commands[1])) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The argument of delete command is not a number.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return commands;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (commands[1] \u003d\u003d null || commands[1].isBlank()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return commands;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            key \u003d \" /by \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (commands[1].isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (!commands[1].contains(key)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a deadline must contain /by keywords\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            temp \u003d commands[1].split(key);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            commands[1] \u003d temp[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            commands[2] \u003d temp[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return commands;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            key \u003d \" /at \";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (commands[1].isBlank()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (!commands[1].contains(key)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a event must contain /at keywords\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            temp \u003d commands[1].split(key);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            commands[1] \u003d temp[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            commands[2] \u003d temp[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return commands;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        default: //meaningless command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private static boolean isNumeric(String str) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        for (int i \u003d str.length(); --i \u003e\u003d 0; ) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (!Character.isDigit(str.charAt(i))) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 87
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs a new Storage class initialized with the path of the target file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param filePath the path of the file to load and store."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Saves the list of tasks to the target file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @throws DukeException thrown if the file or folder does not exist or other IOException happens."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void store(List\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        File outFile;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        Writer out;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            outFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (!outFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The folder does not exist.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            } else if (!outFile.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The file does not exist.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            out \u003d new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outFile), \"utf-8\"), 10240);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                out.write("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                        task.toStore() + \"\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            out.flush();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! There is an IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Loads the list of task from the target file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return a List of Task loaded from the target file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @throws DukeException thrown if the file or folder does not exist or other IOException happens."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        FileReader fileReader;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The folder does not exist.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            } else if (!file.exists()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The file does not exist.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            fileReader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                if (!line.isBlank()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                    taskList.add(parseTask(line));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! There is an IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private Task parseTask(String line) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String[] commands \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        boolean isDone \u003d commands[1].equals(\"1\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        switch (commands[0]) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"T\": {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return new Todo(isDone, commands[2]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"D\": {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return new Deadline(isDone, commands[2], commands[3]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return new Event(isDone, commands[2], commands[3]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 116
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A class to deal with the interactions with users."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected String logo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Default constructor of Ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.line \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints welcome."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(line"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + logo"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"\\n Hello, I\u0027m Duke \\n What can I do for you?\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Reads the full command from user\u0027s input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return String of the next input line."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints the error message of a DukeException."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param eMsg the error message of the DukeException."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void showError(String eMsg) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(line"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + eMsg + \"\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private void printLine() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints out the list of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void printList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            System.out.println(\" Oops, no task YET. Try to add one!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            System.out.println(\" \" + (i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints out the Done command executed on a certain task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param task the task to be done."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void printDone(Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(line"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \" Nice! I\u0027ve marked this task as done: \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"\\n   \" + task + \"\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + line);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints out the Delete command executed on a certain task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param task the task to be deleted."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param size the size of the task list after deletion."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void printDelete(Task task, int size) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(line"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \" Noted. I\u0027ve removed this task: \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"\\n   \" + task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"\\n Now you have \" + size + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints out the Add command."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param size the size of the task list after addition."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void printAdd(Task task, int size) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(line"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(\"   \" + task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \"\\n Now you have \" + size + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + line);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints out the list of tasks which was found by find command."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param findResult the list of tasks which was found."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void printFind(List\u003cTask\u003e findResult) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        if (findResult.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            System.out.println(\" No task founded. Try to add one!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        for (int i \u003d 0; i \u003c findResult.size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            System.out.println(\" \" + (i + 1) + \". \" + findResult.get(i));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Says good bye to user."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        System.out.println(line + \" Bye. Hope to see you again soon!\\n\" + line);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 149
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A special exception class that Duke could throw."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs a new Duke exception with the error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param msg the error message of this exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the message of this Duke exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the error message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String getMsg() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return this.msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A kind of tasks that need to be done before a specific date/time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Default constructor for Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            byDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            byDate \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs a Deadline task assigned the done status."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param isDone      the done status of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Deadline(boolean isDone, String description, String by) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this(description, by);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the String to be store in files."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String to be store in files."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String div \u003d \" | \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return \"D\" + div + (isDone ? \"1\" : \"0\") + div + description + div + by;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the String represents the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String represents the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + (byDate \u003d\u003d null ? by : byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A kind of tasks that start at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected LocalDate atDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Default constructor for Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            atDate \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            atDate \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs a Event task assigned the done status."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param isDone      the done status of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Event(boolean isDone, String description, String at) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this(description, at);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the String to be store in files."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String to be store in files."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String div \u003d \" | \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return \"E\" + div + (isDone ? \"1\" : \"0\") + div + description + div + at;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the String represents the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String represents the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + (atDate \u003d\u003d null ? at : atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * Abstract Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Gets the status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return an icon to indicate the status of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Marks the the status of the task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Abstracts method for subclass to implement to return a String which to be store in files."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String to be store in files."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public abstract String toStore();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the String represents the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String represents the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 52
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A class contains the task list and deal with the command run on the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs a new TaskList containing a empty task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs a new TaskList containing a given task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param taskList the given List of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Executes the command on the list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param commands an Array of String which contains command and its arguments."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param ui       the Ui to deal with the interactions with users."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param storage  the Storage to deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @throws DukeException thrown if the storage process goes wrong."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void runCommand(String[] commands, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        switch (commands[0]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            printList(ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            find(ui, commands[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            markAsDone(ui, Integer.parseInt(commands[1]) - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            storage.store(taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            delete(ui, Integer.parseInt(commands[1]) - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            storage.store(taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            addTask(ui, commands[0], commands[1], commands[2]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            storage.store(taskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Prints the list of task through the Ui."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param ui the Ui to deal with the interactions with users."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void printList(Ui ui) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui.printList(this.taskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Marks done the task in the list of task of a certain index and print through the Ui."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param ui    the Ui to deal with the interactions with users."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param index the index of the task in the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void markAsDone(Ui ui, int index) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui.printDone(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Deletes the task in the list of task of a certain index and print through the Ui."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param ui    the Ui to deal with the interactions with users."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param index the index of the task in the task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void delete(Ui ui, int index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui.printDelete(task, taskList.size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Finds the tasks containing the given keyword in their description and print through the Ui."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param ui  the Ui to deal with the interactions with users."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param key the keyword used to find task in task list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void find(Ui ui, String key) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            if (task.description.contains(key)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui.printFind(result);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Adds a new task of a certain type with description and time if needed,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * and print through the Ui."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param ui          the Ui to deal with the interactions with users."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param type        the String denote the type of the task."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the String denote the String of the task."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param time        the String denote the time of the task, or null."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void addTask(Ui ui, String type, String description, String time) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            task \u003d null;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        ui.printAdd(task, taskList.size());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 151
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " * A kind of tasks without any date/time attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Default constructor for Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Constructs a Todo task assigned the done status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param isDone      the done status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the String to be store in files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String to be store in files."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        String div \u003d \" | \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return \"T\" + div + (isDone ? \"1\" : \"0\") + div + description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * Returns the String represents the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     * @return the String represents the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 49
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void testByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            String[] actual \u003d Parser.parse(\"bye    \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            assertEquals(\"bye\", actual[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void testDoneCommand_notNumber_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            Parser.parse(\"done hah\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            assertEquals(\" ☹ OOPS!!! The argument of done command is not a number.\", e.msg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    void testDoneCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            String[] expected \u003d {\"done\", \"3\", null};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            String[] actual \u003d Parser.parse(\"done 3\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            assertArrayEquals(expected, actual);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 41
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void testStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        assertEquals(\"\\u2713\", new Todo(true, \"\").getStatusIcon());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        assertEquals(\"\\u2718\", new Todo(false, \"\").getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        Task task \u003d new Todo(false, \"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatusIcon());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "event project meeting /at Mon 4-6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "done hey"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "delete hey"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "javac  -cp ..\\src\\ -Xlint:none -encoding UTF-8 -d ..\\bin ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "pause"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 4,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauw1010"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Nauw1010": 2,
      "-": 36
    }
  }
]
