[
  {
    "path": "src/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private boolean hasCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        hasCommand \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void initialise() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            hasCommand \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            ui.printGreeting();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            Storage.setTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            while (hasCommand) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    String[] input \u003d ui.getInput(sc);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    command.execute(ui, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    hasCommand \u003d command.hasCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    ui.printExceptionMessage(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            Storage.write(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            ui.printError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            ui.printExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        new Duke().initialise();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class AddDeadlineCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final Deadline deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public AddDeadlineCommand(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        deadline \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        ui.printAddSuccess(deadline, tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 26
    }
  },
  {
    "path": "src/main/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class AddEventCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final Event event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public AddEventCommand(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        event \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        ui.printAddSuccess(event, tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 26
    }
  },
  {
    "path": "src/main/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class AddTodoCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final Todo todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        ui.printAddSuccess(todo, tasks.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 24
    }
  },
  {
    "path": "src/main/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) throws InvalidTaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 12
    }
  },
  {
    "path": "src/main/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final int taskNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) throws InvalidTaskException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e tasks.size())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new InvalidTaskException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        Task removed \u003d tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        ui.printRemoveSuccess(removed, tasks.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 27
    }
  },
  {
    "path": "src/main/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final int taskNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) throws InvalidTaskException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e tasks.size())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new InvalidTaskException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        Task task \u003d tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        ui.printDoneSuccess(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 28
    }
  },
  {
    "path": "src/main/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 15
    }
  },
  {
    "path": "src/main/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void execute(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        ui.printTaskList(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 16
    }
  },
  {
    "path": "src/main/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 7
    }
  },
  {
    "path": "src/main/exception/EmptyMessageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class EmptyMessageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public EmptyMessageException(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(String.format(\"     ☹ OOPS!!! The description of a %s\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                        + \" cannot be empty.\", command));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 8
    }
  },
  {
    "path": "src/main/exception/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public InvalidDateException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 7
    }
  },
  {
    "path": "src/main/exception/InvalidDeadlineFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class InvalidDeadlineFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public InvalidDeadlineFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(\"     ☹ OOPS!!! A deadline needs to have this format:\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                + \"       \\\"task name\\\" /by \\\"task deadline\\\"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 8
    }
  },
  {
    "path": "src/main/exception/InvalidEventFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class InvalidEventFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public InvalidEventFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(\"     ☹ OOPS!!! An event needs to have this format:\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                + \"      \\\"task name\\\" /at \\\"event time\\\"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 8
    }
  },
  {
    "path": "src/main/exception/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public InvalidTaskException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(\"     ☹ OOPS!!! Your selected task does not exist!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 7
    }
  },
  {
    "path": "src/main/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 7
    }
  },
  {
    "path": "src/main/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.AddEventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.AddTodoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.InvalidDateException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.InvalidDeadlineFormatException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.InvalidEventFormatException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.EmptyMessageException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static LocalDateTime toDateTime(String dateTime) throws InvalidDateException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String[] dateTimeSplit \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (dateTimeSplit.length !\u003d 2)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new InvalidDateException(\"     ☹ OOPS!!! Your date needs to\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    + \" have this format:\\n     \\\"YYYY-MM-DD HHMM\\\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String[] date \u003d dateTimeSplit[0].split(\"-\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String time \u003d dateTimeSplit[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (date.length !\u003d 3)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new InvalidDateException(\"     ☹ OOPS!!! Your date needs to\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    + \" have this format:\\n     \\\"YYYY-MM-DD\\\"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (time.length() !\u003d 4)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new InvalidDateException(\"     ☹ OOPS!!! Your time needs to\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    + \" have this format:\\n     \\\"HHMM\\\"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            int year \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            int day \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            int hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            int minute \u003d Integer.parseInt(time.substring(2));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return LocalDateTime.of(year, month, day, hour, minute);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        } catch (NumberFormatException | DateTimeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new InvalidDateException(\"     ☹ OOPS!!! Please check that you\u0027ve\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                    + \" entered\\n       the date and time correctly\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static Command parseAdd(String[] input)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throws InvalidDeadlineFormatException,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                InvalidDateException,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                InvalidEventFormatException,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                UnknownCommandException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String command \u003d input[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String description \u003d input[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String[] nameAndTime;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return new AddTodoCommand(description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            nameAndTime \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            if (nameAndTime.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                throw new InvalidDeadlineFormatException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return new AddDeadlineCommand(nameAndTime[0], toDateTime(nameAndTime[1]));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            nameAndTime \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            if (nameAndTime.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                throw new InvalidEventFormatException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return new AddEventCommand(nameAndTime[0], toDateTime(nameAndTime[1]));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public static Command parse(String[] input)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throws InvalidTaskException,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                EmptyMessageException,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                UnknownCommandException,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                InvalidDateException,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                InvalidDeadlineFormatException,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                InvalidEventFormatException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String command \u003d input[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        boolean isSingleArgument \u003d input.length \u003d\u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        int taskNum;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case EXIT_COMMAND:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case LIST_COMMAND:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            if (isSingleArgument) throw new InvalidTaskException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            taskNum \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            if (isSingleArgument) throw new InvalidTaskException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            taskNum \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            if (isSingleArgument) throw new EmptyMessageException(command);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            return parseAdd(input);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 120
    }
  },
  {
    "path": "src/main/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public static void write(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        Path folderPath \u003d Paths.get(currDir, \"data\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (!Files.exists(folderPath)) Files.createDirectories(folderPath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        Path filePath \u003d Paths.get(currDir, \"data\", \"tasks.csv\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (!file.exists()) file.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        bw.write(\"main.task.Task Type,main.task.Task Time,Done State,main.task.Task Name\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) bw.write(tasks.get(i).write());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public static void setTasks(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        Path filePath \u003d Paths.get(currDir, \"data\", \"tasks.csv\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (!file.exists()) return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        BufferedReader br \u003d Files.newBufferedReader(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        br.readLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String line \u003d br.readLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            String[] task \u003d line.split(\",\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            line \u003d br.readLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            String taskType \u003d task[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            String taskTime \u003d task[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            String taskName \u003d task[3];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            boolean taskDoneState \u003d task[2].equals(\"1\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                tasks.add(new Todo(taskName, taskDoneState));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                tasks.add(new Deadline(taskName, taskTime, taskDoneState));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                tasks.add(new Event(taskName, taskTime, taskDoneState));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 74
    }
  },
  {
    "path": "src/main/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final DateTimeFormatter FORMATTER"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy, h:mma\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Deadline(String name, LocalDateTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Deadline(String name, String time, boolean doneState) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(name, doneState);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\"D,%s%s\", time, super.write());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                time.format(FORMATTER));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 31
    }
  },
  {
    "path": "src/main/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final DateTimeFormatter FORMATTER"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy, h:mma\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Event(String name, LocalDateTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Event(String name, String time, boolean taskDoneState) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(name, taskDoneState);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\"E,%s%s\", time, super.write());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                time.format(FORMATTER));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 31
    }
  },
  {
    "path": "src/main/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private boolean doneState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        doneState \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Task(String name, boolean doneState) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.doneState \u003d doneState;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private String doneTag() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return doneState ? \"[\\u2713]\" : \"[\\u2718]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        doneState \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\",%d,%s\\n\", doneState ? 1 : 0, name);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\"%s %s\", doneTag(), name);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 33
    }
  },
  {
    "path": "src/main/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 28
    }
  },
  {
    "path": "src/main/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public Todo(String name, boolean doneState) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        super(name, doneState);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\"T,%s\", super.write());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 21
    }
  },
  {
    "path": "src/main/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "package main.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "import main.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String SEPARATOR \u003d \"    ____________________________________\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            + \"________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d String.format(\"     ☹ OOPS!!! \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            + \"Something went wrong!\\n%s\", SEPARATOR);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public String[] getInput(Scanner sc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        String[] input \u003d sc.nextLine().trim().split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.printf(\"     Bye. Hope to see you again soon!\\n%s\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                SEPARATOR);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.printf(\"%s     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                + \"     What can I do for you?\\n%s\", SEPARATOR, SEPARATOR);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            System.out.printf(\"     %d.%s\\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        if (tasks.size() \u003d\u003d 0)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "            System.out.println(\"     There are no tasks yet!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.print(SEPARATOR);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printAddSuccess(Task task, int taskNum) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        boolean isSingular \u003d taskNum \u003d\u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.printf(\"     Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                        + \"       %s\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                        + \"     Now you have %d %s in the list.\\n%s\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                task, taskNum, isSingular ? \"task\" : \"tasks\", SEPARATOR);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printDoneSuccess(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.printf(\"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                        + \"       %s\\n%s\", task, SEPARATOR);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printRemoveSuccess(Task removed, int taskNum) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        boolean isSingular \u003d taskNum \u003d\u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.printf(\"     Noted. I\u0027ve removed this task:\\n       %s\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                        + \"     Now you have %d %s in the list.\\n%s\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "                removed, taskNum, isSingular ? \"task\" : \"tasks\", SEPARATOR);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printError() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.print(ERROR_MESSAGE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printExceptionMessage(Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.printf(\"%s\\n%s\", e.getMessage(), SEPARATOR);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    public void printSeparator() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "        System.out.printf(\"%s\", SEPARATOR);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 71
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "todo task 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline /by next time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by nexttime"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by year-month-day hourminute"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by 1993-12 1423"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by 1993-12-6 123"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by 1993-12-6 12345"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by abcd-12-6 2359"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by 1993-12-6 abcd"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by 1993-12-6 3560"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "deadline task 2 /by 1993-12-6 2359"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event /at right now"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at now"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at year-month-day hourminute"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at 1967-01 1423"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at 1967-01-31 123"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at 1967-01-31 12345"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at abcd-01-31 2359"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at 1967-01-31 abcd"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at 1967-01-31 3560"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "event task 3 /at 1967-01-31 1400"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "blah"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "delete"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 42
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshualiangxy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "joshualiangxy": 1,
      "-": 37
    }
  }
]
