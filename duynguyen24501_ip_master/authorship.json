[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Duke Tracker is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having the advantages of a Graphical User Interface (GUI). If you can type fast, Duke Tracker can help your task management done faster than traditional GUI applications. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Listing all tasks : **`list`**](#listing-all-tasks--list)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Adding a task : **`todo`**](#adding-a-task--todo)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Adding a task (with a deadline) : **`deadline`**](#adding-a-task-with-a-deadline--deadline)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Adding a task (with a specified date) : **`event`**](#adding-a-task-with-a-specified-date--event)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Deleting a task : **`delete`**](#deleting-a-task--delete) "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Marking a task as done  : **`done`**](#marking-a-task-as-done--done) "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Finding tasks : **`find`**](#finding-tasks--find)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Exiting the application :  **`bye`**](#exiting-the-application--bye)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Saving data](#saving-data)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- Words in `\u003c....\u003e` are the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- Items that have `/` before them are keywords for that command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Listing all tasks : **`list`**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Shows a list of tasks in the current task list.  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Adding a task : **`todo`**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Adds a new todo task.  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `todo \u003cTASK_DESCRIPTION\u003e`  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Tasks with duplicated \\\u003cTASK_DESCRIPTION\u003e are not allowed.  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`todo CS2103T Quiz 5`** Creates a todo task with description \"CS2103T Quiz 5\"  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Adding a task (with a deadline) : **`deadline`**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Adds a new task with a deadline.  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDEADLINE_DESCRIPTION\u003e`  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* \\\u003cDEADLINE_DESCRIPTION\u003e can either be a string or a date in YYYY-MM-DD format.  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Tasks with duplicated \\\u003cTASK_DESCRIPTION\u003e are not allowed.  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`deadline return book /by this Sunday`**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`deadline CS2100 Assignment 1 /by 2020-09-18`**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Adding a task (with a specified date) : **`event`**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Adds a new task with a specified date.  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `event \u003cTASK_DESCRIPTION\u003e /by \u003cDATE_DESCRIPTION\u003e`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* \\\u003cDATE_DESCRIPTION\u003e can either be a string or a date in YYYY-MM-DD format.  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Tasks with duplicated \\\u003cTASK_DESCRIPTION\u003e are not allowed. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`event return book /at this Sunday`**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`event CS2100 Assignment 1 /at 2020-09-18`**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Deleting a task : **`delete`**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Deletes a task at the specific index from the task list.  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `delete \u003cTASK_INDEX\u003e`  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- \\\u003cTASK_INDEX\u003e is the index that appears on the left of a task when the task list is shown.  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `delete 3` Deletes task at index 3"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `delete 6` Deletes task at index 6"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Marking a task as done : **`done`**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Marks a task at the specific index from the task list as finished/done.  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `done \u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- \\\u003cTASK_INDEX\u003e is the index that appears on the left of a task when the task list is shown.  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `done 2` Marks task at index 2 as done/finished"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `done 5` Marks task at index 5 as done/finished"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Finding tasks : **`find`**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Finds all the tasks in the task list that match the given querystring.  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `find \u003cQUERY_STRING\u003e`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Returns tasks of which \\\u003cTASK_DESCRIPTION\u003e contains \\\u003cQUERY_STRING\u003e as a substring.  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* \\\u003cQUERY_STRING\u003e is case-insensitive.  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* `find CS2100 Assignment` Shows a list of tasks of which \\\u003cTASK_DESCRIPTION\u003e contains \"CS2100 Assignment\" as substring"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Exiting the application : `bye`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Exits and closes the application.  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "###  Saving data"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Duke Tracker automatically saves data into hard disk (.txt file) everytime any changes are made."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|          Action          |                          Format                          |"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "| :----------------------: | :------------------------------------------------------: |"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|List|`list`|"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Add|`todo \u003cTASK_DESCRIPTION\u003e` \u003cbr /\u003e(e.g., todo CS2103T Quiz 5)|"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Add (with deadline)|`deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDEADLINE_DESCRIPTION\u003e` \u003cbr /\u003e(e.g., deadline return book /by this Sunday)|"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Add (with date)|`event \u003cTASK_DESCRIPTION\u003e /at \u003cDATE_DESCRIPTION\u003e` \u003cbr /\u003e(e.g., event CS2100 Assignment 1 /at 2020-09-18)|"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Delete|`delete \u003cTASK_INDEX\u003e` \u003cbr /\u003e(e.g., delete 3)|"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Done|`done \u003cTASK_INDEX\u003e` \u003cbr /\u003e(e.g., done 2)|"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Find|`find \u003cQUERY_STRING\u003e` \u003cbr /\u003e(e.g., find CS2100 Assignment)|"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Exit|`bye`|"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "|Save|"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 97
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    maven {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        url \"https://plugins.gradle.org/m2/\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 21,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "D | 1 | CS2100 Quiz 1 | this Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "T | 1 | CS2103T User Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "E | 0 | CS2105 Assignment 1 | 2020-09-17"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Duke Tracker is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having the advantages of a Graphical User Interface (GUI). If you can type fast, Duke Tracker can help your task management done faster than traditional GUI applications. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Listing all tasks : **`list`**](#listing-all-tasks--list)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Adding a task : **`todo`**](#adding-a-task--todo)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Adding a task (with a deadline) : **`deadline`**](#adding-a-task-with-a-deadline--deadline)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Adding a task (with a specified date) : **`event`**](#adding-a-task-with-a-specified-date--event)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Deleting a task : **`delete`**](#deleting-a-task--delete) "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Marking a task as done  : **`done`**](#marking-a-task-as-done--done) "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Finding tasks : **`find`**](#finding-tasks--find)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Exiting the application :  **`bye`**](#exiting-the-application--bye)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    * [Saving data](#saving-data)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- Words in `\u003c....\u003e` are the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- Items that have `/` before them are keywords for that command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Listing all tasks : **`list`**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Shows a list of tasks in the current task list.  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Adding a task : **`todo`**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Adds a new todo task.  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `todo \u003cTASK_DESCRIPTION\u003e`  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Tasks with duplicated \\\u003cTASK_DESCRIPTION\u003e are not allowed.  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`todo CS2103T Quiz 5`** Creates a todo task with description \"CS2103T Quiz 5\"  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Adding a task (with a deadline) : **`deadline`**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Adds a new task with a deadline.  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDEADLINE_DESCRIPTION\u003e`  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* \\\u003cDEADLINE_DESCRIPTION\u003e can either be a string or a date in YYYY-MM-DD format.  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Tasks with duplicated \\\u003cTASK_DESCRIPTION\u003e are not allowed.  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`deadline return book /by this Sunday`**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`deadline CS2100 Assignment 1 /by 2020-09-18`**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Adding a task (with a specified date) : **`event`**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Adds a new task with a specified date.  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `event \u003cTASK_DESCRIPTION\u003e /by \u003cDATE_DESCRIPTION\u003e`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* \\\u003cDATE_DESCRIPTION\u003e can either be a string or a date in YYYY-MM-DD format.  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Tasks with duplicated \\\u003cTASK_DESCRIPTION\u003e are not allowed. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`event return book /at this Sunday`**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- **`event CS2100 Assignment 1 /at 2020-09-18`**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Deleting a task : **`delete`**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Deletes a task at the specific index from the task list.  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `delete \u003cTASK_INDEX\u003e`  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- \\\u003cTASK_INDEX\u003e is the index that appears on the left of a task when the task list is shown.  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `delete 3` Deletes task at index 3"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `delete 6` Deletes task at index 6"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Marking a task as done : **`done`**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Marks a task at the specific index from the task list as finished/done.  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `done \u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- \\\u003cTASK_INDEX\u003e is the index that appears on the left of a task when the task list is shown.  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `done 2` Marks task at index 2 as done/finished"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "- `done 5` Marks task at index 5 as done/finished"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Finding tasks : **`find`**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Finds all the tasks in the task list that match the given querystring.  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Format: `find \u003cQUERY_STRING\u003e`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* Returns tasks of which \\\u003cTASK_DESCRIPTION\u003e contains \\\u003cQUERY_STRING\u003e as a substring.  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* \\\u003cQUERY_STRING\u003e is case-insensitive.  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "* `find CS2100 Assignment` Shows a list of tasks of which \\\u003cTASK_DESCRIPTION\u003e contains \"CS2100 Assignment\" as substring"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "### Exiting the application : `bye`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Exits and closes the application.  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "###  Saving data"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "Duke Tracker automatically saves data into hard disk (.txt file) everytime any changes are made."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 74,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        var dialogBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialogBox.setStyle(\"-fx-background-color: #11AFF4;\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        //db.setStyle(\"-fx-background-color: #69C8EC99;\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 64
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Duke is a chatbot that can perform specified commands requested by clients."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Constructor of Duke class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param filePath address of file path."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Runs Duke program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void run() throws FileNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            isExit \u003d Parser.execute(tasks, ui, storage, userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets message to UI display."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param input the input of user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return the reply to the specific command of users."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getResponse(String input) throws FileNotFoundException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return Parser.getUiReply(tasks, ui, storage, input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows Duke welcoming message."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String welcoming greeting."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String dukeGreeting() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 84,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke1.png\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            stage.setTitle(\"Duke Tracker\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 37
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser1.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke1.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.dukeGreeting(), dukeImage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private void handleUserInput() throws FileNotFoundException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (input.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            pause.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            pause.play();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assert response.length() \u003e 0 : \"Response should not be empty\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 65
    }
  },
  {
    "path": "src/main/java/duke/QueryOnTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "// Use of Streams"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class QueryOnTasks {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Filters tasks by date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param list list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param date date to filter."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return list of tasks after filtering."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e filterByDate(List\u003cTask\u003e list, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list.stream()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                .filter(task -\u003e (task.getType().equals(\"Deadline\")// Use of Java Lambda"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                        || task.getType().equals(\"Event\"))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                                \u0026\u0026 task.getLocalDate().equals(LocalDate.parse(date)))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                                        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Filters tasks by month."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param list list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param month month to filter."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return list of tasks after filtering."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e filterByMonth(List\u003cTask\u003e list, String month) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list.stream()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                .filter(task -\u003e (task.getType().equals(\"Deadline\")// Use of Java Lambdas"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                        || task.getType().equals(\"Event\")) \u0026\u0026 Integer.toString(task.getLocalDate().getMonthValue())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                                .equals(month)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Filters tasks by year."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param list list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param year year to filter."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return list of tasks after filtering."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e filterByYear(List\u003cTask\u003e list, String year) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list.stream()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                .filter(task -\u003e (task.getType().equals(\"Deadline\")// Use of Java Lambdas"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                        || task.getType().equals(\"Event\")) \u0026\u0026 Integer.toString(task.getLocalDate().getYear())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                                .equals(year)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 53
    }
  },
  {
    "path": "src/main/java/duke/ScreenShow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class ScreenShow extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String userText \u003d new String(userInput.getText());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String dukeText \u003d new String(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                DialogBox.getUserDialog(userText, new Image(String.valueOf(user))),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new Image(String.valueOf(duke)))"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        );"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 124
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * UI class displays information to answer clients\u0027 queries."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Returns Duke welcoming message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String welcoming greeting."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String greeting \u003d \"    ______________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        greeting +\u003d \"        Hello! I\u0027m Duke\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        greeting +\u003d \"        What can I do for you?\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        greeting +\u003d \"    ______________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return greeting;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows goodbye message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String sayGoodbye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows invalid format command error message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String showInvalidFormatCommandDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"☹ OOPS!!! The description of a task cannot be empty or in wrong format\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows meaningless command message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String showMeaninglessCommandDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Prints out line background."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String printLineBackground() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"    _______________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 47
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * DukeException is an exception class for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * It will throw an exception when user\u0027s input command cannot be recognised by Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class MissingArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public MissingArgumentException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Parser deals with users\u0027 commands, differentiates each type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Command enum lists out all the types of commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public enum Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        BYE(\"bye\"), LIST(\"list\"), DONE(\"done\"), TODO(\"todo\"), DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "              EVENT(\"event\"), DELETE(\"delete\"), FILTER(\"filter\"), FIND(\"find\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        private String value;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Command(String value) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            this.value \u003d value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Executes user\u0027s commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param tasks list of current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param ui UI for client."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param storage save and display data from database."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param userInput user\u0027s command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return boolean terminate when it returns true."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static boolean execute(TaskList tasks, Ui ui, Storage storage, String userInput)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (userInput.equals(Command.BYE.value)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(ui.sayGoodbye());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.equals(Command.LIST.value)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(tasks.showTasksAsString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DONE.value)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int taskPosition \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(tasks.setDoneAsString(taskPosition));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(ui.showInvalidFormatCommandDescription());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(ui.showInvalidFormatCommandDescription());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.TODO.value)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.trim().substring(5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(tasks.addToDoAsString(description));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(ui.showInvalidFormatCommandDescription());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DEADLINE.value)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int spacePosition \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int keywordPosition \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.substring(spacePosition + 1, keywordPosition - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String by \u003d userInput.substring(keywordPosition + 4);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(tasks.addDeadlineAsString(description, by));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(ui.showInvalidFormatCommandDescription());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.EVENT.value)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int spacePosition \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int keywordPosition \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.substring(spacePosition + 1, keywordPosition - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String at \u003d userInput.substring(keywordPosition + 4);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(tasks.addEventAsString(description, at));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(ui.showInvalidFormatCommandDescription());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DELETE.value)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int taskPosition \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(tasks.deleteTaskAsString(taskPosition));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(ui.showInvalidFormatCommandDescription());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.FILTER.value)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String[] inputArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(tasks.filterTask(inputArray));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.FIND.value)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String keyword \u003d userInput.substring(6);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(tasks.findTasks(keyword.trim()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(ui.showInvalidFormatCommandDescription());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(ui.showMeaninglessCommandDescription());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Displays reply to users\u0027 commands"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param tasks list of current tasks"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param ui UI for client."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param storage save and display data from database."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param userInput user\u0027s command."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return boolean terminate when it returns true."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static String getUiReply(TaskList tasks, Ui ui, Storage storage, String userInput)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (userInput.equals(Command.BYE.value)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return ui.sayGoodbye();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.equals(Command.LIST.value)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return tasks.showTasksAsString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DONE.value)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int taskPosition \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String response \u003d tasks.setDoneAsString(taskPosition);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                assert response.length() \u003e 0 : \"Response should not be empty\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.TODO.value)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.trim().substring(5);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String response \u003d tasks.addToDoAsString(description);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                assert response.length() \u003e 0 : \"Response should not be empty\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DEADLINE.value)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int spacePosition \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int keywordPosition \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.substring(spacePosition + 1, keywordPosition - 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String by \u003d userInput.substring(keywordPosition + 4);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String response \u003d tasks.addDeadlineAsString(description, by);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                assert response.length() \u003e 0 : \"Response should not be empty\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.EVENT.value)) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int spacePosition \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int keywordPosition \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.substring(spacePosition + 1, keywordPosition - 1);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String at \u003d userInput.substring(keywordPosition + 4);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String response \u003d tasks.addEventAsString(description, at);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                assert response.length() \u003e 0 : \"Response should not be empty\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DELETE.value)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int taskPosition \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String response \u003d tasks.deleteTaskAsString(taskPosition);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                assert response.length() \u003e 0 : \"Response should not be empty\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.FIND.value)) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String keyword \u003d userInput.substring(6);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String response \u003d tasks.findTasks(keyword.trim());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                assert response.length() \u003e 0 : \"Response should not be empty\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.FILTER.value)) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String[] inputArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return tasks.filterTask(inputArray);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return ui.showMeaninglessCommandDescription();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 210
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Storage is used to store data in hardware and displays available data in client\u0027s server."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Scanner inputSource;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Constructor of Storage class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param filePath relative address of file path"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            File directory \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                directory.mkdirs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            File file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(\"There are some errors when retrieving data!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            inputSource \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(\"File: \" + filePath + \" cannot be found!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Loads all data from database."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return List list of tasks in database."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e loadTasks() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        while (inputSource.hasNextLine()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String currentInput \u003d inputSource.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String[] inputArray \u003d currentInput.split(\"\\\\|\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if (inputArray[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.add(new Todo(inputArray[2].trim()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } else if (inputArray[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.add(new Deadline(inputArray[2].trim(), inputArray[3].trim()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } else if (inputArray[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.add(new Event(inputArray[2].trim(), inputArray[3].trim()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if (inputArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.get(list.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Saves tasks in database."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param list list of data that clients enter."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(new FileOutputStream(filePath));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            printWriter.println(task.toStringFile());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 89
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + super.getNewFormatTime() + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"D\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + super.time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getNewFormatTime() + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"E\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + super.time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Task represents a task by client."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Task is an abstract class for Todo, Deadline and Event to inherit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Constructor of Task class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Second constructor of Task class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param time time estimated to finish the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Task(String description, String time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets status icon of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String status icon of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets new format of the given time frame"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String new format of time frame"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getNewFormatTime() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            LocalDate newFormatTime \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return newFormatTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return this.time;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets time as LocalDate format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return LocalDate new format of time."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public LocalDate getLocalDate() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return LocalDate.parse(time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Get type of the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String type of the task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Get task representation in hardware as string."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public abstract String toStringFile();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Get description of the task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return description of the task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 101
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.QueryOnTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Constructor of TaskList class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Second constructor of TaskList class when we retrieve data at the beginning."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param tasks list of tasks from database."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets current list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return current list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets reply to show all the tasks to the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return the reply to display all the tasks as string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String showTasksAsString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"     \" + (i + 1) + \".\" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Sets the task at the particular position as done and display message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param taskPosition position of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return the reply to DONE task as string."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String setDoneAsString(int taskPosition) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (taskPosition \u003e tasks.size() || taskPosition \u003c\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return \"Out of index range! Please try again :D\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        tasks.get(taskPosition - 1).markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String result \u003d \"___________________________________________\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        result +\u003d \"        Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        result +\u003d \"            \" + tasks.get(taskPosition - 1) + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        result +\u003d \"___________________________________________\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Checks whether the task is duplicate or not."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param task the task to check."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return boolean if the task is duplicated, return true."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public boolean isDuplicate(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        for (Task taskData: tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if (taskData.getDescription().equals(task.getDescription())) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Adds a task type Todo and display message."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return the reply to Todo task as string."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String addToDoAsString(String description) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Task toDo \u003d new Todo(description);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        boolean isDuplicate \u003d isDuplicate(toDo);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (!isDuplicate) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks.add(toDo);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String result \u003d \"___________________________________________\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"        Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"            \" + toDo + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"        Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"___________________________________________\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return \"The task is duplicated. Try another one :D\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Adds a task type Deadline and display message."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param by time to finish the task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return the reply to Deadline task as string."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String addDeadlineAsString(String description, String by) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        boolean isDuplicate \u003d isDuplicate(deadline);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (!isDuplicate) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks.add(deadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String result \u003d \"___________________________________________\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"        Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"            \" + deadline + \"\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"        Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"___________________________________________\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return \"The task is duplicated. Try another one :D\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Adds a task type Event and display message."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return the reply to Event task as string."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String addEventAsString(String description, String by) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Task event \u003d new Event(description, by);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        boolean isDuplicate \u003d isDuplicate(event);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (!isDuplicate) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String result \u003d \"___________________________________________\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"        Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"            \" + event + \"\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"        Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            result +\u003d \"___________________________________________\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return \"The task is duplicated. Try another one :D\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Deletes task at the particular position and display message."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param taskPosition position of the task that user wants to delete."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return the reply to DELETE command as string."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String deleteTaskAsString(int taskPosition) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (taskPosition \u003e tasks.size() || taskPosition \u003c\u003d 0) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return \"Out of index range! Please try again :D\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String result \u003d \"___________________________________________\\n\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        result +\u003d \"        Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        result +\u003d \"            \" + tasks.remove(taskPosition - 1) + \"\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        result +\u003d \"        Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        result +\u003d \"___________________________________________\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Filters tasks by a particular condition."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param inputArray an array of input information."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String filterTask(String[] inputArray) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        QueryOnTasks queryOnTasks \u003d new QueryOnTasks();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String response \u003d \"Here are the tasks in your query list:\\n\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (inputArray[1].equals(\"date\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            List\u003cTask\u003e queryList \u003d queryOnTasks.filterByDate(tasks, inputArray[2]);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            for (int i \u003d 0; i \u003c queryList.size(); i++) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                response +\u003d \"     \" + (i + 1) + \".\" + queryList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (inputArray[1].equals(\"month\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            List\u003cTask\u003e queryList \u003d queryOnTasks.filterByMonth(tasks, inputArray[2]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            for (int i \u003d 0; i \u003c queryList.size(); i++) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                response +\u003d \"     \" + (i + 1) + \".\" + queryList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (inputArray[1].equals(\"year\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            List\u003cTask\u003e queryList \u003d queryOnTasks.filterByYear(tasks, inputArray[2]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            for (int i \u003d 0; i \u003c queryList.size(); i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                response +\u003d \"     \" + (i + 1) + \".\" + queryList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Finds tasks by a keyword."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param keyword keyword to find the tasks."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String findTasks(String keyword) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String response \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if (tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                response +\u003d \"     \" + (i + 1) + \".\" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 210
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"T\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Todo\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 20
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#000000\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"120.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringConversion() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: May 24 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        deadline.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[D][✓] return book (by: May 24 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringFileConversion() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"D | 0 | return book | 2020-05-24\", deadline.toStringFile());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 25
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringConversion() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Event event \u003d new Event(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[E][✘] return book (at: May 24 2020)\", event.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[E][✓] return book (at: May 24 2020)\", event.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringFileConversion() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Event event \u003d new Event(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"E | 0 | return book | 2020-05-24\", event.toStringFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 23
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringConversion() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[T][✘] return book\", todo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[T][✓] return book\", todo.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringFileConversion() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"T | 0 | return book\", todo.toStringFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 5,
      "-": 31
    }
  }
]
