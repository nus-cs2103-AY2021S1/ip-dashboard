[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/CommandParserAndLogic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.DeadLineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.TodoTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.TextStoreAndPrint.TextPrinter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class CommandParserAndLogic {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    String[] current;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public CommandParserAndLogic(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Splits the string and uses commandCheck method for further logic"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param input a string input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void handleInput(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        current \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        commandCheck(current[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Checks the string provided if it matches any known commands"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Follows up by calling the relevant logic"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return true if it is an know command, else false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private boolean commandCheck(String string) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        switch (string) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"!commands\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.printCommands();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                byeLogic();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                taskList.printOut();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                doneLogic();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                deleteLogic();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                toDoLogic();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                deadlineLogic();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                eventLogic();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"find\" :"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                findLogic();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.printCommandNotFoundError();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void byeLogic() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Ui.endUi();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void doneLogic() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printTaskNumNotSpecifiedError();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            taskList.markDone(Integer.parseInt(current[1]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void toDoLogic() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printDescriptionNotFoundError();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            taskList.addTask(new TodoTask(current[1]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void deadlineLogic() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printDescriptionNotFoundError();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String[] details \u003d current[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.printTimeNotFoundError();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    taskList.addTask(new DeadLineTask(details[0], MyDateTime.parse(details[1])));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    TextPrinter.printDateTimeFormatError();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void eventLogic() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printDescriptionNotFoundError();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String[] details \u003d current[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.printTimeNotFoundError();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    taskList.addTask(new EventTask(details[0], MyDateTime.parse(details[1])));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    TextPrinter.printDateTimeFormatError();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void deleteLogic() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printTaskNumNotSpecifiedError();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            taskList.deleteTask(Integer.parseInt(current[1]));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void findLogic() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printNoSearchTermError();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            taskList.search(current[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 140
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.TextStoreAndPrint.TextPrinter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private Path pathToSave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private Duke(Path path) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        pathToSave \u003d path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        taskList \u003d FileManager.readFromSave(path);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        ui \u003d new Ui(taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        FileManager.saveList(taskList, pathToSave);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TextPrinter.printEndMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TextPrinter.printStartMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"Documents\", \"ipSave.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        new Duke(path).run();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 33
    }
  },
  {
    "path": "src/main/java/duke/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.DeadLineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.TodoTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.TextStoreAndPrint.TextPrinter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.TextStoreAndPrint.TextStore;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Saves the tasks in taskList into a txt file located at the provided path"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param taskList tasks to be saved"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param path saved location"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void saveList(TaskList taskList, Path path) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path.toFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(fw);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            pw.print(taskList.allSaveString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.standardPrint(TextStore.savingToTextFile + \"\\n\" + \"file saved at:\\n\" + path.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Tries to read the file from the given path and create a TaskList object from save file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Returns a TaskList object with no tasks if file is empty or not found"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Prints relevant status messages"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param path path to the save file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return TaskList object containing tasks read from the save file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static TaskList readFromSave(Path path) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printTopGraphic();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printStandAlone(TextStore.loadingSave);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (directoryExists) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.printStandAlone(TextStore.saveFound);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                taskList \u003d readSaveToTaskListObject(path);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.printStandAlone(TextStore.saveNotFound);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printBottomGraphic();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static TaskList readSaveToTaskListObject(Path path) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            FileReader fr \u003d new FileReader(path.toFile());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                String info[] \u003d str.split(\"/break/\", 4);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                taskList.loadInTask(infoToTask(info));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static Task infoToTask(String info[]) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        switch (info[0]) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                task \u003d new TodoTask(info[2]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task \u003d new DeadLineTask(info[2], MyDateTime.load(info[3]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    throw new IllegalStateException(\"Unexpected time format: \" + info[3]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task \u003d new EventTask(info[2], MyDateTime.load(info[3]));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    throw new IllegalStateException(\"Unexpected time format: \" + info[3]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                throw new IllegalStateException(\"Unexpected type: \" + info[0]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (info[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 112
    }
  },
  {
    "path": "src/main/java/duke/MyDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class MyDateTime {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Parses date time and returns a LocalDateTime object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string date time in the format of \" dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return LocalDateTime object parsed from the input string"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @throws DateTimeParseException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static LocalDateTime parse(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(\" dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Parses date time and returns a LocalDateTime object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string date time in the format of \"yyyy-MM-dd\" + \"T\" + \"HH:mm\", \"T\" being just a letter in the string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return LocalDateTime object parsed from the input string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @throws DateTimeParseException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static LocalDateTime load(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return LocalDateTime.parse(string);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 37
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.TextStoreAndPrint.TextPrinter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Adds an task object to this TaskList object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Prints out a graphic saying the task has been added and how many there are total"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TextPrinter.standardPrint(\"Got it. I\u0027ve added this task:\\n  \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                \"Now you have \" + size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Adds an task object to this TaskList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Does not print anything"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void loadInTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Prints out all the tasks in this list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Prints along with the top and bottom graphic from TextStore"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void printOut() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        for (Task item: taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            temp.append(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            temp.append(counter).append(\". \").append(item.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TextPrinter.standardPrint(temp.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Finds and returns all tasks with descriptions that contains the string provided"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void search(String string) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        for (Task item: taskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (item.getDescription().contains(string)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp.append(\"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp.append(counter).append(\". \").append(item.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TextPrinter.standardPrint(temp.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Constructs a string from tasks that can be saved into a text file and can be read by FileManager"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return A long string of all the tasks to be saved"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String allSaveString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp.append(\"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp.append(task.saveString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return temp.substring(1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void markDone(int position) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (taskList.get(position - 1).markDone()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.standardPrint(\"beri gude, finish that thing liao\\n  \" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                        taskList.get(position - 1).toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextPrinter.standardPrint(\"Task alr finish liao\\n  \" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                        taskList.get(position - 1).toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printTaskNotFoundError();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void deleteTask(int position) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Task task \u003d taskList.get(position - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            taskList.remove(position - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.standardPrint(\"Noted. I\u0027ve removed this task:\\n  \" +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"Now you have \" + size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextPrinter.printTaskNotFoundError();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 119
    }
  },
  {
    "path": "src/main/java/duke/Tasks/DeadLineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class DeadLineTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String indicator \u003d \"[D]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final LocalDateTime date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public DeadLineTask(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return indicator + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() {return \"D/break/\" + this.done + \"/break/\" + name + \"/break/\" + date;}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 22
    }
  },
  {
    "path": "src/main/java/duke/Tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String indicator \u003d \"[E]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final LocalDateTime date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public EventTask(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return indicator + super.toString() + \" (Date: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() {return \"E/break/\" + this.done + \"/break/\" + name + \"/break/\" + date;}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 22
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.TextStoreAndPrint.TextStore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    boolean done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return done ? TextStore.doneText + name : TextStore.notDoneText + name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public abstract String saveString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public boolean markDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            done \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 32
    }
  },
  {
    "path": "src/main/java/duke/Tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String indicator \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public TodoTask(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return indicator + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() { return \"T/break/\" + this.done + \"/break/\" + name; }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 18
    }
  },
  {
    "path": "src/main/java/duke/TextStoreAndPrint/TextPrinter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.TextStoreAndPrint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TextPrinter {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void standardPrint(String middle) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        System.out.print(TextStore.top + \"\\n\" + middle + \"\\n\" + TextStore.bottom + \"\\n\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printStandAlone(String details) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        System.out.println(details);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Bling msgs"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printTopGraphic() { System.out.print(TextStore.top + \"\\n\"); }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printBottomGraphic() { System.out.print(TextStore.bottom + \"\\n\"); }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printStartMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.startMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printEndMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.endMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Error msgs"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printTaskNotFoundError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.taskNotFound);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printCommandNotFoundError() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.commandNotFound);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printDescriptionNotFoundError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.descriptionNotFound);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printTaskNumNotSpecifiedError() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.taskNumNotSpecified);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printTimeNotFoundError() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.timeNotFound);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printDateTimeFormatError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.dateTimeFormatError);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printNoSearchTermError() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.noSearchTermError);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Status and info msgs"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printLoadingSave() { standardPrint(TextStore.loadingSave);}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printSaveFound() { standardPrint(TextStore.saveFound);}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printSaveNotFound() { standardPrint(TextStore.saveNotFound);}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printSavingToTextFile() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.savingToTextFile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printCommands() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        standardPrint(TextStore.commandList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printPromptMsg() { standardPrint(TextStore.promptMsg); }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 72
    }
  },
  {
    "path": "src/main/java/duke/TextStoreAndPrint/TextStore.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.TextStoreAndPrint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TextStore {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Bling msgs"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String top \u003d \"----------Bot made by Hendey Fan----------\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String bottom \u003d \"------------------------------------------\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String startMessage \u003d \"This is a chat bot made by Hendey Fan.\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"What can this magnificent bot do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String endMessage \u003d \"    oi don run away from ur tasks hor    \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Error msgs"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String taskNotFound \u003d \"Error: task not found :(\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String commandNotFound \u003d \"Error: command does not exist :(\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Type \u0027!command\u0027 for list of commands and instructions\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String descriptionNotFound \u003d \"Error: description of task cannot be empty\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String taskNumNotSpecified \u003d \"Error: task number not specified\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String timeNotFound \u003d \"Error: time not specified\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String dateTimeFormatError \u003d \"Error: date time in an incorrect format\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Please follow this format: dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String noSearchTermError \u003d \"Error: search term not defined\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Status msgs"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String loadingSave \u003d \"Status: loading previous save\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String saveFound \u003d \"Status: previous save found\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String saveNotFound \u003d \"Status: no previous save found\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String savingToTextFile \u003d \"Status: saving tasks to text file\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // static info/display strings"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String commandList \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"1) !commands | returns a list of text commands\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"2) list      | lists out all the current tasks\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"3) bye       | saves the current tasks into a file and exits program\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"4) done      | format: \\\"done \u003ctask number\u003e\\\", marks a task in the list as done\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"5) todo      | format: \\\"todo \u003cdescription\u003e\\\", creates a todo task\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"6) deadline  | format: \\\"deadline \u003cdescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\\\", creates a deadline task\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"7) event     | format: \\\"event \u003cdescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\\\", creates a event task\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"8) delete    | format: \\\"delete \u003ctask number\u003e\\\", deletes a task in the list\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"9) find      | format: \\\"find \u003cstring\u003e\\\", finds tasks with matching string\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String doneText    \u003d \"[Complete] \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String notDoneText \u003d \"[ToBeDone] \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String promptMsg \u003d \"Type \\\"!commands\\\" for a list of commands and formats :)\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 45
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.TextStoreAndPrint.TextPrinter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private CommandParserAndLogic commandParserAndLogic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static boolean hasEnded \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public Ui(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        commandParserAndLogic \u003d new CommandParserAndLogic(taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        String current;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TextPrinter.printPromptMsg();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        while (!hasEnded) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            current \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            commandParserAndLogic.handleInput(current);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void endUi() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        hasEnded \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 36
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void MyDateTimeWrongValue(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.parse(\" 12/34/5678 1234\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u0027 12/34/5678 1234\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 34\", e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void MyDateTimeWrongFormat(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.parse(\" 12/wrong\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u0027 12/wrong\u0027 could not be parsed at index 4\", e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void MyDateTimeLoadWrongValue(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.load(\"1234-34-12T12:34\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u00271234-34-12T12:34\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 34\", e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void MyDateTimeLoadWrongFormat(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.load(\"1234-wrong\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u00271234-wrong\u0027 could not be parsed at index 5\", e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "event event test /at 12/12/1234 1234"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "todo todo test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "deadline test /by 12/12/1234 1234"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 1,
      "-": 20
    }
  }
]
