[
  {
    "path": "src/main/java/CommandLineInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import commands.CommandTypes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import utils.Formatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import utils.Colour;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import utils.ResourceHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class CommandLineInterface {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final int dividerLength \u003d 70;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final int leftPadding \u003d 7;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final String goodbyeMessage \u003d \"Bye. Hope my service has been satisfactory.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            + \"Hope to see you again soon.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final String invalidTaskIndexErrorMessage \u003d \"Invalid task index! Please choose another index.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final String invalidCommandInput \u003d \"OOPS!!!! I\u0027m sorry, but I don\u0027t know what that means\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final Formatter formatter \u003d new Formatter(dividerLength, leftPadding);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        formatter.print(ResourceHandler.getMessage(\"commandline.welcomeMessage\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String[] words \u003d userInput.toLowerCase().split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                CommandTypes commandType \u003d CommandTypes.valueOf(words[0].toUpperCase());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                commandType.checkInput(userInput.toLowerCase());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String content, dateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String[] userInputArgs;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        formatter.print(taskManager.getAllTasks());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        formatter.print(ResourceHandler.getMessage(\"commandline.farewellMessage\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        content \u003d userInput.replaceFirst(\"^(?i)todo\", \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        String trimmedContent \u003d content.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        Todo newTodoTask \u003d new Todo(trimmedContent);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        formatter.print(taskManager.addTask(newTodoTask));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        userInput \u003d userInput.replaceFirst(\"^(?i)deadline\", \"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        userInputArgs \u003d userInput.split(\"\\\\s*/by\\\\s*\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        content \u003d userInputArgs[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        dateTime \u003d userInputArgs[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        Deadline newDeadlineTask \u003d new Deadline(content, dateTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        formatter.print(taskManager.addTask(newDeadlineTask));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        userInput \u003d userInput.replaceFirst(\"^(?i)event\", \"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        userInputArgs \u003d userInput.split(\"\\\\s*/at\\\\s*\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        content \u003d userInputArgs[0].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        dateTime \u003d userInputArgs[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        Event newEventTask \u003d new Event(content, dateTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        formatter.print(taskManager.addTask(newEventTask));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                            int taskIndex \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                            formatter.print(taskManager.markTaskAsDone(taskIndex));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                            throw new DukeException("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                                    ResourceHandler.getMessage(\"commandline.invalidTaskIndexErrorMessage\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                            int taskIndex \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                            formatter.print(taskManager.deleteTask(taskIndex));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                            throw new DukeException("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                                    ResourceHandler.getMessage(\"commandline.invalidTaskIndexErrorMessage\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                formatter.print(e.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                formatter.print(Colour.Red(ResourceHandler.getMessage(\"commandline.invalidCommandInputMessage\")));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 102
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        CommandLineInterface.run();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 1,
      "-": 4
    }
  },
  {
    "path": "src/main/java/commands/CommandTypes.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import utils.ResourceHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public enum CommandTypes {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        public void checkInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            String patternString \u003d \"^(?)bye\\\\s*$\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            if (!Pattern.matches(patternString, input)) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                throw new DukeException(ResourceHandler.getMessage(\"commandline.invalidCommandInputMessage\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    },"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        public void checkInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            String patternString \u003d \"^(?)list\\\\s*$\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            if (!Pattern.matches(patternString, input)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                throw new DukeException(ResourceHandler.getMessage(\"commandline.invalidCommandInputMessage\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        public void checkInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            String content \u003d input.replaceFirst(\"^todo\", \"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            if (content.isBlank()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                throw new DukeException(ResourceHandler.getMessage(\"command.invalidTodoCommand\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    },"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        private static final String noDateTimeErrorMessage \u003d \"OOPS!!! Missing deadline date/time\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        public void checkInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            input \u003d input.replaceFirst(\"^event\", \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            String[] inputArgs \u003d input.split(\"\\\\s*/at\\\\s*\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String task \u003d inputArgs[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                if (task.isBlank()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    throw new DukeException(ResourceHandler.getMessage(\"command.invalidEventCommand\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String dateTime \u003d inputArgs[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                throw new DukeException(ResourceHandler.getMessage(\"command.missingDateAndTimeForEvent\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        private static final String noDateTimeErrorMessage \u003d \"OOPS!!! Missing deadline date/time\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        public void checkInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            input \u003d input.replaceFirst(\"^(?i)deadline\", \"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            String[] inputArgs \u003d input.split(\"\\\\s*/by\\\\s*\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String task \u003d inputArgs[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                if (task.isBlank()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                    throw new DukeException(ResourceHandler.getMessage(\"command.invalidDeadlineCommand\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                String dateTime \u003d inputArgs[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                throw new DukeException(ResourceHandler.getMessage(\"command.missingDateAndTimeForDeadline\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    },"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        private static final String invalidTaskIndexErrorMessage \u003d \"Invalid task index! Please choose another index.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        public void checkInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            String patternString \u003d \"^(?i)done\\\\s+\\\\d+\\\\s*$\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            if (!Pattern.matches(patternString, input)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                throw new DukeException(invalidTaskIndexErrorMessage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    },"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        private static final String invalidTaskIndexErrorMessage \u003d \"Invalid task index! Please choose another index.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        public void checkInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            String patternString \u003d \"^(?i)delete\\\\s+\\\\d+\\\\s*$\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            if (!Pattern.matches(patternString, input)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                throw new DukeException(invalidTaskIndexErrorMessage);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public abstract void checkInput(String input) throws DukeException;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 98
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import utils.Colour;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return Colour.Red(this.getMessage());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 15
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Deadline(String content, String dateTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Deadline(String content, String dateTime, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        super(content, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Deadline markTaskAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return new Deadline(this.content, this.dateTime, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 26
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Event(String content, String dateTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Event(String content, String dateTime, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        super(content, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Event markTaskAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return new Event(this.content, this.dateTime, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 25
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    protected String content;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Task(String content) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Task(String content, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public abstract Task markTaskAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        stringBuilder.append(getStatusIcon());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        stringBuilder.append(this.content);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 38
    }
  },
  {
    "path": "src/main/java/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import utils.Colour;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import utils.ResourceHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String addTask(Task newTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n \" + Colour.Green(newTask.toString()) + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String numberOfTasks \u003d tasks.size() \u003c 2 ? \" task in the list.\" : \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return output + \"Now you have a total of \" + String.valueOf(tasks.size()) + numberOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String deleteTask(int taskIndex){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        Task deletedTask \u003d tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String output \u003d \"Noted. I have removed the task: \\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return output + Colour.Red(deletedTask.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public int getCompletedTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        int completedTasks \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            if (tasks.get(i).getIsDone()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                completedTasks++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return completedTasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public int getUncompletedTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        int uncompletedTasks \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            if (!tasks.get(i).getIsDone()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                uncompletedTasks++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return uncompletedTasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String getAllTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        stringBuilder.append(\"Here are all your tasks: \\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            stringBuilder.append(String.valueOf(i + 1) + \") \" + tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        boolean isPluralCompletedTasks \u003d getCompletedTasks() \u003e\u003d 2;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        boolean isPluralUncompletedTasks \u003d getUncompletedTasks() \u003e\u003d 2;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String completedTasks \u003d Colour.Green(getCompletedTasks()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                + (isPluralCompletedTasks ? \" tasks\" : \" task\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String uncompletedTasks \u003d Colour.Red(getUncompletedTasks()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                + (isPluralUncompletedTasks ? \" tasks.\" : \" task\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        stringBuilder.append(\"You have completed \" + completedTasks + \" and have yet to complete \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                + uncompletedTasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String markTaskAsDone(int taskIndex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        Task updatedTask \u003d tasks.get(taskIndex - 1).markTaskAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        tasks.set(taskIndex - 1, updatedTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String taskDoneMessage \u003d ResourceHandler.getMessage(\"taskManager.taskDoneMessage\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(taskDoneMessage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        stringBuilder.append(Colour.Green(updatedTask.toString()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 74
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Todo(String content) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Todo(String content, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        super(content, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Todo markTaskAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return new Todo(this.content, true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 22
    }
  },
  {
    "path": "src/main/java/utils/Colour.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class Colour {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public static String Green(String element) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return \"\\033[0;32m\" + element + \"\\033[0m\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public static String Red(String element) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return \"\\033[0;31m\" + element + \"\\033[0m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 11
    }
  },
  {
    "path": "src/main/java/utils/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private final int dividerLength;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private final int leftPadding;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public Formatter(int dividerLength, int leftPadding) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.dividerLength \u003d dividerLength;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        this.leftPadding \u003d leftPadding;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private void printLeftPadding() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        for (int i \u003d 0; i \u003c leftPadding; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            System.out.print(\u0027 \u0027);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private void printDivider() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        if (dividerLength !\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            for (int i \u003d 0; i \u003c dividerLength - 1; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "                System.out.print(\"_\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            System.out.print(\"_\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public void print(String ericaOutputMessage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        printLeftPadding();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String[] lines \u003d ericaOutputMessage.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            printLeftPadding();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        printLeftPadding();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 39
    }
  },
  {
    "path": "src/main/java/utils/ResourceHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "public class ResourceHandler {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final Locale defaultLocale \u003d new Locale(\"en\", \"SG\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final String filename \u003d \"Messages\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    private static final Map\u003cLocale, ResourceBundle\u003e dukeResources \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public static String getResource(String key, Locale locale) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        ResourceBundle localeMessages \u003d ResourceBundle.getBundle(filename, locale);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        dukeResources.putIfAbsent(locale, localeMessages);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        localeMessages \u003d dukeResources.get(locale);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        String message \u003d localeMessages.getString(key);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    public static String getMessage(String key) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        return getResource(key, defaultLocale);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 26
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Hello! I\u0027m Erica "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       How may I be of assistance?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        \u001b[0;32m[T][✘] read book\u001b[0m"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Now you have a total of 1 task in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        \u001b[0;32m[D][✘] return book (by: 6 Sep)\u001b[0m"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Now you have a total of 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "        \u001b[0;32m[E][✘] meeting (at: mon 2-4 pm)\u001b[0m"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Now you have a total of 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Good job on completing this task! I have marked this task as done: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;32m[T][✓] read book\u001b[0m"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Here are all your tasks: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       1) [T][✓] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       2) [D][✘] return book (by: 6 Sep)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       3) [E][✘] meeting (at: mon 2-4 pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       You have completed \u001b[0;32m1 task\u001b[0m and have yet to complete \u001b[0;31m2 tasks.\u001b[0m"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mOOPS!!!! I\u0027m sorry, but I don\u0027t know what that means\u001b[0m"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mOOPS!!! The description of a todo cannot be empty\u001b[0m"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mOOPS!!! The description of a deadline cannot be empty.\u001b[0m"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mOOPS!!! The description of an event cannot be empty.\u001b[0m"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mOOPS!!! Missing deadline date/time\u001b[0m"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mOOPS!!! Missing deadline date/time\u001b[0m"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mInvalid task index! Please choose another index.\u001b[0m"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       \u001b[0;31mInvalid task index! Please choose another index.\u001b[0m"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       Bye. Hope my service has been satisfactory.Hope to see you again soon."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "       ______________________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 57
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "deadline return book /by 6 Sep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "event meeting /at mon 2-4 pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "deadline do something"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "event meeting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siddarth2824"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "siddarth2824": 4,
      "-": 37
    }
  }
]
