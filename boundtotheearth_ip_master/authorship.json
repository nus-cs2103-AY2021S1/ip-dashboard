[
  {
    "path": "src/main/java/farrell/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    UNDEFINED;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public static CommandType enumFromString(String string) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            return CommandType.valueOf(string.toUpperCase());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IllegalArgumentException exception) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 20
    }
  },
  {
    "path": "src/main/java/farrell/duke/DataManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class DataManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    final String filePath \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getAllTasks();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            FileWriter fw \u003d new FileWriter(dataFile);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String stringToWrite \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                switch (task.taskType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    ToDo todo \u003d (ToDo) task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    stringToWrite \u003d todo.taskType.name() + \"|\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            (todo.isDone ? \"true\" : \"false\") + \"|\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            todo.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    stringToWrite \u003d event.taskType.name() + \"|\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            (event.isDone ? \"true\" : \"false\") + \"|\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            event.description + \"|\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            event.time.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    stringToWrite \u003d deadline.taskType.name() + \"|\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            (deadline.isDone ? \"true\" : \"false\") + \"|\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            deadline.description + \"|\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                            deadline.time.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                fw.write(stringToWrite + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"Could not save file!\\nReason: \" + exception.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        if(!dataFile.exists()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                String dataLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                String[] data \u003d dataLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                TaskType taskType \u003d TaskType.enumFromString(data[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        taskList.add(new ToDo(data[2], Boolean.parseBoolean(data[1])));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        taskList.add(new Event(data[2], Boolean.parseBoolean(data[1]), LocalDate.parse(data[3])));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        taskList.add(new Deadline(data[2], Boolean.parseBoolean(data[1]), LocalDate.parse(data[3])));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                        throw new DukeException(\"Invalid data format provided!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    throw new DukeException(\"Not enough data provided!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            return new TaskList(taskList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"File could not be loaded!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 93
    }
  },
  {
    "path": "src/main/java/farrell/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Deadline(String description, LocalDate time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false, time);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Deadline(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        String formattedTime \u003d time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 25
    }
  },
  {
    "path": "src/main/java/farrell/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    static TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    static DataManager dataManager \u003d new DataManager();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    static UiManager uiManager \u003d new UiManager();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        uiManager.displayStartMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList \u003d dataManager.load();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            while (uiManager.hasUserInput()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                String input \u003d uiManager.getNextInput();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                CommandType command \u003d CommandType.enumFromString(splitInput[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                String parameters \u003d splitInput.length \u003e 1 ? splitInput[1] : null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                int result \u003d processCommand(command, parameters);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                if (result \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(exception.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public static int processCommand(CommandType command, String parameters) throws DukeException{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            ToDo todo \u003d new ToDo(parameters);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.addTask(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(\"Added: \" + todo.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String[] eventParameters \u003d parameters.split(\" /at \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Event event \u003d new Event(eventParameters[0], LocalDate.parse(eventParameters[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(\"Added: \" + event.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            String[] deadlineParameters \u003d parameters.split(\" /by \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineParameters[0], LocalDate.parse(deadlineParameters[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(\"Added: \" + deadline.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            int doneNumber \u003d Integer.parseInt(parameters);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.updateDone(doneNumber);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(\"Nice! I\u0027ve marked the this as done.\\n\" + taskList.getTask(doneNumber).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(taskList.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            int deleteNumber \u003d Integer.parseInt(parameters);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(\"I\u0027ve removed this task:\\n\" + taskList.getTask(deleteNumber).toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            taskList.deleteTask(deleteNumber);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            dataManager.save(taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            uiManager.printInWindow(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        case UNDEFINED:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"This command has not yet been implemented!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 75,
      "-": 3
    }
  },
  {
    "path": "src/main/java/farrell/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(\"Error! \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 12
    }
  },
  {
    "path": "src/main/java/farrell/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false, time);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Event(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        String formattedTime \u003d time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 25
    }
  },
  {
    "path": "src/main/java/farrell/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    TaskType taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void markAsDone(boolean done) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String getStatusString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[\" + getStatusString() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 29
    }
  },
  {
    "path": "src/main/java/farrell/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        Task deleteTask \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void updateDone(int taskNumber) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        Task task \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        task.markAsDone(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            sb.append(i + 1)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    .append(\". \")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                    .append(taskList.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            if(i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 52
    }
  },
  {
    "path": "src/main/java/farrell/duke/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    DEADLINE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public static TaskType enumFromString(String string) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return TaskType.valueOf(string.toUpperCase());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 11
    }
  },
  {
    "path": "src/main/java/farrell/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    ToDo(String description) throws DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    ToDo(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        if(description \u003d\u003d null || description.isEmpty()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 21
    }
  },
  {
    "path": "src/main/java/farrell/duke/UiManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "package main.java.farrell.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "public class UiManager {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    final String logo \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \" _\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"//\\\\\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"V  \\\\\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \" \\\\  \\\\_\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"  \\\\,\u0027.`-.\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"   |\\\\ `. `.\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"   ( \\\\  `. `-.                        _,.-:\\\\\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"    \\\\ \\\\   `.  `-._             __..--\u0027 ,-\u0027;/\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"     \\\\ `.   `-.   `-..___..---\u0027   _.--\u0027 ,\u0027/\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"      `. `.    `-._        __..--\u0027    ,\u0027 /\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"        `. `-_     ``--..\u0027\u0027       _.-\u0027 ,\u0027\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"          `-_ `-.___        __,--\u0027   ,\u0027\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"             `-.__  `----\\\"\\\"\\\"    __.-\u0027\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "            \"                   `--..____..--\u0027\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public boolean hasUserInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return scanner.hasNextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public String getNextInput() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void displayStartMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        printInWindow(\"Hello, I\u0027m a banana.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    public void printInWindow(String text) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        String divider \u003d \"---------------------------------------------\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "todo say hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "event read book /at Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "deadline return book /by Monday 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "alsdk;fjn"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 15
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "java -classpath ../bin main/java/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "boundtotheearth"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "boundtotheearth": 2,
      "-": 36
    }
  }
]
