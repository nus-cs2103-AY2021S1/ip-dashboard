{
  "authorDailyContributionsMap": {
    "kc-98": [
      {
        "date": "2020-08-18",
        "commitResults": [
          {
            "hash": "0b8a706e2b0ddebe1bef24d38232516838b312aa",
            "messageTitle": "Add the skeletal version of Duke",
            "messageBody": "Let\u0027s start by greeting the user. Duke will echo commands entered by the user, and exits\nwhen the user types the keyword \"bye\".\n\nTo enhance user experience, reserved keywords are added which the user can type\n\"help\" to view all of those, and there are also visual lining breaks to provide a\nclearer view of events.\n",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 23,
                "deletions": 0
              }
            }
          },
          {
            "hash": "64c5c0ae58177c6358f5b79ffc18a630f2387f66",
            "messageTitle": "Add ability to store user inputs",
            "messageBody": "Let\u0027s add an ability to store past user inputs so that a user is able to\nretrieve the contents of those should they be requested for.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 15,
                "deletions": 2
              }
            }
          },
          {
            "hash": "0fdad9ca887a4ace893cf4bf65385af7cb873500",
            "messageTitle": "Fix input bug",
            "messageBody": "Scanner input type: white spaces break scanner inputs\n\nScanner input is fixed to accept one entry divided by whitespace\n\nWe want the scanner input to be able to detect more than just a single\nword input to be more useful\n\nLet\u0027s,\n- change the scanner input type from .next() to .nextLine()\n",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "2d7ab3a61d9796f65b8f6a56869bfabc96779a1f",
            "messageTitle": "Add Task.java",
            "messageBody": "Let\u0027s add a Task.java to adhere to java OOP principles. We should use the Task\nto represent the user tasks instead of using the primitive String type.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 23,
                "deletions": 0
              }
            }
          },
          {
            "hash": "e8e145bee20e58631270bcf7e75fea5ce8dedff9",
            "messageTitle": "Add the ability to check a task as done",
            "messageBody": "Let\u0027s add the ability to check a task as done so that users can have a\nbetter visual understanding of which tasks they have left.\n\nPrompt the user if they are to provide an input that is not in line with\nthe required format.\n",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 17,
                "deletions": 3
              }
            }
          },
          {
            "hash": "3f4627254cdda6a34caefe8615fe3350e8f7c2a7",
            "messageTitle": "Change if-else condition format",
            "messageBody": "There were some corner cases for the \"done\" keyword that was found. For\nthe ease of splitting certain cases up, let\u0027s modify how conditions were being\nchecked, from directly using the user input to splitting it up via a white space.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 24,
                "deletions": 14
              }
            }
          },
          {
            "hash": "f97aaf73cc159588761511022d3210c41472dd80",
            "messageTitle": "Add Deadline.java",
            "messageBody": "Let\u0027s add a Deadline.java to adhere to java OOP inheritance principles. We should use\nthe specific Deadline for deadline type tasks.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 14,
                "deletions": 0
              }
            }
          },
          {
            "hash": "497de074bc5462d6520f65169d71a9e7bf31bd2a",
            "messageTitle": "Add ToDo.java",
            "messageBody": "Let\u0027s add a ToDo.java to adhere to java OOP inheritance principles. We should use\nthe specific ToDo for to-do type tasks.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 14,
                "deletions": 0
              }
            }
          },
          {
            "hash": "b18069083379b13e7c2a731a2a28a426cf652470",
            "messageTitle": "Add Event.java",
            "messageBody": "Let\u0027s add a Event.java to adhere to java OOP inheritance principles. We should use\nthe specific Event for event type tasks.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 14,
                "deletions": 0
              }
            }
          },
          {
            "hash": "dea36124a8f6a2d6bc5828525af2ff01322ec995",
            "messageTitle": "Add support for tracking 3 types of tasks",
            "messageBody": "Let\u0027s add 3 new conditions to handle 3 special input types of tasks.\nThis will allow the user to see which types of specific tasks there is\nremaining in the list and eases task handling for them.\n\nWe should also let user know the number of pending tasks there is\nremaining.\n\nLet\u0027s,\n- add a line of output that allow users to know the number of tasks\n  they have remaining after they added a new task.\n- add the 3 unqiue input types to our help keyword\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 63,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-19",
        "commitResults": [
          {
            "hash": "e1beca6359c60ebb4be42aa81f39086b2e636503",
            "messageTitle": "Update bin folder files to compile",
            "messageBody": "We\u0027ve included new java files, so we have to compile all of them\ninstead of just the original Duke.java\n",
            "fileTypesAndContributionMap": {
              "bat": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "c761d4908f14195102a123a7814921e832b12b36",
            "messageTitle": "Update Task.java status icon return",
            "messageBody": "getStatusIcon(): return UTF-8 encoding \\u2713 or \\u2718\n\nEXPECTED.TXT and ACTUAL.TXT are returning \"?\" instead of what\nthe UTF-8 encoding are supposed to return.\n\nWe want to manually type our UTF-8 encoding symbols to prevent\nconfusion.\n\nLet\u0027s,\n- change UTF-8 encoding \\u2713 or \\u2718 to \"✓\"  or  \"✘\" respectively\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "bd768169422cac78c5a0f7bee78681d84f60f78a",
            "messageTitle": "Fix Scanner NoSuchElementException",
            "messageBody": "Let\u0027s add another terminating condition, scanner.hasNext().\n\nThis is to tell the scanner to stop expecting a new line if .hasNext()\nreturns false so that we do not encounter this error.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 6,
                "deletions": 6
              }
            }
          },
          {
            "hash": "677d8076d2fdab2df57f9ab3913f5acd4f1e1ca0",
            "messageTitle": "Add input testcases",
            "messageBody": "Added some testcases in input.txt for testing purposes\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 4,
                "deletions": 0
              }
            }
          },
          {
            "hash": "cb426cc1bb27c451e11bd62010c9b6eff9b26baf",
            "messageTitle": "Add InvalidKeyWordException.java",
            "messageBody": "Let\u0027s add a Duke specific exception that is thrown to the user if they\ninput unknown keywords.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 6,
                "deletions": 0
              }
            }
          },
          {
            "hash": "e7136a20755ba5637d5bfb6570e23ce1b9b26bc5",
            "messageTitle": "Add EmptyTaskException.java",
            "messageBody": "Let\u0027s add a Duke specific exception that is thrown to the user if they\ninput a valid keyword followed by missing description.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 7,
                "deletions": 0
              }
            }
          },
          {
            "hash": "02bab559dd550176a9dbd00bb460662858b40c74",
            "messageTitle": "Add DukeException.java",
            "messageBody": "Let\u0027s add a Duke parent exception class so that our program can handle\nDuke specific exceptions.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 6,
                "deletions": 0
              }
            }
          },
          {
            "hash": "4d4987a6371062419879913d5528a02e174cd036",
            "messageTitle": "Update Duke input types and exceptions",
            "messageBody": "Duke accepts any form of input\n\nDuke might be buggy when faced with unsupported input formats.\n\nLet\u0027s narrow Duke\u0027s input validity based on the given keywords to the\nuser via the help keyword and inform users should there be any invalid\ninputs via exceptions\n\nThis can help the user plan their list in a more systematic structure\nand minimise bug experienced.\n\nLet\u0027s,\n- restrict our keywords to add tasks only if supported keywords are used\n (as shown by inputting \"help\") .\n- utilise Duke\u0027s customised exception classes wherever applicable to\n  enhance UI\n",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 156,
                "deletions": 96
              }
            }
          },
          {
            "hash": "3f2754a3da51c7af06476788f1c2bc2d7c6f4e76",
            "messageTitle": "Add DeleteFailureException.java",
            "messageBody": "Let\u0027s add a Duke specific exception that is thrown to the user if they\ninput an invalid deleting format or if there is an unexpected\ndeletion error.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 7,
                "deletions": 0
              }
            }
          },
          {
            "hash": "49610d61754958bd60c503d73e144ea0b339f155",
            "messageTitle": "Add deleting input type keyword",
            "messageBody": "Let\u0027s add a delete keyword so that the user is able to delete\ntasks off the existing list when they enter the correct delete\nformat as shown in under the help list.\n\nWe should also let user know the number of pending tasks there is\nremaining after deletion\n\nLet\u0027s,\n- add a line of output that allow users to know the number of tasks\n  they have remaining after they deleted an existing task.\n",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 22,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-24",
        "commitResults": [
          {
            "hash": "d2cfbc0291c92969cad9e44626011d56ab943f56",
            "messageTitle": "Update java import statements",
            "messageBody": "Let\u0027s explicitly state the java packages utilised to make the\nclass easier to comprehend and maintain.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 5,
                "deletions": 1
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "kc-98": {
      "java": 287,
      "md": 0,
      "fxml": 0,
      "sh": 0,
      "bat": 1,
      "gradle": 0,
      "txt": 4
    }
  },
  "authorContributionVariance": {
    "kc-98": 12166.413
  },
  "authorDisplayNameMap": {
    "kc-98": "ANG ..CHAO"
  }
}
