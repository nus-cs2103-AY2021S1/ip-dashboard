[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.security.spec.ECField;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String firstWord \u003d \"deadline\", secondWord \u003d \"/by\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(!s.substring(start, start + 8).equals(firstWord)) start++;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        start +\u003d 9;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(start \u003e\u003d len) return s.substring(len);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int end \u003d start + 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(end + 3 \u003c len \u0026\u0026 !s.substring(end, end + 3).equals(secondWord)) end++;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(end + 3 \u003e\u003d len) end \u003d len + 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start, end - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getTime(String s){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/by\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int i \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(i + 3 \u003c len \u0026\u0026 !s.substring(i, i + 3).equals(word)) i++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return i + 3 \u003d\u003d len ? \"\" : s.substring(i + 4);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String changeDateFormat(String[] command){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/by\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c command.length; i++){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[i].equals(word)){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(i + 1 \u003c command.length){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    command[i + 1] \u003d command[i + 1].replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getLocalTime(String[] command){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/by\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[i].equals(word)){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(i + 2 \u003c command.length){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Deadline of(String input){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String by \u003d getTime(input), description \u003d getDescription(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] command \u003d input.split(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int ptr \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(command[ptr].equals(\"\")) ptr++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(description.equals(\"\") || by.equals(\"\") || command[command.length - 1].equals(\"/by\") || ptr \u003d\u003d command.length - 1){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(changeDateFormat(command));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            deadline.setDate(date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(getLocalTime(command));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            deadline.setTime(time);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Deadline of(String description, String by, boolean isDone){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Deadline ddl \u003d new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] dateAndTime \u003d by.replace(\u0027/\u0027, \u0027-\u0027).split(\" \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ddl.setDate(d);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime t \u003d LocalTime.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ddl.setTime(t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return ddl;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setTime(LocalTime time){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalTime getTime(){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public boolean getIsDone(){return isDone;}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                (date \u003d\u003d null ? by : (date.toString() + \" (\" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\")) +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                (time !\u003d null ? \" \" + time.toString() : \"\") + \")\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 143
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    enum TaskType{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    // print all the content in the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e list){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println((i + 1) + list.get(i).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    // return the description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s, TaskType type){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(type \u003d\u003d TaskType.TODO){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            int start \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            while(!s.substring(start, start + 4).equals(\"todo\")) start++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return s.substring(start + 4);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String firstWord \u003d type \u003d\u003d TaskType.EVENT ? \"event\" : \"deadline\", secondWord \u003d type \u003d\u003d TaskType.EVENT ? \"/at\" : \"/by\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0, firstWordLen \u003d type \u003d\u003d TaskType.EVENT ? 5 : 8, len \u003d s.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(!s.substring(start, start + firstWordLen).equals(firstWord)) start++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        start +\u003d (firstWordLen + 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(start \u003e\u003d len) return s.substring(len);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int end \u003d start + 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(end + 3 \u003c len \u0026\u0026 !s.substring(end, end + 3).equals(secondWord)) end++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(end + 3 \u003e\u003d len) end \u003d len + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start, end - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    /*// return the description of Event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDeadlineDescription(String[] command, int ptr){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Boolean start \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d ptr; i \u003c command.length; i++){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[i].equals(\"/by\")) break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(start){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d (\" \" + command[i]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                start \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                res +\u003d command[i];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    // return the string after the substring \"/by\" or \"/at\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getTime(String s, TaskType type){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d type \u003d\u003d TaskType.EVENT ? \"/at\" : \"/by\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int i \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(i + 3 \u003c len \u0026\u0026 !s.substring(i, i + 3).equals(word)) i++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return i + 3 \u003d\u003d len ? \"\" : s.substring(i + 4);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    // return the string after the substring \"/by\" or \"/at\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDeadlineTime(String[] command){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int len \u003d command.length;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(len \u003c\u003d 0) return null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(i \u003c len \u0026\u0026 !command[i].equals(\"/by\")){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        i++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(i \u003c len){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            res +\u003d command[i++];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void writeArrayList2file(ArrayList\u003cTask\u003e list, FileWriter fileWriter){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            for(int i \u003d 0; i \u003c list.size(); i++){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(list.get(i) instanceof Todo){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    Todo todo \u003d (Todo)list.get(i);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    fileWriter.write(\"T|\" + (todo.isDone ? \"1\" : \"0\") + \"|\" + todo.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                else if(list.get(i) instanceof Deadline){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    Deadline ddl \u003d (Deadline)list.get(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    fileWriter.write(\"D|\" + (ddl.isDone ? \"1\" : \"0\") + \"|\" + ddl.getDescription() +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            \"|\" + ddl.getBy() + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    Event event \u003d (Event)list.get(i);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    fileWriter.write(\"E|\" + (event.isDone ? \"1\" : \"0\") + \"|\" + event.getDescription() +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            \"|\" + event.getAt() + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static ArrayList\u003cTask\u003e readTextFile2List(BufferedReader reader) throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while((line \u003d reader.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            String[] part \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(part[0].equals(\"T\")){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(new Todo(part[2], part[1].equals(\"1\")));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(part[0].equals(\"D\")){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(Deadline.of(part[2], part[3], part[1].equals(\"1\")));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(Event.of(part[2], part[3], part[1].equals(\"1\")));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    // returns string to be parsed to LocalTime"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getLocalTime(String[] command, TaskType type){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d type \u003d\u003d TaskType.DEADLINE ? \"/by\" : \"/at\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[i].equals(word)){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(i + 2 \u003c command.length){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 2];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String changeDateFormat(String[] command, TaskType type){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d type \u003d\u003d TaskType.DEADLINE ? \"/by\" : \"/at\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c command.length; i++){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[i].equals(word)){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(i + 1 \u003c command.length){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    command[i + 1] \u003d command[i + 1].replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 1];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void checkAndPrint(ArrayList\u003cTask\u003e list){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(list.get(i) instanceof Deadline){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Deadline ddl \u003d (Deadline)list.get(i);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(ddl.getDate() !\u003d null \u0026\u0026 ddl.getDate().equals(LocalDate.now()) \u0026\u0026 !ddl.getIsDone()){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Deadline: (\" + ddl.getDescription() + \") is due today\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(list.get(i) instanceof Event){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Event event \u003d (Event)list.get(i);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(event.getDate() !\u003d null \u0026\u0026 event.getDate().equals(LocalDate.now()) \u0026\u0026 !event.getIsDone()){"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Event: (\" + event.getDescription() + \") is today\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        // print greetings of chatbot"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                           \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                           \"What can I do for you?\" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                           \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        File outputFile \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        boolean dukeExist \u003d false;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(outputFile.exists()){"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list \u003d readTextFile2List(new BufferedReader(new FileReader(\"./data/duke.txt\")));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            dukeExist \u003d true;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        // add command entered by the user to the list"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String inputCommand;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] command;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int ptr;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            inputCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            command \u003d inputCommand.split(\" \");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            ptr \u003d 0;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            // if the user input is empty, continue the loop"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command.length \u003c\u003d 0 || inputCommand.equals(\"\")){"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"\\uD83D\\uDE43 OOPS!!! input cannot be empty.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            while(/*ptr \u003c command.length \u0026\u0026 */command[ptr].equals(\"\")) ptr++;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[ptr].equals(\"bye\")){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(command[ptr].equals(\"list\")){"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                printList(list);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(command[ptr].equals(\"done\")){"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(command[ptr + 1]);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    if(taskNumber \u003e list.size()){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        System.out.println(\"no such task: task \" + taskNumber + \" as you only have \" + list.size() + \" in total\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        Task task \u003d list.get(taskNumber - 1);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                catch (Exception e){"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 wrong input after the word \\\"done\\\"\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(command[ptr].equals(\"delete\")){"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(command[ptr + 1]);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    if(taskNumber \u003e list.size()){"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        System.out.println(\"no such task: task \" + taskNumber + \" as you only have \" + list.size() + \" in total\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        Task task \u003d list.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        System.out.println(task.toString());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                catch (Exception e){"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 wrong input after the word \\\"delete\\\"\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(command[ptr].equals(\"todo\")){"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                /*String description \u003d getDescription(inputCommand, TaskType.TODO);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(description.equals(\"\") || ptr \u003d\u003d command.length - 1){"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }*/"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Todo newTodo \u003d Todo.of(inputCommand);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(newTodo \u003d\u003d null){"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(newTodo);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        newTodo.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        String.format(\"Now you have %d tasks in the list.\", list.size()) +"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(command[ptr].equals(\"deadline\")){"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                /*String by \u003d getTime(inputCommand, TaskType.DEADLINE), description \u003d getDescription(inputCommand, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(description.equals(\"\") || by.equals(\"\") || command[command.length - 1].equals(\"/by\") || ptr \u003d\u003d command.length - 1){"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description and time of a deadline cannot be empty.\" +"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            \" Or maybe you used \\\"at\\\" instead of \\\"by\\\"?\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }*/"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Deadline deadline \u003d Deadline.of(inputCommand);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(deadline \u003d\u003d null){"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description and time of a deadline cannot be empty.\" +"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            \" Or maybe you used \\\"at\\\" instead of \\\"by\\\"?\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                /*System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(changeDateFormat(command, TaskType.DEADLINE));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    deadline.setDate(date);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                catch(Exception e){"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong date input format. Correct format should be \\\"YYYY-MM-DD\\\"\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(getLocalTime(command, TaskType.DEADLINE));"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    deadline.setTime(time);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                catch (Exception e){"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong time format. Correct format should be \\\"HH:MM\\\"\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }*/"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(deadline.getDate() \u003d\u003d null){"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong date input format. Correct format should be \\\"YYYY-MM-DD\\\"\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(deadline.getTime() \u003d\u003d null){"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong time format. Correct format should be \\\"HH:MM\\\"\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        deadline.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        String.format(\"Now you have %d tasks in the list.\", list.size()) +"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else if(command[ptr].equals(\"event\")){"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                /*String at \u003d getTime(inputCommand, TaskType.EVENT), description \u003d getDescription(inputCommand, TaskType.EVENT);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(description.equals(\"\") || at.equals(\"\") || command[command.length - 1].equals(\"/at\") || ptr \u003d\u003d command.length - 1){"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description and time of a event cannot be empty.\" +"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            \" Or maybe you used \\\"by\\\" instead of \\\"at\\\"?\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }*/"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                Event event \u003d Event.of(inputCommand);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(event \u003d\u003d null){"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"\\uD83D\\uDE43 OOPS!!! The description and time of a event cannot be empty.\" +"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                            \" Or maybe you used \\\"by\\\" instead of \\\"at\\\"?\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                /*try{"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(changeDateFormat(command, TaskType.EVENT));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    event.setDate(date);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                catch(Exception e){"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong date input format. Correct format should be \\\"YYYY-MM-DD\\\"\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    String s \u003d getLocalTime(command, TaskType.EVENT);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(s);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(getLocalTime(command, TaskType.EVENT));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    event.setTime(time);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                catch (Exception e){"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong time format. Correct format should be \\\"HH:MM\\\"\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }*/"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(event.getDate() \u003d\u003d null){"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong date input format. Correct format should be \\\"YYYY-MM-DD\\\"\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(event.getTime() \u003d\u003d null){"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    System.out.println(\"Wrong time format. Correct format should be \\\"HH:MM\\\"\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        event.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        String.format(\"Now you have %d tasks in the list.\", list.size()) +"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                /*Task task \u003d new Task(inputCommand);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        String.format(\"Now you have %d tasks in the list.\", list.size()) +"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        \"\\n____________________________________________________________\");*/"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                System.out.println(\"\\uD83D\\uDE43 Sorry~ please specify whether this is a todo or a deadline or a event\\n\" +"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                        \"put the word \\\"todo\\\" or \\\"deadline\\\" or \\\"event\\\" in front of your description\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(!dukeExist){"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            new File(\"./data\").mkdir();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        writeArrayList2file(list, fileWriter);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        checkAndPrint(list);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                           \"Bye. Hope to see you again soon!\" +"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                           \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 393,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String firstWord \u003d \"event\", secondWord \u003d \"/at\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(!s.substring(start, start + 5).equals(firstWord)) start++;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        start +\u003d 6;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(start \u003e\u003d len) return s.substring(len);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int end \u003d start + 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(end + 3 \u003c len \u0026\u0026 !s.substring(end, end + 3).equals(secondWord)) end++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(end + 3 \u003e\u003d len) end \u003d len + 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start, end - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getTime(String s){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/at\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int i \u003d 0, len \u003d s.length();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(i + 3 \u003c len \u0026\u0026 !s.substring(i, i + 3).equals(word)) i++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return i + 3 \u003d\u003d len ? \"\" : s.substring(i + 4);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String changeDateFormat(String[] command){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/at\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c command.length; i++){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[i].equals(word)){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(i + 1 \u003c command.length){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    command[i + 1] \u003d command[i + 1].replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getLocalTime(String[] command){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String word \u003d \"/at\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        for(int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            if(command[i].equals(word)){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                if(i + 2 \u003c command.length){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return command[i + 2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Event of(String input){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String by \u003d getTime(input), description \u003d getDescription(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] command \u003d input.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int ptr \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(command[ptr].equals(\"\")) ptr++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(description.equals(\"\") || by.equals(\"\") || command[command.length - 1].equals(\"/at\") || ptr \u003d\u003d command.length - 1){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Event event \u003d new Event(description, by);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(changeDateFormat(command));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setDate(date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(getLocalTime(command));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setTime(time);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Event of(String description, String at, boolean isDone){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        Event event \u003d new Event(description, at, isDone);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String[] dateAndTime \u003d at.replace(\u0027/\u0027, \u0027-\u0027).split(\" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setDate(d);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            LocalTime t \u003d LocalTime.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            event.setTime(t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void setTime(LocalTime time){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public LocalTime getTime(){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public boolean getIsDone(){return isDone;}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                (date \u003d\u003d null ? at : (date.toString() + \" (\" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\")) +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "                (time !\u003d null ? (\" \" + time.toString()) : \"\") + \")\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 142
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    enum TaskType{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s, TaskType type){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(type \u003d\u003d TaskType.TODO){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            int start \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            while(!s.substring(start, start + 4).equals(\"todo\")) start++;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(start + 4);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return s.substring(start + 4);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String firstWord \u003d type \u003d\u003d TaskType.EVENT ? \"event\" : \"deadline\", secondWord \u003d type \u003d\u003d TaskType.EVENT ? \"/at\" : \"/by\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0, firstWordLen \u003d type \u003d\u003d TaskType.EVENT ? 5 : 8, len \u003d s.length();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(!s.substring(start, start + firstWordLen).equals(firstWord)) start++;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        start +\u003d (firstWordLen + 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(start \u003e\u003d len) return s.substring(len);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int end \u003d start + 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(end + 3 \u003c len \u0026\u0026 !s.substring(end, end + 3).equals(secondWord)) end++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(end + 3 \u003e\u003d len) end \u003d len + 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start, end - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 55
    }
  },
  {
    "path": "src/main/java/Test.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Test {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        File output \u003d new File(\"data\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(output.mkdir());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter( \"./data/duke.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fileWriter.write(\"asdf\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fileWriter.write(\"ert\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            System.out.println(\"write\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static String getDescription(String s){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        int start \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        while(!s.substring(start, start + 4).equals(\"todo\")) start++;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        System.out.println(start + 4);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return s.substring(start + 4);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public static Todo of(String input){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        String description \u003d getDescription(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        if(description.equals(\"\")){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return new Todo(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public Todo(String description, boolean isDone){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "todo abc"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "event def /at 123"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "deadline ghi /by 456"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "deadline jkl /by 789"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhdqirui"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hhdqirui": 1,
      "-": 37
    }
  }
]
