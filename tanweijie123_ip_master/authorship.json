[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        //Mods"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.displayPicture.setClip(new Circle(45,50,45));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.setPadding(new Insets(20,10,20,10));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.dialog.setPadding(new Insets(0,10,0,10));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.dialog.setTextAlignment(TextAlignment.RIGHT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.dialog.setTextAlignment(TextAlignment.LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.TURQUOISE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.LIME, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 67
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "//TODO: Stretch Goals: Level 8- Use date related command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * Driver of {@code Duke} programme."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static final String DATA_FILE \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Initialises the Duke programme and load tasks from default file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        storage \u003d new Storage(DATA_FILE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ui.showLoadSuccess(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Initialises the Duke programme and load tasks from data file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param filePath Path of data file to be loaded from."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ui.showLoadSuccess(taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Executes the {@code Duke} programme."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @deprecated For GUI, use {@link #run(String)} instead."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        while (!Command.isTerminated) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                c.execute(taskList, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                ui.printError(de);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Executes the {@code Duke} programe using the input provided"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param input Command to run."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void run(String input) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (Command.isTerminated)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            c.execute(taskList, ui);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            if (c instanceof ExitCommand) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                terminate();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ui.printError(de);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Performs saving and clean up on programme termination."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void terminate() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        storage.saveToFile(taskList.export());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Duke duke \u003d new Duke(DATA_FILE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        duke.terminate();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Retrieves the output buffer to display in UI."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return output string."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String getUiUpdate() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return ui.flush();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 112,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().update();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            stage.setTitle(\"Duke Bot\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            //Add action when pressing on close button"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            stage.setOnCloseRequest((event -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                fxmlLoader.\u003cMainWindow\u003egetController().handleCloseBtnClicked();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 34
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (Command.isTerminated) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Stage stage \u003d (Stage) userInput.getScene().getWindow();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        duke.run(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String response \u003d duke.getUiUpdate();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty()); //Set auto scroll"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void update() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                DialogBox.getDukeDialog(duke.getUiUpdate(), dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void handleCloseBtnClicked() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        duke.run(\"exit\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 65
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code AddCommand} is a child of {@code Command} object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      On execution, it will add a given task into the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a AddCommand which adds a new task to the list on execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param t The task to be added into the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public AddCommand (Task t) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Adds task into task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param ui The displaying user interface."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ui.showAddTask(this.task, tasks.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 35
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code Command} is an abstract object which wraps the user\u0027s instruction into Command objects and execute."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /** Status of the {@code Duke} programme. True if programme is exited. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public static boolean isTerminated \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Execute the wrapped instruction."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param ui The displaying user interface."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 20
    }
  },
  {
    "path": "src/main/java/duke/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * The list of commands available for {@code Duke}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public enum CommandList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    bye,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    exit,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    list,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    todo,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    deadline,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    event,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    done,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    delete,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    find"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code DeleteCommand} is a child of {@code Command} object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      On execution, it will delete a given index from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a DeleteCommand which deletes a task from the list on execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param idx Index of the task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public DeleteCommand (int idx) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Deletes the given task index from the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param ui The displaying user interface."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Task t \u003d tasks.remove(idx);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ui.showRemoveTask(t, tasks.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I cannot delete this element: \" + idx);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code DoneCommand} is a child of {@code Command} object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      On execution, it will mark the given task in the task list as completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a DoneCommand which marks a task from the list as completed on execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param idx Index of the task to be marked as completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public DoneCommand(int idx) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Marks the given task index as completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param ui The displaying user interface."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Task t \u003d tasks.get(idx);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ui.showDone(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I cannot check this element: \" + idx);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code ExitCommand} is a child of {@code Command} object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      On execution, it will set the isTerminated flag to true to stop the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Set the isTerminated flag to true."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param ui The displaying user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Command.isTerminated \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 22
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code FindCommand} is a child of {@code Command} object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      On execution, it will search all task description and list those who matched the search criteria."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private String search;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a FindCommand which search the keyword on execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param search Keyword to search."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public FindCommand(String search) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.search \u003d search;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Searches all the task\u0027s description and list the task with that keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param ui The displaying user interface."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        List\u003cTask\u003e hits \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        List\u003cInteger\u003e idxList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            if (tasks.get(i-1).getDesc().contains(search)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                hits.add(tasks.get(i-1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                idxList.add(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ui.printSearchResult(search, idxList, hits);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 46
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code ListCommand} is a child of {@code Command} object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      On execution, it will display all the tasks currently in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays all the tasks currently in the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks The list of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param ui The displaying user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 22
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code DukeException} is an all-in-one exception used by {@code Duke} programme"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      to wrap and display exceptions in a user-friendly message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructor of a {@code DukeException}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param msg Message to be displayed for user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(\":( \\nI dont understand this... \\n\" + msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class is a deadline type of task. Users are able to store the due date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private LocalDateTime taskBy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a Deadline-type task with a description and due date/time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param desc The description of this task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param by The due date/time of this task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Deadline(String desc, LocalDateTime by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.taskBy \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (this.desc.isBlank() || this.taskBy \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description or date of \\\"deadline\\\" cannot be empty\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String getSaveToFileString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return \"D`\" + super.getSaveToFileString() + \"`\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                taskBy.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                taskBy.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class is a event type of task. Users are able to store the event time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private LocalDateTime taskDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a Event-type task with a description and event time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param desc The description of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param taskDateTime The date and time of this event occurring."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Event(String desc, LocalDateTime taskDateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (this.desc.isBlank() || this.taskDateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description or date of \\\"event\\\" cannot be empty\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String getSaveToFileString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return \"E`\" + super.getSaveToFileString() + \"`\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                taskDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                taskDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * {@code Task} is an abstract object which dictates the minimal structure every Task should have"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " *      and capable of performing."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Task { //TODO: convert to abstract class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /** Description for this task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /** The completion status of this task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param desc The description for this task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    protected Task(String desc) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this(desc,false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a task object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param desc The description for this task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param isDone The completion status of this task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    protected Task(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Marks this task as completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Gets the description of this task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The description for this task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Gets the export-style String for this task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return Export-style string."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String getSaveToFileString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"%d`%s\", (this.isDone) ? 1 : 0, this.desc);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Returns the string output of this task for user\u0027s display."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[%c] %s\", (this.isDone) ? \u0027\\u2713\u0027 : \u0027\\u2718\u0027, this.desc);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 67
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class is a ToDo type of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a ToDo task with the given description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param desc The description of this task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (this.desc.isBlank()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description cannot be empty\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String getSaveToFileString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return \"T`\" + super.getSaveToFileString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 37
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.CommandList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "//TODO: change exceptions to throw from creation instead of checking."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class will translate the user\u0027s input into command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Returns the command type of the user\u0027s input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param cmd User\u0027s input in String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return Command object that is related to user\u0027s input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @throws DukeException if the input string does not contain a valid command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public static Command parse(String cmd) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        int idx \u003d cmd.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        CommandList commandList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            commandList \u003d (idx \u003e 0) ? CommandList.valueOf(cmd.substring(0, idx)) : CommandList.valueOf(cmd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IllegalArgumentException iae) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"This is not in my command list\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        switch (commandList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case bye: //fallthrough"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case exit:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case todo:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            command \u003d new AddCommand(todo(cmd.substring(4).strip()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case deadline:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            command \u003d new AddCommand(deadline(cmd.substring(8)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case event:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            command \u003d new AddCommand(event(cmd.substring(5)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case done:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                int selected \u003d Integer.parseInt(cmd.substring(4).strip());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                command \u003d new DoneCommand(selected - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                throw new DukeException(\"This is not a number for \\\"done\\\" command: \" + cmd.substring(4));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case delete:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                int selected \u003d Integer.parseInt(cmd.substring(6).strip());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                command \u003d new DeleteCommand(selected - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                throw new DukeException(\"This is not a number for \\\"delete\\\" command: \" + cmd.substring(6));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case find:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            command \u003d new FindCommand(cmd.substring(4).strip());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    //TODO: to be removed since ToDo checks for description_blank"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static ToDo todo(String string) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (string.isBlank()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description cannot be empty\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return new ToDo(string);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static Deadline deadline(String string) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] split \u003d string.split(\"/by\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I can\u0027t find the \\\"/by\\\" keyword...\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split[0].isBlank() || split[1].isBlank()) { //TODO: can be removed since check is done in constructor"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description or deadline of \\\"deadline\\\" cannot be empty\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return new Deadline(split[0].strip(), Util.convertStringToDateTime(split[1].strip()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static Event event(String string) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] split \u003d string.split(\"/at\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I can\u0027t find the \\\"/at\\\" keyword...\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split[0].isBlank() || split[1].isBlank()) {//TODO: can be removed since check is done in constructor"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description or date of \\\"event\\\" cannot be empty\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return new Event(split[0].strip(), Util.convertStringToDateTime(split[1].strip()));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 117
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class will handle the retrieving and storing into data file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /** The filepath to store or retrieve from. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a storage object with the given file path."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param filePath The filepath to interact with."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Creates the file if it does not exist in the system."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @throws DukeException if the creation of new file is not successful."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private void createFileIfNotExist() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (file.isDirectory()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            file.mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                throw new DukeException(io.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Reads the content of the file provided and store it in a list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The content of the file as a list of string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public List\u003cString\u003e load() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        createFileIfNotExist();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return readAllLines();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private List\u003cString\u003e readAllLines() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        List\u003cString\u003e content \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Scanner readFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            while(readFile.hasNextLine()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                String ln \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                content.add(ln);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"Unable to find file\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Saves the list of Strings into the file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param contents A list of Strings to store into file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The status of which the saving to file is successful."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public boolean saveToFile(List\u003cString\u003e contents) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        createFileIfNotExist();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            FileWriter writer \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            for (String s : contents) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                writer.write(s + \"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 95
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class handles the list of task for {@code Duke}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /** The list of task added by the user. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs an empty task list which utilised an {@code ArrayList}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a task list given a list of Strings for task input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param input List of inputs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public TaskList(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        for (String s: input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            taskList.add(Util.convertStringToTask(s));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Exports all the task within the task list into a list of Strings."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return List of task outputs."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public List\u003cString\u003e export() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return taskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                .map(x -\u003e x.getSaveToFileString())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Returns the number of elements in this list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The number of elements in this list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Returns the element at the specified position in this list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param i index of the element to return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The element at the specified position in this list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Appends the specified element to the end of this list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param t element to be appended to this list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The status of adding to list is successful."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public boolean add(Task t) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return taskList.add(t);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Removes the element at the specified position in this list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param idx The index of the element to be removed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The element that was removed from the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Task remove(int idx) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return taskList.remove(idx);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 87
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class handles the user-specific inputs and outputs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Output buffer for GUI output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Only writable from println()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Only erasable from flush()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private String outputBuffer \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Constructs a new UI object, and displays a welcome message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        intro();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Prints the output into the class buffer."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param message message to be appended to the buffer."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private void println(String... message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        for (int i \u003d 0; i \u003c message.length; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            outputBuffer +\u003d message[i] + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Retrieves the output buffer to display in GUI."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return output string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String flush() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String output \u003d this.outputBuffer;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        outputBuffer \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private void intro() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(\"Hello! I\u0027m KING!\", \"Let me load the stored file ~~ \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the page where retrieving from data file is successful and prints the list of task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *      currently within the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void showLoadSuccess(TaskList taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        printList(taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the page where retrieving from data file is not successful."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(\"I\u0027m unable to retrieve the stored file.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the list of task currently in task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            println(\"I can\u0027t find any task in your list...\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    \"Try adding some task using \\\"todo\\\", \\\"deadline\\\" and \\\"event\\\" command\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] output \u003d new String[taskList.size() + 1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        output[0] \u003d \" Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            output[i] \u003d i + \".\" + taskList.get(i-1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(output);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the exit page."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(\"Saved your file! Hope to see you again soon!\", \"\\n\\nEnter any character to exit . . .\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the page where addition of task is successful."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param task The task newly added into the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param size The size of the task list after adding."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                \"Got it. I\u0027ve added this task: \", task.toString(),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                \"Now you have \" + size + \" tasks in the list.\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the page where removal of task is successful."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param task The task to be removed from the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param size The size of the task list after removal."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void showRemoveTask(Task task, int size) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println( \"Noted. I\u0027ve removed this task: \", task.toString(),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                \"Now you have \" + size + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the page where a task has been marked as completed."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param task The task that was marked completed."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(\"Nice! I\u0027ve marked this task as done: \", task.toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the error message to the user\u0027s console."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param de The exception encountered during execution."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void printError(DukeException de) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(de.getMessage());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Displays the page with search keyword and search result."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param searchTerm Searched keyword"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param idxList Index of the task selected"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param tasks Task selected based on the searched keyword."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void printSearchResult(String searchTerm, List\u003cInteger\u003e idxList, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            println(\"I can\u0027t find any task named \\\"\" + searchTerm + \"\\\" in the list...\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] output \u003d new String[tasks.size() + 1];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        output[0] \u003d \" Here are the matching tasks according to your search keyword: \\\"\" + searchTerm + \"\\\"\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            output[i] \u003d idxList.get(i-1) + \".\" + tasks.get(i-1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(output);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 163
    }
  },
  {
    "path": "src/main/java/duke/util/Util.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " * This class contains the utility methods for the programme."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Util {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static final String TASK_DELIMITER \u003d \"`\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Converts a String type date and time into a {@code LocalDateTime} object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param dateTime The String of Date/Time. Formats accepted: \"YYYY-MM-dd HHmm\", \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *                 and their date equivalent."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The {@code LocalDateTime} object from the given input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @throws DukeException if the input string does not follow the above format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public static LocalDateTime convertStringToDateTime(String dateTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        //Allow format of \"YYYY-MM-dd HHmm\", \"dd/MM/yyyy HHmm\"; Set HHmm to 0000 if not found."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            if (!dateTime.contains(\" \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                dateTime \u003d dateTime + \" 0000\"; //pad with time if the input only contains date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            if (dateTime.charAt(4) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            } else if (dateTime.charAt(2) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                throw new DukeException(\"Invalid Date / time format...\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DateTimeParseException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"Invalid Date / time format...\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Converts a String type input into {@code Task} object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param string The string to be converted."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @return The {@code Task} object from the given input"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @throws DukeException if the given input does not match the input format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public static Task convertStringToTask(String string) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] split \u003d string.split(TASK_DELIMITER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        //TODO: may want to check for file modification. Or invalid line input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        switch (split[0]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            t \u003d new ToDo(split[2]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            t \u003d new Deadline(split[2], convertStringToDateTime(split[3]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            t \u003d new Event(split[2], convertStringToDateTime(split[3]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"Error in reading this line...\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split[1].equals(\"1\"))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 78
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void deadlineCreation_normalInput_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"read book\", LocalDateTime.of(2020,02,14,15,50));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"[D][\\u2718] read book (by: Feb 14 2020 1550)\", deadline.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void deadlineCreation_noDesc_exceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"\", LocalDateTime.now());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.assertEquals("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    new DukeException(\"The description or date of \\\"deadline\\\" cannot be empty\").getMessage(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    de.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void deadlineCreation_dateTimeIsNull_exceptionThrown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"Lunch\", null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.assertEquals("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    new DukeException(\"The description or date of \\\"deadline\\\" cannot be empty\").getMessage(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    de.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void deadlineDone_setDone_success() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"read book\", LocalDateTime.parse(\"2019-09-11T13:40\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        deadline.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"[D][\\u2713] read book (by: Sep 11 2019 1340)\", deadline.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void deadlineExport_noInput_success() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"wash clothes\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                LocalDateTime.parse(\"10/11/2018 0800\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        deadline.setDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"D`1`wash clothes`10/11/2018 0800\", deadline.getSaveToFileString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 55
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void eventCreation_normalInput_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Event event \u003d new Event(\"read book\", LocalDateTime.of(2020,02,14,15,50));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"[E][\\u2718] read book (at: Feb 14 2020 1550)\", event.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void eventCreation_noDesc_exceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Event event \u003d new Event(\"\", LocalDateTime.now());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.assertEquals("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    new DukeException(\"The description or date of \\\"event\\\" cannot be empty\").getMessage(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    de.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void eventCreation_dateTimeIsNull_exceptionThrown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Event event \u003d new Event(\"Lunch\", null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.assertEquals("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    new DukeException(\"The description or date of \\\"event\\\" cannot be empty\").getMessage(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    de.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void eventDone_setDone_success() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Event event \u003d new Event(\"read book\", LocalDateTime.parse(\"2019-09-11T13:40\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        event.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"[E][\\u2713] read book (at: Sep 11 2019 1340)\", event.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void eventExport_noInput_success() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Event event \u003d new Event(\"wash clothes\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                LocalDateTime.parse(\"10/11/2018 0800\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        event.setDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"E`1`wash clothes`10/11/2018 0800\", event.getSaveToFileString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 55
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void todoCreation_normalInput_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ToDo todo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"[T][\\u2718] read book\", todo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void todoCreation_noDesc_exceptionThrown() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            ToDo todo \u003d new ToDo(\"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Assertions.assertEquals(new DukeException(\"The description cannot be empty\").getMessage(), de.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void todoDone_setDone_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ToDo todo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        todo.setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"[T][\\u2713] read book\", todo.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void todoExport_noInput_success() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ToDo todo \u003d new ToDo(\"wash clothes\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        todo.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Assertions.assertEquals(\"T`1`wash clothes\", todo.getSaveToFileString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "todo join go home club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "todo do java prog"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "@pause"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 4,
      "-": 20
    }
  }
]
