[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    Duke(Scanner input, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    void commandHandler() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    System.out.println(\"That\u0027s it? That\u0027s a shame. Well, see you later then.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    this.input.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    this.printList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                } else if (command.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (command.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new UnknownTaskException(\"No task number entered\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    this.taskDone(taskNo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                } else if (command.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    String description \u003d command.substring(5);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    this.addToList(new ToDo(description));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                } else if (command.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    String[] splitArr \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new UnknownTimeException(\"No by time added\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    String description \u003d splitArr[0].substring(8);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (splitArr[1].length() \u003c\u003d 3) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new EmptyTimeException(\"No time entered\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    String by \u003d splitArr[1].substring(3);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    this.addToList(new Deadline(description, by));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                } else if (command.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    String[] splitArr \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new UnknownTimeException(\"No by time added\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    String description \u003d splitArr[0].substring(5);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (splitArr[1].length() \u003c\u003d 3) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new EmptyTimeException(\"No time entered\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    String at \u003d splitArr[1].substring(3);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    this.addToList(new Event(description, at));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                } else if (command.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    if (command.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        throw new UnknownTaskException(\"No task number entered\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    this.removeFromList(taskNo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                    throw new UnknownCommandException(\"Unknown command entered\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } catch (EmptyDescriptionException empty) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                System.out.println(\"Mate, you\u0027ve gotta let me know what you\u0027re gonna be doing.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } catch (UnknownCommandException com) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                System.out.println(\"Um, are you sure that\u0027s not gibberish?\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } catch (UnknownTimeException by) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                System.out.println(\"You\u0027ve gotta let me know the time.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } catch (EmptyTimeException at) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                System.out.println(\"There has to be a time, surely. Don\u0027t leave it blank!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } catch (UnknownTaskException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                System.out.println(\"C\u0027mon, I don\u0027t live in your head, you gotta tell me the task number!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    void addToList(Task task) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"Alright matey, I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"Looks like you have \" + this.list.size() + \" tasks in total.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    void taskDone(int taskNo) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task toBeDone \u003d this.list.get(taskNo);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        toBeDone.markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list.set(taskNo, toBeDone);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"Good Job, this task is now done:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(toBeDone);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    void removeFromList(int taskNo) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task removedTask \u003d this.list.remove(taskNo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"Well, if you insist. I\u0027ve removed:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(removedTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    void printList() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.list.size(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            System.out.println(i + \". \" + this.list.get(i - 1));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"Yo what\u0027s up! The name\u0027s Juke\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"What do you need?\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Duke duke \u003d new Duke(input, list);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        duke.commandHandler();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 129,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 5
    }
  },
  {
    "path": "src/main/java/EmptyTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class EmptyTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public EmptyTimeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 10
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 5
    }
  },
  {
    "path": "src/main/java/UnknownTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 5
    }
  },
  {
    "path": "src/main/java/UnknownTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownTimeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "todo Shopping"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "deadline CS2103T Project /by Thursday Night"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "event National Day Holiday /at August 9"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDo.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 1,
      "-": 20
    }
  }
]
