[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"    archiveAppendix \u003d null"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":32,"TCQian":19}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"E | 1 | TDC Meeting | Sep 02 2020 10:00"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"D | 0 | TDC Tshirt Design | Sep 12 2020 23:59"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"T | 0 | CS2103T"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"E | 1 | choir meeting | Sep 2 2020 07:00"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"D | 0 | CS2106 Lab Assignment | Sep 05 2020 23:59"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"T | 0 | KE Web CCA slide"}],"authorContributionMap":{"TCQian":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"#### Table Of Contents"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"\u003ca href\u003d\"#1\"\u003e1. What is Duke?\u003c/a\u003e"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"\u003cbr /\u003e"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"\u003ca href\u003d\"#2\"\u003e2. Features\u003c/a\u003e"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"\u003cbr /\u003e"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"\u003ca href\u003d\"#3\"\u003e3. Getting Started\u003c/a\u003e"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"\u003cbr/\u003e"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003ca href\u003d\"#3.1\"\u003e3.1 How to install Duke?\u003c/a\u003e"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"\u003cbr/\u003e"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003ca href\u003d\"#3.1\"\u003e3.2 How to use Duke?\u003c/a\u003e"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"\u003cbr /\u003e"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"\u003ca href\u003d\"#4\"\u003e4. Contact Us\u003c/a\u003e"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"## \u003ca id\u003d\"1\"\u003e1. What is Duke?\u003c/a\u003e"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"Duke is a task management tool which will help the users to manage their tasks. The users can use Duke with the least actions to do the most complicated task management. "},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"## \u003ca id\u003d\"#2\"\u003e2. Features\u003c/a\u003e"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"1. **Add a task**"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    * Type of tasks:"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"    1. `todo`: a task to be done."},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    1. `event`: a event that happens at the given time."},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"    1. `deadline`: a task to be done before the deadline."},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    "},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"1. **Check the list of tasks**"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"   * `list` out the tasks saved in the application."},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"  "},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"1. **Find the tasks**"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"   * `find` the tasks that have same keyword in the their task description."},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"   "},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"1. **Delete the task**"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"   * `delete` the unwanted task from the list of tasks."},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"   "},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"1. **Mark the task as done**"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"   * mark the task as `done` after the user has complete the task."},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"   "},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"1. **Undo the action**"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"   * `undo` the wrong action and set the list of tasks back to the previous list."},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"   "},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"## \u003ca id\u003d\"#3\"\u003e3. Getting Started\u003c/a\u003e"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":" "},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"### \u003ca id\u003d\"3.1\"\u003e 3.1 How to install Duke?\u003c/a\u003e"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"  * Download the jar file [here] (https://github.com/TCQian/ip/releases/tag/v0.2)"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"  * Open the jar file and hava fun with it."},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"   "},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"### \u003ca id\u003d\"3.2\"\u003e3.2 How to use Duke?\u003c/a\u003e"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"   Command | Purpose | Result"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"   ----------- | ----------- | ----------- "},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"   `todo` [Description]                                        | Add a task of todo type to the list of tasks                           | New task added onto the list with the tag of `[T]`."},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"   `event` [Description] + \"/at\" + [Time (dd/ mm/ yy hhmm)]    | Add a task of event type to the list of tasks                          | New task added onto the list with the tag of `[E]`."},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"   `deadline` [Description] + \"/by\" + [Time (dd/ mm/ yy hhmm)] | Add a task of deadline type to the list of tasks                       | New task added onto the list with the tag of `[D]`."},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"   `list`                                                      | List out the taks.                                                     | A list of tasks is shown."},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"   `done`                                                      | Mark the task as done.                                                 | The marked task is shown on the list with the tag of `[/]` to indicate its status of completion is done."},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"   `delete`                                                    | Delete the unwanted task.                                              | A new list of tasks is shown without the deleted task."},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"   `undo`                                                      | Undo the action.                                                       | The list of tasks from previous action will be shown."},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"   `find`                                                      | Find the tasks that the description of the tasks contains the keyword. | Only the tasks match the requirement will be shown."},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"## \u003ca id\u003d\"#4\"\u003e4. Contact Us\u003c/a\u003e"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":" For any issues, queries or suggestion, feel free to contact the developer with the github account name : [TCQian](https://github.com/TCQian)"}],"authorContributionMap":{"TCQian":60}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import javaFx.MainWindow;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":32}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import command.Command;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import command.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import command.EventCommand;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"import command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"import command.TodoCommand;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"import command.UndoCommand;"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"import exception.DukeException;"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":" * Parser handles the user input and parse them to corresponding command class."},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     * Parses user input to corresponding command class."},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"     * @param input user input."},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"     * @return the object of command class."},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"     * @throws DukeException exception for invalid user input."},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"        assert input.length() \u003e 0 : \"There is no user input.\";"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"        String[] words \u003d input.split(\"\\\\s\");"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"        String firstWord \u003d words[0];"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        if (input.equals(\"bye\")) { //bye command"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"            return new ByeCommand();"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"        } else if (input.equals(\"list\")) { //list command"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"            System.out.println(\"list\");"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"            return new ListCommand();"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"        } else if (input.equals(\"undo\")) {"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"            return new UndoCommand();"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"        } else if (firstWord.equals(\"find\")) { //find command"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"            return new FindCommand(words);"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"        } else if (firstWord.equals(\"done\")) { //done command"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"            return new DoneCommand(words);"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        } else if (firstWord.equals(\"delete\")) { //done command"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"            System.out.println(\"delete\");"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"            return new DeleteCommand(words);"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"        } else if (firstWord.equals(\"todo\")) { //todo command"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"            System.out.println(\"todo\");"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"            return new TodoCommand(words);"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"        } else if (firstWord.equals(\"deadline\")) { //complete deadline command"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"            return new DeadlineCommand(words);"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"        } else if (firstWord.equals(\"event\")) {"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"            return new EventCommand(words);"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"        } else { //exception handler"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"            throw new DukeException();"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":54}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":" * A subclass of Command class."},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":" * Handle \"bye\" command."},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"    private static final String END \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"     * @param tasks an object includes a list of tasks."},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"     * @param storage the storage that working on data file."},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"        return END;"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     * Returns isExit to show stop reading user input."},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"     * @return true to indicate an end."},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        return true;"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":31}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":" * Abstract class for handling different commands."},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"    public abstract boolean isExit();"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":13}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.DeadlineException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import task.Deadline;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import undoStack.UndoStack;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import java.text.ParseException;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"import java.util.Date;"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":" * A subclass of Command."},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":" * Handles \"deadline\" command."},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    private static final String ADD_TASK_TITLE \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    private String[] input;"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     * Constructor."},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"     * @param input user input."},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    public DeadlineCommand(String[] input) {"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"        super();"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        this.input \u003d input;"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"     * @param tasks a list of tasks."},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     * @param storage the storage working on data file."},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"     * @throws DeadlineException to show incorrect user input."},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DeadlineException {"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        UndoStack.add(tasks);"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        int index \u003d getIndexOfBy();"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"        if (input.length \u003d\u003d 1 || index \u003d\u003d 1) { //no description"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"            throw new DeadlineException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"        } else if (index \u003d\u003d input.length - 1 || index \u003d\u003d 0) { //no time"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"            throw new DeadlineException(\"☹ OOPS!!! The time of a deadline cannot be empty.\");"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"        String description \u003d getDescriptionFromUserInput(index);"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"        Date date \u003d getDateFromUserInput(index);"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"        Deadline newTask \u003d new Deadline(description, new SimpleDateFormat(\"MMM dd yyyy HH:mm\").format(date));"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"        store.add(newTask);"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"        storage.save(new TaskList(store));"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"        return ADD_TASK_TITLE + \"\\n\""},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"                + newTask + \"\\n\""},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"                + \"Now you have \" + store.size() + \" tasks in the list.\";"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"     * Gets the index number of \"/by\"."},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"     * @return index number of \"/by\"."},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"    public int getIndexOfBy() {"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"        int index \u003d 0;"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"            if (input[i].equals(\"/by\")) {"},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":"                index \u003d i;"},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"TCQian"},"content":"        return index;"},{"lineNumber":71,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"TCQian"},"content":"     * Get the description of the task from the user input."},{"lineNumber":74,"author":{"gitId":"TCQian"},"content":"     * @param index index number of \"/by\"."},{"lineNumber":75,"author":{"gitId":"TCQian"},"content":"     * @return description."},{"lineNumber":76,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"TCQian"},"content":"    public String getDescriptionFromUserInput(int index) {"},{"lineNumber":78,"author":{"gitId":"TCQian"},"content":"        String description \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"TCQian"},"content":"        for (int i \u003d 1; i \u003c index; i++) {"},{"lineNumber":80,"author":{"gitId":"TCQian"},"content":"            description \u003d description + input[i] + \" \";"},{"lineNumber":81,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"TCQian"},"content":"        // trim is to remove the extra space at the end of the description"},{"lineNumber":83,"author":{"gitId":"TCQian"},"content":"        // caused when description is retrieved from user input"},{"lineNumber":84,"author":{"gitId":"TCQian"},"content":"        return description.trim();"},{"lineNumber":85,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":87,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"TCQian"},"content":"     * Get the time of the task from the user input."},{"lineNumber":89,"author":{"gitId":"TCQian"},"content":"     * @param index index number of \"/by\"."},{"lineNumber":90,"author":{"gitId":"TCQian"},"content":"     * @return time."},{"lineNumber":91,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"TCQian"},"content":"    public Date getDateFromUserInput(int index) throws DeadlineException {"},{"lineNumber":93,"author":{"gitId":"TCQian"},"content":"        String time \u003d \"\";"},{"lineNumber":94,"author":{"gitId":"TCQian"},"content":"        for (int i \u003d index + 1; i \u003c input.length; i++) {"},{"lineNumber":95,"author":{"gitId":"TCQian"},"content":"            time \u003d time + input[i] + \" \";"},{"lineNumber":96,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"TCQian"},"content":"        // trim is to remove the extra space at the end of the time"},{"lineNumber":98,"author":{"gitId":"TCQian"},"content":"        // caused when time is retrieved from user input"},{"lineNumber":99,"author":{"gitId":"TCQian"},"content":"        time \u003d time.trim();"},{"lineNumber":100,"author":{"gitId":"TCQian"},"content":"        Date date;"},{"lineNumber":101,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"TCQian"},"content":"            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"},{"lineNumber":103,"author":{"gitId":"TCQian"},"content":"            date \u003d formatter.parse(time);"},{"lineNumber":104,"author":{"gitId":"TCQian"},"content":"        } catch (ParseException e) {"},{"lineNumber":105,"author":{"gitId":"TCQian"},"content":"            throw new DeadlineException(\" ☹ OOPS!!! The time of a deadline must be in the format of dd/M/yyyy hhmm.\");"},{"lineNumber":106,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"TCQian"},"content":"        return date;"},{"lineNumber":108,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":110,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":112,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":113,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":115,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":116,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":117,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":118}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.DeleteException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import undoStack.UndoStack;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":" * A subclass of Command."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":" * Handles \"delete\" command."},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    private static final String DELETE_TITLE \u003d \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"    private String[] input;"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     * A subclass of command."},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"     * @param input user input."},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    public DeleteCommand(String[] input) {"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"        super();"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"        this.input \u003d input;"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"     * Execute the command."},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"     * @param tasks list of existing tasks."},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"     * @param storage storage of data."},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     * @throws DeleteException exception for invalid input."},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DeleteException {"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"        UndoStack.add(tasks);"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"        if (this.input.length \u003d\u003d 1) { //incomplete done command"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"            throw new DeleteException(\"☹ OOPS!!! The description of a delete cannot be empty.\");"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        int indexOfMarkingTask \u003d Integer.parseInt(this.input[1]) - 1;"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"        if (indexOfMarkingTask + 1 \u003e store.size() || indexOfMarkingTask + 1 \u003c\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"            throw new DeleteException(\"☹ OOPS!!! There is no such task.\");"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        //complete done command"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"        Task deletingTask \u003d store.get(indexOfMarkingTask);"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"        store.remove(indexOfMarkingTask);"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"        storage.save(new TaskList(store));"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"        return DELETE_TITLE + \"\\n\""},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"                + deletingTask + \"\\n\""},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"                + \"Now you have \" + store.size() + \" tasks in the list.\";"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"}"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":""}],"authorContributionMap":{"TCQian":65}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.DoneException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import undoStack.UndoStack;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":" * A subclass of Command."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":" * Handles \"done\" command."},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"public class DoneCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    private static final String DONE_TITLE \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"    private String[] input;"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     * A subclass of command."},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"     * @param input user input."},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    public DoneCommand(String[] input) {"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"        super();"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"        this.input \u003d input;"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"     * @param tasks list of existing tasks."},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"     * @param storage storage of the data."},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     * @throws DoneException exception for invalid input."},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) throws DoneException {"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"        UndoStack.add(tasks);"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"        if (input.length \u003d\u003d 1) { //incomplete done command"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"            throw new DoneException(\"☹ OOPS!!! The description of a done cannot be empty.\");"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        int indexOfMarkingTask \u003d Integer.parseInt(input[1]) - 1;"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"        if (indexOfMarkingTask + 1 \u003e store.size() || indexOfMarkingTask + 1 \u003c\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"            throw new DoneException(\"☹ OOPS!!! There is no such task.\");"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        //complete done command"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"        Task markingTask \u003d store.get(indexOfMarkingTask);"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"        Task markedTask \u003d markingTask.markAsDone();"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"        store.set(indexOfMarkingTask, markedTask);"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"        storage.save(new TaskList(store));"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"        return DONE_TITLE + \"\\n\""},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"                + markedTask;"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":64}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.EventException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import task.Event;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import undoStack.UndoStack;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import java.text.ParseException;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"import java.util.Date;"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":" * A subclass of Command."},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":" * Handles \"event\" command."},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"public class EventCommand extends Command {"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    private static final String ADD_TASK_TITLE \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    private String[] input;"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     * Constructor."},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"     * @param input user input."},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    public EventCommand(String[] input) {"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"        super();"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        this.input \u003d input;"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"     * @param tasks a list of tasks."},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     * @param storage the storage working on data file."},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"     * @throws EventException to show incorrect user input."},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) throws EventException {"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        UndoStack.add(tasks);"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        int index \u003d getIndexOfAt();"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"        if (input.length \u003d\u003d 1 || index \u003d\u003d 1) { // no description"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"            throw new EventException(\"☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"        } else if (index \u003d\u003d input.length - 1 || index \u003d\u003d 0) { //no time"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"            throw new EventException(\"☹ OOPS!!! The time of a event cannot be empty.\");"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"        String description \u003d getDescriptionFromUserInput(index);"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"        Date date \u003d getDateFromUserInput(index);"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"        Event newTask \u003d new Event(description, new SimpleDateFormat(\"MMM dd yyyy HH:mm\").format(date));"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"        store.add(newTask);"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"        storage.save(new TaskList(store));"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"        return ADD_TASK_TITLE + \"\\n\""},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"                + newTask + \"\\n\""},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"                + \"Now you have \" + store.size() + \" tasks in the list.\";"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"     * Gets the index number of \"/at\"."},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"     * @return index number of \"/at\"."},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"    public int getIndexOfAt() {"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"        int index \u003d 0;"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"            if (input[i].equals(\"/by\")) {"},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":"                index \u003d i;"},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"TCQian"},"content":"        return index;"},{"lineNumber":71,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"TCQian"},"content":"     * Get the description of the task from the user input."},{"lineNumber":74,"author":{"gitId":"TCQian"},"content":"     * @param index index number of \"/at\"."},{"lineNumber":75,"author":{"gitId":"TCQian"},"content":"     * @return description."},{"lineNumber":76,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"TCQian"},"content":"    public String getDescriptionFromUserInput(int index) {"},{"lineNumber":78,"author":{"gitId":"TCQian"},"content":"        String description \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"TCQian"},"content":"        for (int i \u003d 1; i \u003c index; i++) {"},{"lineNumber":80,"author":{"gitId":"TCQian"},"content":"            description \u003d description + input[i] + \" \";"},{"lineNumber":81,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"TCQian"},"content":"        // trim is to remove the extra space at the end of the description"},{"lineNumber":83,"author":{"gitId":"TCQian"},"content":"        // caused when description is retrieved from user input"},{"lineNumber":84,"author":{"gitId":"TCQian"},"content":"        return description.trim();"},{"lineNumber":85,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":87,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"TCQian"},"content":"     * Get the time of the task from the user input."},{"lineNumber":89,"author":{"gitId":"TCQian"},"content":"     * @param index index number of \"/at\"."},{"lineNumber":90,"author":{"gitId":"TCQian"},"content":"     * @return time."},{"lineNumber":91,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"TCQian"},"content":"    public Date getDateFromUserInput(int index) throws EventException {"},{"lineNumber":93,"author":{"gitId":"TCQian"},"content":"        String time \u003d \"\";"},{"lineNumber":94,"author":{"gitId":"TCQian"},"content":"        for (int i \u003d index + 1; i \u003c input.length; i++) {"},{"lineNumber":95,"author":{"gitId":"TCQian"},"content":"            time \u003d time + input[i] + \" \";"},{"lineNumber":96,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"TCQian"},"content":"        // trim is to remove the extra space at the end of the time"},{"lineNumber":98,"author":{"gitId":"TCQian"},"content":"        // caused when time is retrieved from user input"},{"lineNumber":99,"author":{"gitId":"TCQian"},"content":"        time \u003d time.trim();"},{"lineNumber":100,"author":{"gitId":"TCQian"},"content":"        Date date;"},{"lineNumber":101,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"TCQian"},"content":"            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"},{"lineNumber":103,"author":{"gitId":"TCQian"},"content":"            date \u003d formatter.parse(time);"},{"lineNumber":104,"author":{"gitId":"TCQian"},"content":"        } catch (ParseException e) {"},{"lineNumber":105,"author":{"gitId":"TCQian"},"content":"            throw new EventException(\" ☹ OOPS!!! The time of a deadline must be in the format of dd/M/yyyy hhmm.\");"},{"lineNumber":106,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"TCQian"},"content":"        return date;"},{"lineNumber":108,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":110,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":112,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":113,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":115,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":116,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":117,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":118}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.FindException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":" *  A subclass of Command."},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":" *  Handles \"find\" command."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"public class FindCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"    private static final String FIND_TITLE \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    private String[] input;"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"     * Constructor."},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     * @param input user input."},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"    public FindCommand(String[] input) {"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"        super();"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"        this.input \u003d input;"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"     * @param tasks a list of tasks."},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"     * @param storage the storage working on data file."},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"     * @throws FindException to show incorrect user input."},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) throws FindException {"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"        if (input.length \u003d\u003d 1) { //incomplete done command"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"            throw new FindException(\" ☹ OOPS!!! The description of a find cannot be empty.\");"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"        String keyword \u003d input[1];"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        for (Task task : store) {"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"            String[] description \u003d task.getDescription().split(\"\\\\s\");"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"            boolean isFound \u003d false;"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"            for (String word : description) {"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"                // find keyword"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"                if (word.equals(keyword)) {"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"                    isFound \u003d true;"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"                    break;"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"            if (isFound) {"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"                filteredList.add(task);"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"        if (filteredList.size() \u003d\u003d 0) {"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"            throw new FindException(\"☹ OOPS!!! There is no task with this keyword.\");"},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"        int i \u003d 1;"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"        String output \u003d FIND_TITLE + \"\\n\";"},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"        for (Task task : filteredList) {"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"            // print found element"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"            output +\u003d i++ + \".\" + task + \"\\n\";"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"        return output;"},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":70,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":71,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":74,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":75,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":76}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":" * A subclass of Command."},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":" * Handles \"list\" command."},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"    private static final String LIST_TITLE \u003d \"Here are the tasks in your list:\";"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"     * @param tasks a list of tasks."},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"     * @param storage a storage working on data file."},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"        int i \u003d 1;"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"        String output \u003d LIST_TITLE + \"\\n\";"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"        for (Task task : tasks.getTaskList()) {"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"            output +\u003d i++ + \".\" + task + \"\\n\";"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"        return output;"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":37}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.TodoException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import task.Todo;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import undoStack.UndoStack;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":" * A subclass of Command."},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":" * Handles \"todo\" command."},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"public class TodoCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    private static final String ADD_TASK_TITLE \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    private String[] input;"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"     * Constructor."},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"     * @param input user input."},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    public TodoCommand(String[] input) {"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"        super();"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"        this.input \u003d input;"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     * @param tasks a list of tasks."},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     * @param storage the storage working on data file."},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"     * @throws TodoException to show incorrect user input."},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) throws TodoException {"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"        UndoStack.add(tasks);"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        if (input.length \u003d\u003d 1) {"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"            throw new TodoException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"        String description \u003d \"\";"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"            description \u003d description + input[i] + \" \";"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        Todo newTask \u003d new Todo(description.trim());"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"        store.add(newTask);"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"        storage.save(new TaskList(store));"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"        return ADD_TASK_TITLE + \"\\n\""},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"                + newTask + \"\\n\""},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"                + \"Now you have \" + store.size() + \" tasks in the list.\";"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":64}},{"path":"src/main/java/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.UndoException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import undoStack.UndoStack;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import java.util.Stack;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":" * A subclass of Command."},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":" * Handles \"undo\" command."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"public class UndoCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"    private static final String UNDO_TITLE \u003d \" I\u0027ve undo the action.\";"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    private static Stack\u003cTaskList\u003e stack;"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"     * A subclass of command."},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    public UndoCommand() {"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"        super();"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"     * Executes the command."},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"     * @param tasks list of existing tasks."},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"     * @param storage storage of the data."},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"     * @throws UndoException exception for invalid input."},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    public String execute(TaskList tasks, Storage storage) throws UndoException {"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"        TaskList previousTaskList \u003d UndoStack.getPreviousTaskList();"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"        tasks.setTaskList(previousTaskList);"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"        storage.save(previousTaskList);"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"        return UNDO_TITLE;"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"     * Returns isDone to stop user from entering command."},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"     * @return false to continue to accept user input."},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"    public boolean isExit() {"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import command.Command;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import parser.Parser;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import storage.Storage;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import undoStack.UndoStack;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":" * Returns typing box to allow user to type command."},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"    private Storage storage;"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"     * Instantiates ui, read date from file."},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"     * Acts as default state if no data file is to be read."},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    public Duke() {"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"            UndoStack.initialize();"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"            storage \u003d new Storage(\"./data/duke.txt\");"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"            tasks \u003d new TaskList(null);"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"     * Replace this stub with your completed method."},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"    public String getResponse(String input) {"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"            return c.execute(tasks, storage);"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        } catch (DukeException e) {"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"            return e.getMessage();"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":2,"TCQian":42}},{"path":"src/main/java/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * A subclass of TaskException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for deadline tasks."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class DeadlineException extends TaskException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public DeadlineException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/exception/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * A subclass of DukeException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for delete class."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class DeleteException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public DeleteException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/exception/DoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * A subclass of DukeException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for done class."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class DoneException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public DoneException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * An subclass of TaskException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for invalid input."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public DukeException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"    public DukeException() {"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":13}},{"path":"src/main/java/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * An subclass of TaskException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for event tasks."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class EventException extends TaskException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public EventException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/exception/FindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * A subclass of DukeException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Show error for find command."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class FindException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public FindException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/exception/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * An subclass of Exception."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for tasks."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class TaskException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public TaskException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/exception/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * An subclass of TaskException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for todo tasks."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class TodoException extends TaskException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public TodoException(String msg) {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/main/java/exception/UndoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * An subclass of DukeException."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Shows error for todo tasks."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class UndoException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public UndoException() { super(\"There is no previous action.\"); }"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":8}},{"path":"src/main/java/javaFx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package javaFx;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"import javafx.scene.text.Text;"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"    private Text dialog;"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    // Constructor"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        displayPicture.setImage(img);"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"        Collections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"     * Returns user dialog."},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"     * @param text user input."},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"     * @param img user image."},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"     * @return an user\u0027s dialog box."},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"        return new DialogBox(text, img);"},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"     * Returns Duke dialog."},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"     * @param text Duke\u0027s output."},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":"     * @param img Duke\u0027s image."},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":"     * @return Duke\u0027s dialog box."},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"TCQian"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"TCQian"},"content":"        db.flip();"},{"lineNumber":72,"author":{"gitId":"TCQian"},"content":"        return db;"},{"lineNumber":73,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":74}},{"path":"src/main/java/javaFx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package javaFx;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     * Initialises the GUI"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\" , dukeImage)"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"        );"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"     * Sets the duke."},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"     * @param d duke."},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        duke \u003d d;"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"    private void handleUserInput() {"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"        userInput.clear();"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":64}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import task.Deadline;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import task.Event;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import task.Todo;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":" * A class to get data from and send data to the data file."},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    private String filePath;"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"     * Constructor."},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     * @param filePath the path of data file."},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"    public Storage(String filePath) {"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"        assert filePath.length() \u003e 0 : \"File Path should not be empty\";"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     * Reads data from data file."},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     * @return a list of tasks."},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"     * @throws DukeException to show error in reading the data file."},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"            File file \u003d new File(this.filePath);"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"            file.getParentFile().mkdirs(); // This should create a folder for the file."},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"            file.createNewFile(); // This should create a new file if file is not already exists."},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"            Scanner sc \u003d new Scanner(new File(this.filePath));"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"            ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"                String[] str \u003d sc.nextLine().split(\"\\\\|\");"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"                String title \u003d str[0].trim();"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"                boolean isDone \u003d str[1].trim().equals(1 + \"\");"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"                if (title.equals(\"T\")) {"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"                    store.add(new Todo(str[2].trim(), isDone));"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"                } else if (title.equals(\"D\")) {"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"                    store.add(new Deadline(str[2].trim(), isDone, str[3].trim()));"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"                } else {"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"                    store.add(new Event(str[2].trim(), isDone, str[3].trim()));"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"            return store;"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"        } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"            throw new DukeException(\"File not found\");"},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"     * Wrties data to the data file."},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"     * @param tasks an updated list of tasks."},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"    public void save(TaskList tasks) {"},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":"        assert tasks !\u003d null : \"There is not task to be saved\";"},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"            for (Task task : tasks.getTaskList()) {"},{"lineNumber":70,"author":{"gitId":"TCQian"},"content":"                fw.write(task.toStringOfDatabase() + \"\\n\");"},{"lineNumber":71,"author":{"gitId":"TCQian"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"TCQian"},"content":"            fw.close();"},{"lineNumber":73,"author":{"gitId":"TCQian"},"content":"        } catch (IOException e) {"},{"lineNumber":74,"author":{"gitId":"TCQian"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":75,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":77}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * A subclass of Task."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" * Contains a task description and a time."},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"    private String by;"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"     * Constructor of Deadline object."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"     * @param description description of the task."},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"     * @param by the deadline of the task."},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"     * Overloaded constructor of Deadline object."},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     * @param description description of the task."},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"     * @param isDone the status of the task."},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"     * @param by the deadline of the task."},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    public Deadline(String description, boolean isDone, String by) {"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        this.description \u003d description;"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"        this.by \u003d by;"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     * Returns the description of the deadline task."},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"     * @return the description of the deadline task."},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"    public String getDescription() {"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"        return this.description;"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"     * Returns the icon for corresponding status of task."},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"     * @return sign of tick or cross."},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"    public String getStatusIcon() {"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"     * Marks the deadline task as done."},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"     * @return new Deadline object with true for isDone."},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"    public Deadline markAsDone() {"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"        return new Deadline(this.description, true, this.by);"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"     * Returns a string of the task object to be saved in data file."},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"     * @return string in the format of data in data file."},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"    public String toStringOfDatabase() {"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"        String number \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"        return \"D | \" + number + \" | \" + this.description + \" | \" + this.by;"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"     * Prints object."},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"     * @return string of object."},{"lineNumber":70,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"TCQian"},"content":"    public String toString() {"},{"lineNumber":73,"author":{"gitId":"TCQian"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + by + \")\";"},{"lineNumber":74,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":75}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * A subclass of Task."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Contains a task description and a time."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    private String description;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"    private boolean isDone;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    private String at;"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"     * Constructor of Event object."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"     * @param description description of the task."},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"     * @param at the time of the event."},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    public Event(String description, String at) {"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"     * Constructor of Event object."},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"     * @param description description of the task."},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"     * @param isDone the status of the task."},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"     * @param at the time of the event."},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    public Event(String description, boolean isDone, String at) {"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        this.description \u003d description;"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"        this.at \u003d at;"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     * Returns the description of the deadline task."},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"     * @return the description of the deadline task."},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"    public String getDescription() {"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"        return this.description;"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"     * Returns the icon for corresponding status of task."},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"     * @return sign of tick or cross."},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"    public String getStatusIcon() {"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"     * Marks the event task as done."},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"     * @return new Deadline object with true for isDone."},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"    public Event markAsDone() {"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"        return new Event(this.description, true, this.at);"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"     * Turns task object into a string to be saved in data file."},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":"     * @return string in the format of data in data file."},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"    public String toStringOfDatabase() {"},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"        String number \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"        return \"E | \" + number + \" | \" + this.description + \" | \" + this.at;"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"     * Prints object."},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"     * @return string of object."},{"lineNumber":70,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"TCQian"},"content":"    public String toString() {"},{"lineNumber":73,"author":{"gitId":"TCQian"},"content":"        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" + at + \")\";"},{"lineNumber":74,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":75}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * A abstract class of task."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Contains abstract methods to be overridden by sub classes."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public abstract String getDescription();"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"    public abstract String getStatusIcon();"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    public abstract Task markAsDone();"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"    public abstract String toStringOfDatabase();"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":11}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":" * A subclass of Task."},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":" * Contains a task description and a time."},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    private String description;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"    private boolean isDone;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"     * Constructor of Todo object."},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"     * @param description description of the task."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"    public Todo(String description) {"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     * Overloaded constructor of Todo object."},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"     * @param description description of the task."},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"     * @param isDone the status of the task."},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"        this.description \u003d description;"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"     * Returns the description of the todo task."},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"     * @return the description of the todo task."},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"        return this.description;"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"     * Returns the icon for corresponding status of task."},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"     * @return sign of tick or cross."},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"    public String getStatusIcon() {"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"     * Marks the Todo task as done."},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"     * @return new Todo object with true for isDone."},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"    public Todo markAsDone() {"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"        return new Todo(this.description, true);"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"     * Turns task object into a string to be saved in data file."},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"     * @return string in the format of data in data file."},{"lineNumber":54,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"TCQian"},"content":"    public String toStringOfDatabase() {"},{"lineNumber":57,"author":{"gitId":"TCQian"},"content":"        String number \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":58,"author":{"gitId":"TCQian"},"content":"        return \"T | \" + number + \" | \" + this.description;"},{"lineNumber":59,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":61,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"TCQian"},"content":"     * Prints object."},{"lineNumber":63,"author":{"gitId":"TCQian"},"content":"     * @return string of object."},{"lineNumber":64,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"TCQian"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"TCQian"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"TCQian"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":68,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":69}},{"path":"src/main/java/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package taskList;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":" * A class to handle the list of existing tasks."},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"     * Constructor."},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"     * Overloaded constructor."},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"     * @param tasks list of existing tasks."},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"        assert tasks !\u003d null : \"Null should not be passed in to the constructor of TaskList.\";"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"     * Returns the list of existing tasks."},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":"     * @return the list of existing tasks."},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"        return this.tasks;"},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"     * Set the tasks to the given list of tasks."},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"     * @param taskList new list of tasks."},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"    public void setTaskList(TaskList taskList) {"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"        this.tasks \u003d taskList.getTaskList();"},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":44}},{"path":"src/main/java/undoStack/UndoStack.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"package undoStack;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import exception.UndoException;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"import taskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"import java.util.Stack;"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":" * The stack to store all lists of tasks after every action."},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":" * This is for the undo action."},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"public class UndoStack {"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"    private static Stack\u003cTaskList\u003e stack;"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"     * Constructor."},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"    public UndoStack() {"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"        stack \u003d new Stack\u003cTaskList\u003e();"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"     * Returns a static stack for undo action."},{"lineNumber":27,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TCQian"},"content":"    public static void initialize() {"},{"lineNumber":29,"author":{"gitId":"TCQian"},"content":"        new UndoStack();"},{"lineNumber":30,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":32,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TCQian"},"content":"     * Adds the current list of task into the stack."},{"lineNumber":34,"author":{"gitId":"TCQian"},"content":"     * @param taskList current list of tasks."},{"lineNumber":35,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TCQian"},"content":"    public static void add(TaskList taskList) {"},{"lineNumber":37,"author":{"gitId":"TCQian"},"content":"        System.out.println(\"stack added\");"},{"lineNumber":38,"author":{"gitId":"TCQian"},"content":"        stack.push(new TaskList(new ArrayList\u003cTask\u003e(taskList.getTaskList())));"},{"lineNumber":39,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":41,"author":{"gitId":"TCQian"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TCQian"},"content":"     * Gets the previous list of tasks."},{"lineNumber":43,"author":{"gitId":"TCQian"},"content":"     * @return previous list of tasks."},{"lineNumber":44,"author":{"gitId":"TCQian"},"content":"     * @throws UndoException the exception for invalid user input."},{"lineNumber":45,"author":{"gitId":"TCQian"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TCQian"},"content":"    public static TaskList getPreviousTaskList() throws UndoException {"},{"lineNumber":47,"author":{"gitId":"TCQian"},"content":"        if (stack.size() \u003d\u003d 0) {"},{"lineNumber":48,"author":{"gitId":"TCQian"},"content":"            throw new UndoException();"},{"lineNumber":49,"author":{"gitId":"TCQian"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"TCQian"},"content":"            return stack.pop();"},{"lineNumber":51,"author":{"gitId":"TCQian"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.text.Text?\u003e"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"      \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" /\u003e"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"TCQian":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"javaFx.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"TCQian":19}},{"path":"src/test/java/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"class ByeCommandTest {"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"    void isExitTest_getIsExitOfByeCmd_returnsTrue() {"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"        assertEquals(new ByeCommand().isExit(), true);"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":12}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    public void dummyTest_checkTwoNumbers_returnsTrue() {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":10}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"class EventTest {"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    void toStringTest_getStringOfEventTask_returnsExpectedString() {"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"        Event e1 \u003d new Event(\"party\", \"12-2-2020 2000\");"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"        String expected \u003d \"[E]\" + \"[\" + \"\\u2718\" + \"] \" + \"party\" + \" (at: 12-2-2020 2000)\";"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"        assertEquals(e1.toString(), expected);"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":12}},{"path":"src/test/java/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"class TodoCommandTest {"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"    void isExitTest_getIsExitOfTodoCmd_returnsFalse() {"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"        String[] input \u003d \"test case\".split(\"\\\\s\");"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"        assertEquals(new TodoCommand(input).isExit(), false);"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":""},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"}"}],"authorContributionMap":{"TCQian":13}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"T | 1 | read book"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"D | 0 | return book | June 6th"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"E | 0 | project meeting | Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"T | 1 | join sports club"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"T | 0 | join dance club"}],"authorContributionMap":{"TCQian":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"list"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"delete 1"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"todo read book"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"done 4"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"delete 1"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"deadline return book /by June 6th"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"delete 1"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"delete 1"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"todo join sports club"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"list"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"list"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"bye"}],"authorContributionMap":{"TCQian":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"if"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"  ! ("},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"    find ../src/main/java -name \"*.java\" \u003esources.txt"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"    javac -cp ../src -Xlint:none -d ../bin @sources.txt"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"  )"},{"lineNumber":21,"author":{"gitId":"-"},"content":"then"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":36,"author":{"gitId":"-"},"content":"then"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":39,"author":{"gitId":"-"},"content":"else"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"TCQian":5}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TCQian"},"content":"../src/main/java/TaskList.java"},{"lineNumber":2,"author":{"gitId":"TCQian"},"content":"../src/main/java/EventCommand.java"},{"lineNumber":3,"author":{"gitId":"TCQian"},"content":"../src/main/java/EventException.java"},{"lineNumber":4,"author":{"gitId":"TCQian"},"content":"../src/main/java/ByeCommand.java"},{"lineNumber":5,"author":{"gitId":"TCQian"},"content":"../src/main/java/Storage.java"},{"lineNumber":6,"author":{"gitId":"TCQian"},"content":"../src/main/java/DeleteCommand.java"},{"lineNumber":7,"author":{"gitId":"TCQian"},"content":"../src/main/java/ListCommand.java"},{"lineNumber":8,"author":{"gitId":"TCQian"},"content":"../src/main/java/Parser.java"},{"lineNumber":9,"author":{"gitId":"TCQian"},"content":"../src/main/java/Command.java"},{"lineNumber":10,"author":{"gitId":"TCQian"},"content":"../src/main/java/TodoCommand.java"},{"lineNumber":11,"author":{"gitId":"TCQian"},"content":"../src/main/java/DeadlineException.java"},{"lineNumber":12,"author":{"gitId":"TCQian"},"content":"../src/main/java/Ui.java"},{"lineNumber":13,"author":{"gitId":"TCQian"},"content":"../src/main/java/TaskException.java"},{"lineNumber":14,"author":{"gitId":"TCQian"},"content":"../src/main/java/DeleteException.java"},{"lineNumber":15,"author":{"gitId":"TCQian"},"content":"../src/main/java/Event.java"},{"lineNumber":16,"author":{"gitId":"TCQian"},"content":"../src/main/java/DoneException.java"},{"lineNumber":17,"author":{"gitId":"TCQian"},"content":"../src/main/java/FindException.java"},{"lineNumber":18,"author":{"gitId":"TCQian"},"content":"../src/main/java/DeadlineCommand.java"},{"lineNumber":19,"author":{"gitId":"TCQian"},"content":"../src/main/java/TodoException.java"},{"lineNumber":20,"author":{"gitId":"TCQian"},"content":"../src/main/java/Task.java"},{"lineNumber":21,"author":{"gitId":"TCQian"},"content":"../src/main/java/FindCommand.java"},{"lineNumber":22,"author":{"gitId":"TCQian"},"content":"../src/main/java/Duke.java"},{"lineNumber":23,"author":{"gitId":"TCQian"},"content":"../src/main/java/Deadline.java"},{"lineNumber":24,"author":{"gitId":"TCQian"},"content":"../src/main/java/DoneCommand.java"},{"lineNumber":25,"author":{"gitId":"TCQian"},"content":"../src/main/java/Todo.java"},{"lineNumber":26,"author":{"gitId":"TCQian"},"content":"../src/main/java/DukeException.java"}],"authorContributionMap":{"TCQian":26}}]
