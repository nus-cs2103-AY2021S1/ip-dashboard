[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.command.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.UserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Run the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.start();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            taskList.initialize();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Ui.wrap(() -\u003e System.out.println(\"Error parsing file\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                input \u003d Ui.feed();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                Commands.create(Parser.parseCommand(input)).run(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            } catch (UserException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                Ui.wrap(() -\u003e System.out.println(e.getMessage()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                System.out.println(\"Unhandled exception:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        while (!input.equals(\"bye\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 50,
      "-": 3
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public ByeCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void run(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        taskList.save();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.bye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public ClearCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void run(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        taskList.clearAll();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.clear();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.UserException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    List\u003cString\u003e input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Creates a new command with user\u0027s input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Command(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Runs the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param taskList the current list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws UserException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    abstract public void run(TaskList taskList) throws UserException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 26
    }
  },
  {
    "path": "src/main/java/command/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Creates a new command from the user\u0027s input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * This method decide which type of command to be created based on the first token of the input, or throw"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * an exception if the type of the command is invalid."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return a command with the correct type"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static Command create(List\u003cString\u003e input) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        switch (input.get(0).toLowerCase()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new ByeCommand(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new ClearCommand(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new TaskCommand(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Command not found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 38
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public DeleteCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void run(TaskList taskList) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        int index \u003d Integer.parseInt(input.get(1));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Task task \u003d taskList.removeTask(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.delete(task.toString(), taskList.count());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 21
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public DoneCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void run(TaskList taskList) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        int index \u003d Integer.parseInt(input.get(1));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        taskList.finishTask(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.done(taskList.getTask(index).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 20
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.UserException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public FindCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void run(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.find(taskList.findTasks(input.get(1)));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public ListCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void run(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.list(taskList.printTasks());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 17
    }
  },
  {
    "path": "src/main/java/command/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.UserException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public TaskCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void run(TaskList taskList) throws UserException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (input.size() \u003c 4) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Missing argument(s)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        task \u003d taskList.addTask(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Ui.task(task.toString(), taskList.count());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 25
    }
  },
  {
    "path": "src/main/java/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class InvalidArgumentException extends UserException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public InvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 7
    }
  },
  {
    "path": "src/main/java/exception/UserException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class UserException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public UserException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 7
    }
  },
  {
    "path": "src/main/java/misc/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Parses the user\u0027s input into a list of tokens."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param command user\u0027s input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the list of tokens"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static List\u003cString\u003e parseCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String[] splitted \u003d command.split(\" /\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (String token : splitted) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            String[] splitted2 \u003d token.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            for (String tokenn : splitted2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                out.add(tokenn);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (out.get(0).equals(\"todo\") || out.get(0).equals(\"deadline\") || out.get(0).equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            if (out.size() \u003e\u003d 3) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                out.remove(2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            if (out.size() \u003c\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                out.add(\"null\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            out.add(\"0\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Parses a string of datetime into a LocalDateTime object, or throw an exception if the datetime is invalid."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param datetimeString the string of datetime"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the corresponding LocalDateTime object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static LocalDateTime stringToTime(String datetimeString) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String[] timeTokens \u003d datetimeString.split(\" |/\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        int time \u003d timeTokens.length \u003e\u003d 4 ? Integer.parseInt(timeTokens[3]) : 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return LocalDateTime.of(Integer.parseInt(timeTokens[2]),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                    Integer.parseInt(timeTokens[1]),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                    Integer.parseInt(timeTokens[0]),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                    time / 100, time % 100);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Invalid date\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 55
    }
  },
  {
    "path": "src/main/java/misc/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Reads the storage.txt created in ./tmp/data, or create a new one if the file cannot be found."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return List of task in the file. Each task is represented with a list of tokens."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static List\u003cList\u003cString\u003e\u003e readFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cList\u003cString\u003e\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        File dir \u003d new File(\"./tmp/data\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        dir.mkdirs();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        File f \u003d new File(dir, \"storage.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                String[] tokens \u003d s.nextLine().split(\"%%%\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                List\u003cString\u003e tokenss \u003d new ArrayList\u003c\u003e(Arrays.asList(tokens));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                //tokenss.add(2, \"null\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                out.add(tokenss);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return out;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new Error(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Overwrites the file ./tmp/data/storage.txt with information from the current list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param database the current list of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void writeFile(List\u003cTask\u003e database) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        File dir \u003d new File(\"./tmp/data\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(dir, \"storage.txt\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            for (int i \u003d 0; i \u003c database.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                Task task \u003d database.get(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                fw.write(task.serialize() + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 55
    }
  },
  {
    "path": "src/main/java/misc/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private static Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private static String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Wraps the message inside a box."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param printMessage an action that print something to the user interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void wrap(Runnable printMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        System.out.println(\"++++++++++++++++++++++++++++++++++++++++++\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        printMessage.run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Greet the user and create a Scanner object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void start() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e System.out.println(\"Hello from\\n\" + logo));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Get the next line of user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return next line of user input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String feed() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Close the Scanner object and farewell the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e System.out.println(\"See you again!\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the LIST command"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param tasks list of tasks to be printed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void list(List\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            List\u003cString\u003e output \u003d tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            for (String s : output) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                System.out.println(s);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void find(List\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            List\u003cString\u003e output \u003d tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            for (String s : output) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                System.out.println(s);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the DONE command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param task the task that is marked as finished"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void done(String task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the DELETE command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param task the task deleted"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param count the number of tasks left in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void delete(String task, int count) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list. \\n\", count);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the CLEAR command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void clear() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"All tasks cleared!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the commands that create a task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param task the task created"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param count the current number of tasks in the list"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void task(String task, int count) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        wrap(() -\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list. \\n\", count);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 121
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Deadline(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                (super.isDone ? \"\\u2713\" : \"\\u2718\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.type \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                (super.isDone ? \"\\u2713\" : \"\\u2718\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Create a task with a title and its optional datetime"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param description the title of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param time the time of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        type \u003d \"Task\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Marks the task as finished."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Serializes the task to be store in the disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the serial of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String datetimeString \u003d time.getDayOfMonth() + \"/\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                time.getMonthValue() + \"/\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                time.getYear() + \" \" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                (time.getHour() * 100 + time.getMinute());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (time.equals(LocalDateTime.MIN)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            datetimeString \u003d \"null\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return type + \"%%%\" + description + \"%%%\" + datetimeString + \"%%%\" + (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[T][%s] %s\", (isDone ? \"\\u2713\" : \"\\u2718\"), description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 53
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private List\u003cTask\u003e database \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Create a new task corresponding to the tokens then add it into the list of task, or throw an exception"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * if the input tokens is invalid."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param tokens the description for the task (e.g. type, time)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the task created"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task addTask(List\u003cString\u003e tokens) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String datetimeString \u003d tokens.get(2).trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        LocalDateTime datetime \u003d (datetimeString.equals(\"null\"))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                ? LocalDateTime.MIN"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                : Parser.stringToTime(datetimeString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        switch (tokens.get(0)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                task \u003d new Todo(tokens.get(1).trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                if (datetimeString.equals(\"null\")) throw new InvalidArgumentException(\"Deadline\u0027s time cannot be empty\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                task \u003d new Deadline(tokens.get(1).trim(), datetime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                if (datetimeString.equals(\"null\")) throw new InvalidArgumentException(\"Event\u0027s time cannot be empty\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                task \u003d new Event(tokens.get(1).trim(), datetime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                throw new Error(\"An unexpected error has occurred\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (tokens.get(3).equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        database.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Gets the task from the list with the given index, or throw an exception if the index is invalid."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param index the query index"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the corresponding task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task getTask(int index) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e database.size()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Invalid argument for the LIST command.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return database.get(index - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Marks the task from the list with the given index as done, or throw an exception if the index is invalid."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param index the query index"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void finishTask(int index) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e database.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Out of range argument for DONE command.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        database.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Removes the task from the list with the given index, or throw an exception if the index is invalid."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param index the query index"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the task that has just been deleted"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task removeTask(int index) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e database.size()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Out of range argument for DELETE command.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return database.remove(index - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Initializes the list of task with the information from the disk."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void initialize() throws InvalidArgumentException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cList\u003cString\u003e\u003e data \u003d Storage.readFile();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (List\u003cString\u003e tokens : data) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            addTask(tokens);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Saves the list of task into the disk."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Storage.writeFile(database);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Counts the number of current tasks in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the number of current tasks."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return database.size();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Clears all tasks in the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void clearAll() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        database.clear();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Return all task in the list in the form of strings."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the list of corresponding string represent the tasks"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public List\u003cString\u003e printTasks() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (int i \u003d 0; i \u003c database.size(); i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            output.add((i + 1) + \".\" + database.get(i));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public List\u003cString\u003e findTasks(String query) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        query \u003d query.trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (int i \u003d 0; i \u003c database.size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            if (database.get(i).getDescription().contains(query)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                output.add(count + \".\" + database.get(i));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 145
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package main.java.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(description, LocalDateTime.MIN);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.type \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[T][%s] %s\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                (super.isDone ? \"\\u2713\" : \"\\u2718\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 17
    }
  },
  {
    "path": "src/test/java/misc/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.misc.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void testParseCommandNormalCase() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e actual \u003d Parser.parseCommand(\"deadline read book /by 21/12/2012 1900\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e(Arrays.asList(\"deadline\", \"read book\", \"21/12/2012 1900\", \"0\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void testStringToTimeNormalCase() throws InvalidArgumentException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        LocalDateTime expected \u003d LocalDateTime.of(2012,12,21,19,00);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        LocalDateTime actual \u003d Parser.stringToTime(\"21/12/2012 1900\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 28
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import main.java.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void testNormalCase() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Deadline task \u003d new Deadline(\"read book\", LocalDateTime.of(2020,12,20,19,30));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String actual \u003d task.serialize();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String expected \u003d \"deadline%%%read book%%%20/12/2020 1930%%%0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "deadline return book /by 16/6/2020 1651"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "event return nothing /at 31/2/2021 1100"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 4,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 3,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\ByeCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\ClearCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\Command.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\Commands.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\DeleteCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\DoneCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\FindCommand.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\ListCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\TaskCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\exception\\InvalidArgumentException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\exception\\UserException.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\misc\\Parser.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\misc\\Storage.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\misc\\Ui.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Deadline.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Event.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Task.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\TaskList.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 20
    }
  },
  {
    "path": "text-ui-test/tmp/data/storage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo%%%read book%%%null%%%1"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 1
    }
  },
  {
    "path": "tmp/data/storage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo%%%homework%%%null%%%0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "deadline%%%fly%%%16/2/2020 1159%%%1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo%%%read book%%%null%%%0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "deadline%%%return book%%%20/12/2020 1900%%%0"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 4
    }
  }
]
