[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        String divider \u003d \"************************************************\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        String intro \u003d \"Hello! I\u0027m Duke\\nWhat can i do for you?\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        System.out.println(divider + intro + divider);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        boolean carryOn \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        int numberOfItems \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        while(carryOn) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            String inputString \u003d input.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            if (inputString.indexOf(\"done \") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    int itemNumber \u003d Integer.parseInt(inputString.substring(inputString.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    if (inputString.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        throw new DukeException(\"You did not specify which task you are done with!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } else if (numberOfItems \u003c itemNumber || itemNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        throw new DukeException(\"Hey, no such task exists!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        Task task \u003d taskArray.get(itemNumber - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        task.updateTask(1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + \"Nice! I have marked this task as done:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(task + \"\\n\" + divider);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    System.out.println(divider + e.getMessage() + \"\\n\" + divider);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    System.out.println(divider + \"Invalid input for done command!\" + \"\\n\" + divider);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            } else if (inputString.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                System.out.println(\"Here are the tasks in your list!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                for (int i \u003d 0; i \u003c taskArray.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    int numbering \u003d i + 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    Task task \u003d taskArray.get(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    System.out.println(numbering + \".\" + task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            } else if (inputString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                System.out.println(divider + \"Bye! See you next time!\" + \"\\n\" + divider);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                carryOn \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                input.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            } else if (inputString.indexOf(\"delete \") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    int itemNumber \u003d Integer.parseInt(inputString.substring(inputString.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    if (inputString.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        throw new DukeException(\"You did not specify which task you are deleting!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } else if (numberOfItems \u003c itemNumber || itemNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        throw new DukeException(\"Hey, no such task exists!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        Task task \u003d taskArray.get(itemNumber - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + \"Noted, the task has been deleted\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(task + \"\\n\" + divider);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        numberOfItems -\u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(\"Now you have \" + numberOfItems + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        taskArray.remove(itemNumber - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    System.out.println(divider + e.getMessage() + \"\\n\" + divider);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    System.out.println(divider + \"Invalid input for done command!\" + \"\\n\" + divider);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                if (inputString.indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        if (inputString.length() \u003d\u003d 4 || inputString.length() \u003d\u003d 5  \u0026\u0026 inputString.indexOf(\" \") \u003d\u003d 4) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"Hey! Your Todo is empty \u003e:(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        } else if (inputString.indexOf(\" \") !\u003d 4) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"What are you even saying?!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            task \u003d new Todo(inputString.substring(5));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + e.getMessage() + \"\\n\" + divider);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                } else if (inputString.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        if (!inputString.contains(\" /by \") || inputString.substring(inputString.indexOf(\" /by \")).length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"Oi, when is this deadline due??\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        int byIndex \u003d inputString.indexOf(\" /by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        if (inputString.indexOf(\" \") !\u003d 8) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"What are you even saying?!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        } else if (inputString.contains(\"deadline /by \")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"You aren\u0027t setting anything for your deadline?!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            task \u003d new Deadline(inputString.substring(9, byIndex), inputString.substring(byIndex + 4));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + e.getMessage() + \"\\n\" + divider);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                } else if (inputString.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        if (!inputString.contains(\" /at \")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                                || inputString.substring(inputString.indexOf(\" /at \")).length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"Oi, when is this event on??\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        int atIndex \u003d inputString.indexOf(\" /at \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        if (inputString.indexOf(\" \") !\u003d 5) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"What are you even saying?!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        } else if (inputString.contains(\"event /at \")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            throw new DukeException(\"You aren\u0027t setting anything as your event?!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                            task \u003d new Event(inputString.substring(6, atIndex), inputString.substring(atIndex + 4));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + e.getMessage() + \"\\n\" + divider);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        throw new DukeException(\"What are you even saying?!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + e.getMessage() + \"\\n\" + divider);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    if (numberOfItems \u003c 100) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        taskArray.add(task);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        numberOfItems +\u003d 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + \"Got it, I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(\" \" + task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(\"Now you have \" + numberOfItems + \" tasks in the list.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                        System.out.println(divider + \"Sorry, the list is full!\\n\" + divider);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 130,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public void updateTask(int check) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        if (check \u003d\u003d 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" + \" \" + this.description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "                : \"[\" + \"\\u2718\" + \"]\" + \" \" + this.description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "todo revise lectures"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "deadline return clothes /by the day before tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "event project meeting /at jurong bird park"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "javac  -cp ..\\src\\  -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IronBiscuit"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "IronBiscuit": 2,
      "-": 19
    }
  }
]
