[
  {
    "path": "src/main/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "[T][DONE] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": "[D][DONE] return book (by: Jun 06 2020)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "[T][DONE] join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "[T][NOT DONE] borrow book"
      }
    ],
    "authorContributionMap": {
      "successs404": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.parsers.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the main class. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param directoryPath The path of the dataFile\u0027s directory."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param dataFilePath The path of the dataFile."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Duke(String directoryPath, String dataFilePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "        storage \u003d new Storage(directoryPath, dataFilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d storage.readFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d parser.parseSavedTaskList(lines);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Runs the Duke program. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "successs404"
        },
        "content": "            while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "successs404"
        },
        "content": "                String userInput \u003d ui.readCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "successs404"
        },
        "content": "                Command c \u003d parser.parse(userInput, taskList.tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "successs404"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "successs404"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } catch (DukeException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "successs404"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The main method which runs the Duke program. */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "successs404"
        },
        "content": "        new Duke(\"src/main/data\", \"src/main/data/data.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 54,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the command that adds a task to the taskList when executed. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The task to be added. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Adds the task to the taskList,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * prints out the AddCommand message in Duke format and"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * saves the list in the hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.formatAddTask(taskList.tasks, task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "        storage.saveTaskList(taskList.tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the command that terminates the program when executed. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Prints out the ByeCommand message in Duke format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Indicates that the program is terminating. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the user command. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The execute method for the child classes to implement."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Indicates whether the program is terminating. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the command that shows the deadlines/events occurring on a specific date inputted. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The inputted date. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public LocalDate queryDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param queryDate The inputted date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public DateCommand(LocalDate queryDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.queryDate \u003d queryDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Prints out the list of tasks that are occurring on the inputted date in Duke format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "        for (Task task : taskList.tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "                if (deadline.date.equals(queryDate)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "                    tasksOnDate.add(deadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "successs404"
        },
        "content": "                if (event.date.equals(queryDate)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "successs404"
        },
        "content": "                    tasksOnDate.add(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "successs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.formatShowTasksOnDate(tasksOnDate, queryDate);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the command that deletes a task from the taskList when executed. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The index of the task to be deleted. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public int num;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param num The index of the task to be deleted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public DeleteCommand(int num) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Deletes the task from TaskList\u0027s list,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * prints out the DeleteCommand message in Duke format and"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * saves the list in the hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.formatDeleteTask(taskList.tasks, num);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.deleteTask(num);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "        storage.saveTaskList(taskList.tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the command that marks a task in the taskList as done. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class DoneCommand extends  Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The index of the task to be marked as done. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public int num;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param num The index of the task to be marked as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public DoneCommand(int num) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Marks the task as done,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * prints out the DoneCommand message in Duke format and"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * saves the list in the hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.markTaskAsDone(num);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.formatMarkAsDone(taskList.tasks, num);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "        storage.saveTaskList(taskList.tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the command that finds the tasks that contain the keyword. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The keyword to query. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param keyword The keyword to query."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Prints out the list of tasks that contain the keyword in Duke format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "        for (Task task : taskList.tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (task.name.contains(keyword)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.formatFindTasks(matchingTasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the command that shows the taskList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Prints out the DoneCommand message in Duke format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param ui The UI that prints out messages in Duke format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param storage The storage system that saves the taskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ui.formatLst(taskList.tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 20
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents a Duke-related exception. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param message The error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDukeCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the Duke exception which is thrown when the user does not input a valid Duke command. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class InvalidDukeCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public InvalidDukeCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the Duke exception which is thrown when the user inputs a task index that is out of the list\u0027s range. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public InvalidTaskIndexException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(\"☹ OOPS!!! This task index does not exist in your list.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the Duke exception which is thrown when the user does not attach a date/time to a deadline/event. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class MissingDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public MissingDateTimeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super (\"☹ OOPS!!! The task does not have a date/time attached.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the Duke exception which is thrown when the user does not input a description to a task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class MissingTaskDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public MissingTaskDescriptionException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the Duke exception which is thrown when the user does not input a task index in a Done/Delete Command. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class MissingTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public MissingTaskIndexException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(\"☹ OOPS!!! There isn\u0027t a task index inputted\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 10
    }
  },
  {
    "path": "src/main/java/duke/parsers/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.commands.DateCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.exceptions.InvalidDukeCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.exceptions.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.exceptions.MissingDateTimeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.exceptions.MissingTaskDescriptionException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.exceptions.MissingTaskIndexException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents a parser that parses the user inputs and the list saved in the hard disk into a suitable format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": " * for Duke to process. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The formatter for user inputs. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The formatter for user inputs that are displayed in the list saved in the hard disk. */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private static final DateTimeFormatter FORMATTER_DISPLAY \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Parses the user inputs into a suitable format for Duke to process."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param userInput The user input fed into Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasks The list that stores tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @return An appropriate command to be executed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @throws DukeException If the userInput is invalid or missing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Command parse(String userInput, ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "successs404"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (userInput.substring(4).isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new MissingTaskIndexException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "successs404"
        },
        "content": "            int num \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (num \u003c\u003d 0 || num \u003e tasks.size()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new DoneCommand(num - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (userInput.substring(6).isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new MissingTaskIndexException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "successs404"
        },
        "content": "            int num \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (num \u003c\u003d 0 || num \u003e tasks.size()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new DeleteCommand(num - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (userInput.substring(4).isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new MissingTaskDescriptionException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new AddCommand(new ToDo(userInput.substring(5)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (userInput.substring(8).isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new MissingTaskDescriptionException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (!userInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "successs404"
        },
        "content": "            int pos \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "successs404"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(userInput.substring(pos + 4), FORMATTER_INPUT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new AddCommand(new Deadline(userInput.substring(9, pos - 1), date));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (userInput.substring(5).isEmpty()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new MissingTaskDescriptionException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (!userInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "successs404"
        },
        "content": "                throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "successs404"
        },
        "content": "            int pos \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "successs404"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(userInput.substring(pos + 4), FORMATTER_INPUT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new AddCommand(new Event(userInput.substring(6, pos - 1), date));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.startsWith(\"date\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new DateCommand(LocalDate.parse(userInput.substring(5), FORMATTER_INPUT));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return new FindCommand(userInput.substring(5));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "successs404"
        },
        "content": "            throw new InvalidDukeCommandException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Parses the user inputs in the list saved in the hard disk into a suitable format for Duke to process."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "successs404"
        },
        "content": "      * @param savedTaskList The list of user inputs in the list saved in the hard disk."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @return A list of tasks."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public ArrayList\u003cTask\u003e parseSavedTaskList(ArrayList\u003cString\u003e savedTaskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "successs404"
        },
        "content": "        for (String task : savedTaskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (task.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "successs404"
        },
        "content": "                tasks.add(new ToDo(isDone(task.substring(4, 5)), task.substring(7)));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "successs404"
        },
        "content": "            } else if (task.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "successs404"
        },
        "content": "                int pos \u003d task.indexOf(\"(by: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "successs404"
        },
        "content": "                tasks.add(new Deadline(isDone(task.substring(4, 5)),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "successs404"
        },
        "content": "                        task.substring(7, pos - 1),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "successs404"
        },
        "content": "                        LocalDate.parse(task.substring(pos + 5, task.length() - 1), FORMATTER_DISPLAY)));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "successs404"
        },
        "content": "            } else if (task.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "successs404"
        },
        "content": "                int pos \u003d task.indexOf(\"(at: \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "successs404"
        },
        "content": "                tasks.add(new Event(isDone(task.substring(4, 5)),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "successs404"
        },
        "content": "                        task.substring(7, pos - 1),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "successs404"
        },
        "content": "                        LocalDate.parse(task.substring(pos + 5, task.length() - 1), FORMATTER_DISPLAY)));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private boolean isDone(String symbol) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "successs404"
        },
        "content": "        String tick \u003d \"\" + \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return symbol.equals(tick);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 130
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the storage system that saves the list of tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The file that stores in the list of tasks in the hard disk. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "    File dataFile;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param directoryPath The path of the dataFile\u0027s directory."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param dataFilePath The path of the dataFile."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Storage(String directoryPath, String dataFilePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "            File directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "                directory.mkdirs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "            dataFile \u003d new File(dataFilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"An error occurred\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Generates a list of user inputs from the list saved in the hard disk for the Parser to process."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @return A list of user inputs in the list saved in the hard disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public ArrayList\u003cString\u003e readFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "successs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "successs404"
        },
        "content": "            Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "successs404"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "successs404"
        },
        "content": "                lines.add(sc.nextLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"An error occurred\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "successs404"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "successs404"
        },
        "content": "            return lines;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Saves the list of tasks into the hard disk."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasks The list of tasks to be saved into the hard disk."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void saveTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "successs404"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "successs404"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "successs404"
        },
        "content": "            sb.append(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "successs404"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "successs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "successs404"
        },
        "content": "            writeToFile(sb.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"An error occurred\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "successs404"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "successs404"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(dataFile.getPath());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "successs404"
        },
        "content": "        fileWriter.write(textToAdd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "successs404"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 78
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the dynamic list of tasks. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The list of tasks. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Marks a task that is stored in the list as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param num The index of the task to be marked as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void markTaskAsDone(int num) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "        tasks.get(num).markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Adds a task into the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Deletes a task from the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param num The index of the task to be deleted."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void deleteTask(int num) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "successs404"
        },
        "content": "        tasks.remove(num);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents a deadline task. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The date which the deadline should be done by. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param date The date which the deadline should be done by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Deadline(String name, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param isDone The indicator of whether the task is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param date The date which the deadline should be done by."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Deadline(boolean isDone, String name, LocalDate date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Returns the string representation of the task. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return String.format(\"%s%s (by: %s)\", \"[D]\", super.toString(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 39
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents an event task. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The date which the event is happening at. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param date The date which the event is happening at."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param isDone The indicator of whether the task is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param date The date which the event is happening at."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Event(boolean isDone, String name, LocalDate date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Returns the string representation of the task. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return String.format(\"%s%s (at: %s)\", \"[E]\", super.toString(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 39
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the task that is stored in the list. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The indicator of whether the task is done. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** The description of the task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param isDone The indicator of whether the task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Task(boolean isDone, String name) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Marks the task as done. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Returns the string representation of the task. */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return String.format(\"[%s] %s\", isDone ? \"DONE\" : \"NOT DONE\", name);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents a toDo task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param isDone The indicator of whether the task is done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param name The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public ToDo(boolean isDone, String name) { super(isDone, name); }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Returns the string representation of the task. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return String.format(\"%s%s\", \"[T]\", super.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "/** Represents the UI that prints out messages in Duke format. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Constructor. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the welcome message in Duke format. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "        format(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the goodbye message in Duke format. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "        format(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Reads the user input from the scanner. */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "    private void format(String message) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the list of tasks in Duke format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void formatLst(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "successs404"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "successs404"
        },
        "content": "        if (size \u003e 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "successs404"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "successs404"
        },
        "content": "                System.out.println(i + \".\" + tasks.get(i-1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the message where a task is marked as done in Duke format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param num The index of the task that is marked as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void formatMarkAsDone(ArrayList\u003cTask\u003e tasks, int num) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(tasks.get(num));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the list of tasks after a task is added in Duke format."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param task The task that is added."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void formatAddTask(ArrayList\u003cTask\u003e tasks, Task task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "successs404"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(String.format(\"Now you have %d %s in the list.\", size, size \u003d\u003d 1 ? \"task\" : \"tasks\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the list of tasks after a task is deleted in Duke format."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param num The index of the task that is deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void formatDeleteTask(ArrayList\u003cTask\u003e tasks, int num) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "successs404"
        },
        "content": "        int sizeAfterDeletion \u003d tasks.size() - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(tasks.get(num));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "successs404"
        },
        "content": "        System.out.println(String.format(\"Now you have %d %s in the list.\", sizeAfterDeletion,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "successs404"
        },
        "content": "                sizeAfterDeletion \u003d\u003d 1 ? \"task\" : \"tasks\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the list of tasks that occur on the specified date in Duke format."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param tasksOnDate The list of tasks that occur on the specified date."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param queryDate The specified date."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void formatShowTasksOnDate(ArrayList\u003cTask\u003e tasksOnDate, LocalDate queryDate) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "successs404"
        },
        "content": "        if (!tasksOnDate.isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(String.format(\"The following deadlines/events are scheduled on %s.\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "successs404"
        },
        "content": "                    queryDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "successs404"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasksOnDate.size(); i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "successs404"
        },
        "content": "                System.out.println(i + \".\" + tasksOnDate.get(i-1));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(String.format(\"There are no deadlines/events scheduled on %s.\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "successs404"
        },
        "content": "                    queryDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the list of tasks that contain the keyword in Duke format."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param matchingTasks The list of tasks that contain the keyword."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void formatFindTasks(ArrayList\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "successs404"
        },
        "content": "        if (!matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "successs404"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "successs404"
        },
        "content": "                System.out.println(i + \".\" + matchingTasks.get(i-1));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "successs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"There are no matching tasks in your list.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "successs404"
        },
        "content": "    /** Shows the error message in Duke format."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "successs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "successs404"
        },
        "content": "     * @param e The exception that is thrown."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "successs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "successs404"
        },
        "content": "        if (e instanceof DateTimeParseException) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The format of the date given is invalid.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "successs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "successs404"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "successs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "successs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 155
    }
  },
  {
    "path": "src/test/java/duke/tasklist/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void testMarkTaskAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "        TaskList taskList \u003d new TaskList(lst);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.addTask(toDo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.markTaskAsDone(0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "successs404"
        },
        "content": "        assertEquals(true, toDo.isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void testAddTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "successs404"
        },
        "content": "        TaskList taskList \u003d new TaskList(lst);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.addTask(toDo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "successs404"
        },
        "content": "        expected.add(toDo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "successs404"
        },
        "content": "        assertEquals(expected, lst);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "successs404"
        },
        "content": "        TaskList taskList \u003d new TaskList(lst);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.addTask(toDo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "successs404"
        },
        "content": "        taskList.deleteTask(0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "successs404"
        },
        "content": "        assertEquals(expected, lst);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 44
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-06-06\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "        String expected \u003d \"[D][NOT DONE] return book (by: Jun 06 2020)\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "        assertEquals(expected, deadline.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 18
    }
  },
  {
    "path": "src/test/java/duke/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", LocalDate.parse(\"2020-08-06\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "        String expected \u003d \"[E][NOT DONE] project meeting (at: Aug 06 2020)\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "        assertEquals(expected, event.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 18
    }
  },
  {
    "path": "src/test/java/duke/tasks/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "        String expected \u003d \"[T][NOT DONE] read book\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "        assertEquals(expected, toDo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "successs404": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "successs404"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "successs404"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "successs404"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "successs404"
        },
        "content": "deadline return book /by 2020-06-06"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "successs404"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "successs404"
        },
        "content": "event project meeting /at 2020-08-06"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "successs404"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "successs404"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "successs404"
        },
        "content": "date 2020-06-06"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "successs404"
        },
        "content": "date 2020-01-01"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "successs404"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "successs404"
        },
        "content": "find book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "successs404"
        },
        "content": "find phone"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "successs404"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "successs404": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "successs404"
        },
        "content": "del ..\\text-ui-test\\src\\main\\data\\data.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "successs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "successs404"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "successs404": 3,
      "-": 21
    }
  }
]
