[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 9
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public DeadlineTask(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(description.split(\" /\")[0]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String[] output \u003d description.split(\"/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String pattern \u003d (\"(by?)(\\\\s)(.+)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        deadline \u003d output[1].replaceAll(pattern, \"$3\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String toString()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), description, deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String logo \u003d \"   ___      _      _ __   _              \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"  /   \\\\    | |    | \u0027_ \\\\ | |_     __ _   \\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"  | - |    | |    | .__/ | \u0027 \\\\   / _` |  \\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"  |_|_|   _|_|_   |_|__  |_||_|  \\\\__,_|  \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"| \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027 \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String greeting \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"     Hello, Alpha here... welcome to my help centre... again :/\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"     Would you like to explain what you want?\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                respondToInput(input, taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                System.out.println(\"    \" + e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(\"    Bye. Try not to come again please... let me live.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static void respondToInput(String input, List\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String[] inputList \u003d input.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String command \u003d inputList[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (input.equalsIgnoreCase(Command.LIST.name())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            printTaskList(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        else if (command.equalsIgnoreCase(Command.DONE.name())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            int index \u003d checkDoneDeleteException(inputList, taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            taskList.get(index).setDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.println(\"    Finally... about time you finished that. Marked this task as done: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.println(\"      \" + taskList.get(index));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        else if (command.equalsIgnoreCase(Command.DELETE.name()))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            int index \u003d checkDoneDeleteException(inputList, taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.println(\"    Feeling weak? Giving up? Well done... Removed this task: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.println(\"      \" + taskList.remove(index));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        else if (command.equalsIgnoreCase(Command.DEADLINE.name()) ||"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            command.equalsIgnoreCase(Command.EVENT.name()) ||"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            command.equalsIgnoreCase(Command.TODO.name())) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            if (inputList.length \u003c 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                throw new DukeException(String.format(\"☹ BLEHHHHHH!!! The description of a %s cannot be empty.\", command));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            if (command.equalsIgnoreCase(Command.TODO.name())) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                String pattern \u003d \"(todo )(.+)\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                taskList.add(new ToDoTask(input.replaceAll(pattern, \"$2\")));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                printAddTaskListStatus(taskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            } else if (command.equalsIgnoreCase(Command.DEADLINE.name())) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                String pattern \u003d \"(deadline )(.+)\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                taskList.add(new DeadlineTask(input.replaceAll(pattern, \"$2\")));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                printAddTaskListStatus(taskList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            } else if (command.equalsIgnoreCase(Command.EVENT.name())) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                String pattern \u003d \"(event )(.+)\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                taskList.add(new EventTask(input.replaceAll(pattern, \"$2\")));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                printAddTaskListStatus(taskList);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(\"☹ BLEHHHHHH!!! I\u0027m (not) sorry, but I don\u0027t know what that means :/\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static int checkDoneDeleteException(String[] inputList, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (inputList.length \u003c 2)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(\"☹ BLEHHHHHH. Tell me which task??\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        int index \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (index \u003c 0 || index \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(String.format(\"☹ BLEHHHHHH. Task no. %d does not exist. Please try again.\", (index + 1)));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static void printAddTaskListStatus(List\u003cTask\u003e taskList)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        int size \u003d taskList.size();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(\"    Fine. I\u0027ve added this task:\") ;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(\"      \" + taskList.get(size - 1));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(\"    Now you have a total of \" + taskList.size() + (taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\") +  \" in your list.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static int getRemainingTaskCount(List\u003cTask\u003e taskList)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return (int) taskList.stream().filter(x -\u003e !x.isDone()).count();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static void printTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.print(\"    \" + (i+1) + \". \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            System.out.println(taskList.get(i));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 118,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 8
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public EventTask(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(description.split(\" /\")[0]);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String[] output \u003d description.split(\"/\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String pattern \u003d (\"(at?)(\\\\s)(.+)\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        eventTime \u003d output[1].replaceAll(pattern, \"$3\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String toString()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", getStatusIcon(), description, eventTime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 18
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void setDone()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "maxxyh": 23
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public ToDoTask(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String toString()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 1,
      "-": 20
    }
  }
]
