[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Luigi Task Manager User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "![](https://media.giphy.com/media/Dfk5q64stLdRu/giphy.gif)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "This Project is a Mario Themed Task Manager that allows you to schedules tasks to do!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "___"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "### Features of Luigi Task Manager"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "Here are the following features of the manager:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**1. Adding Tasks to a list**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**2. Display the list**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**3. Marking Tasks as completed**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**4. Deleting Tasks from a List**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**5. Search for certain tasks based on key words**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**6. Reschedule Tasks if edits are needed**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**7. Exiting the program**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**8. Storing of tasks**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "___"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "### List of details about how to use the features of the Manager"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "The following list contains details on what each"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "command does as well as examples of how to use it:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "1 Adding Tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "Users can add 3 Types of Tasks to the List."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- ToDo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- Deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- Event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " # **Command Input**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Todo:** todo \\\u003cdetail of task\\\u003e *OR* T \\\u003cdetail of task\\\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Todo task that only requires details of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  todo feed the dog      ([T][X] feed the dog)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  T pet the cat          ([T][X] pet the cat)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of output:*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [T][X] feed the dog"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 1 task in your list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Deadline:** deadline \\\u003cdetail of task\\\u003e /by \\\u003cdate \u0026 time\\\u003e *OR* DL \\\u003cdetail of task\\\u003e /by \\\u003cdate \u0026 time\\\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Deadline task that requires the details of the task and the date by which it needs to be completedby."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  deadline feed the dog /by 12/09/2020 1100      ([D][X] feed the dog (by: 12 Sep 2020, 11:00))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  DL pet the cat /by 12/09/2020 23:00            ([D][X] pet the cat (by: 12 Sep 2020, 23:00))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "   *Examples of output:*"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [D][X] feed the dog (by: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 2 tasks in your list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Event:** event \\\u003cdetail of task\\\u003e /at \\\u003cdate \u0026 time\\\u003e *OR* E \\\u003cdetail of task\\\u003e /at \\\u003cdate \u0026 time\\\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Event task that requires the details of the task and the date of when the event starts."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  event dog birthday party /at 12/09/2020 1100      ([E][X] dog birthday party (at: 12 Sep 2020, 11:00))"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  E belly rubbing ceremony /at 12/09/2020 23:00     ([E][X] belly rubbing ceremony (at: 12 Sep 2020, 23:00))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "*Examples of output:*"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 3 tasks in your list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "2 Display The List"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **List:** list **OR** L"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display all tasks added in the list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " L"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of output:*"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "3 Marking Completed Tasks"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Done:** done \\\u003cnumber of the task in the list to mark completed\\\u003e *OR* D \\\u003cnumber of the task in the list to mark completed\\\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will mark a task as completed based on the number in the list spcified."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " done 2"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " D 2"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "4 Deleting Tasks from the List"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Delete:** delete \\\u003cnumber of the task in the list to mark completed\\\u003e *OR* DEL \\\u003cnumber of the task in the list to mark completed\\\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will delete a task from the list based on the number in the list spcified."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " delete 2"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " DEL 2"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Now you have 2 tasks in your list"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *When command List is called again, the list will look like this:*"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 5 Search for certain tasks based on key words"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Find:** find \\\u003ckeyword\\\u003e *OR* F \\\u003ckeyword\\\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display a separate list of all tasks that contain the keyword."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " find dog"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " F dog"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 6 Reschedule Tasks"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Reschedule:** reschedule \\\u003cnumber of the task in the list to change\\\u003e /to \\\u003cdate to change to\\\u003e "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *OR* R \\\u003cnumber of the task in the list to change\\\u003e /to \\\u003cdate to change to\\\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will change the date and time of Event and Deadline tasks to the date specified vased on the number order in the list."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  An error will show if user tries to reschedule a Todo Task."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " reschedule 2 /to 10/11/2023 1500 "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " R 2 /to 10/11/2023 1500 "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Example of output:*"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Noted. I have now reschedule [E][X] dog birthday party (at: 12 Sep 2020, 11:00) to:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][X] dog birthday party (at: 10 Nov 2023, 15:00)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 7 Exiting the program"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Exit:** bye **OR** B."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display a farewell message before exiting the program."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " bye"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " B"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Example of output:*"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 8 Storing of Tasks"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Upon exiting the program, all tasks in the list will be saved onto a file called list.duke."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " If the file does not exist, anew file will be created in the hard drive of the pc."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "GoodBye"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ![](https://media.giphy.com/media/l3V0csAeJ2Q9rvrkA/giphy.gif)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Luigi Task Manager User Guide"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "![](https://media.giphy.com/media/Dfk5q64stLdRu/giphy.gif)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "This Project is a Mario Themed Task Manager that allows you to schedules tasks to do!"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "___"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "### Features of Luigi Task Manager"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "Here are the following features of the manager:"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**1. Adding Tasks to a list**"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**2. Display the list**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**3. Marking Tasks as completed**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**4. Deleting Tasks from a List**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**5. Search for certain tasks based on key words**"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**6. Reschedule Tasks if edits are needed**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**7. Exiting the program**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**8. Storing of tasks**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "___"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "### List of details about how to use the features of the Manager"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "The following list contains details on what each"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "command does as well as examples of how to use it:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "1 Adding Tasks"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "Users can add 3 Types of Tasks to the List."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- ToDo"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- Deadline"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- Event"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " # **Command Input**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Todo:** todo \\\u003cdetail of task\\\u003e *OR* T \\\u003cdetail of task\\\u003e"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Todo task that only requires details of the task."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  todo feed the dog      ([T][X] feed the dog)"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  T pet the cat          ([T][X] pet the cat)"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of output:*"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [T][X] feed the dog"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 1 task in your list"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Deadline:** deadline \\\u003cdetail of task\\\u003e /by \\\u003cdate \u0026 time\\\u003e *OR* DL \\\u003cdetail of task\\\u003e /by \\\u003cdate \u0026 time\\\u003e"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Deadline task that requires the details of the task and the date by which it needs to be completedby."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  deadline feed the dog /by 12/09/2020 1100      ([D][X] feed the dog (by: 12 Sep 2020, 11:00))"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  DL pet the cat /by 12/09/2020 23:00            ([D][X] pet the cat (by: 12 Sep 2020, 23:00))"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "   *Examples of output:*"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [D][X] feed the dog (by: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 2 tasks in your list"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Event:** event \\\u003cdetail of task\\\u003e /at \\\u003cdate \u0026 time\\\u003e *OR* E \\\u003cdetail of task\\\u003e /at \\\u003cdate \u0026 time\\\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Event task that requires the details of the task and the date of when the event starts."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  event dog birthday party /at 12/09/2020 1100      ([E][X] dog birthday party (at: 12 Sep 2020, 11:00))"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  E belly rubbing ceremony /at 12/09/2020 23:00     ([E][X] belly rubbing ceremony (at: 12 Sep 2020, 23:00))"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "*Examples of output:*"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 3 tasks in your list"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "2 Display The List"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **List:** list **OR** L"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display all tasks added in the list."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " list"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " L"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of output:*"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "3 Marking Completed Tasks"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Done:** done \\\u003cnumber of the task in the list to mark completed\\\u003e *OR* D \\\u003cnumber of the task in the list to mark completed\\\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will mark a task as completed based on the number in the list spcified."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " done 2"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " D 2"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "4 Deleting Tasks from the List"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Delete:** delete \\\u003cnumber of the task in the list to mark completed\\\u003e *OR* DEL \\\u003cnumber of the task in the list to mark completed\\\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will delete a task from the list based on the number in the list spcified."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " delete 2"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " DEL 2"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Now you have 2 tasks in your list"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *When command List is called again, the list will look like this:*"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 5 Search for certain tasks based on key words"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Find:** find \\\u003ckeyword\\\u003e *OR* F \\\u003ckeyword\\\u003e"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display a separate list of all tasks that contain the keyword."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " find dog"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " F dog"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 6 Reschedule Tasks"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Reschedule:** reschedule \\\u003cnumber of the task in the list to change\\\u003e /to \\\u003cdate to change to\\\u003e "
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *OR* R \\\u003cnumber of the task in the list to change\\\u003e /to \\\u003cdate to change to\\\u003e"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will change the date and time of Event and Deadline tasks to the date specified vased on the number order in the list."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  An error will show if user tries to reschedule a Todo Task."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " reschedule 2 /to 10/11/2023 1500 "
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " R 2 /to 10/11/2023 1500 "
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Example of output:*"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Noted. I have now reschedule [E][X] dog birthday party (at: 12 Sep 2020, 11:00) to:"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][X] dog birthday party (at: 10 Nov 2023, 15:00)"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 7 Exiting the program"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Exit:** bye **OR** B."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display a farewell message before exiting the program."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " bye"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " B"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Example of output:*"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 8 Storing of Tasks"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Upon exiting the program, all tasks in the list will be saved onto a file called list.duke."
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " If the file does not exist, anew file will be created in the hard drive of the pc."
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "GoodBye"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ![](https://media.giphy.com/media/l3V0csAeJ2Q9rvrkA/giphy.gif)"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 629,
      "-": 6
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 16,
      "-": 45
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 11
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# Luigi Task Manager User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "![](https://media.giphy.com/media/Dfk5q64stLdRu/giphy.gif)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "This Project is a Mario Themed Task Manager that allows you to schedules tasks to do!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "___"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "### Features of Luigi Task Manager"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "Here are the following features of the manager:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**1. Adding Tasks to a list**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**2. Display the list**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**3. Marking Tasks as completed**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**4. Deleting Tasks from a List**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**5. Search for certain tasks based on key words**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**6. Reschedule Tasks if edits are needed**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**7. Exiting the program**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "**8. Storing of tasks**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "___"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "### List of details about how to use the features of the Manager"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "The following list contains details on what each"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "command does as well as examples of how to use it:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "1 Adding Tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "Users can add 3 Types of Tasks to the List."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- ToDo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- Deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "- Event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " # **Command Input**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Todo:** todo \\\u003cdetail of task\\\u003e *OR* T \\\u003cdetail of task\\\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Todo task that only requires details of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  todo feed the dog      ([T][X] feed the dog)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  T pet the cat          ([T][X] pet the cat)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of output:*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [T][X] feed the dog"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 1 task in your list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Deadline:** deadline \\\u003cdetail of task\\\u003e /by \\\u003cdate \u0026 time\\\u003e *OR* DL \\\u003cdetail of task\\\u003e /by \\\u003cdate \u0026 time\\\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Deadline task that requires the details of the task and the date by which it needs to be completedby."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  deadline feed the dog /by 12/09/2020 1100      ([D][X] feed the dog (by: 12 Sep 2020, 11:00))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  DL pet the cat /by 12/09/2020 23:00            ([D][X] pet the cat (by: 12 Sep 2020, 23:00))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "   *Examples of output:*"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [D][X] feed the dog (by: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 2 tasks in your list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Event:** event \\\u003cdetail of task\\\u003e /at \\\u003cdate \u0026 time\\\u003e *OR* E \\\u003cdetail of task\\\u003e /at \\\u003cdate \u0026 time\\\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Adds a Event task that requires the details of the task and the date of when the event starts."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  event dog birthday party /at 12/09/2020 1100      ([E][X] dog birthday party (at: 12 Sep 2020, 11:00))"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  E belly rubbing ceremony /at 12/09/2020 23:00     ([E][X] belly rubbing ceremony (at: 12 Sep 2020, 23:00))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "*Examples of output:*"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Now you have 3 tasks in your list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "2 Display The List"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **List:** list **OR** L"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display all tasks added in the list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " L"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of output:*"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "3 Marking Completed Tasks"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Done:** done \\\u003cnumber of the task in the list to mark completed\\\u003e *OR* D \\\u003cnumber of the task in the list to mark completed\\\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will mark a task as completed based on the number in the list spcified."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " done 2"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " D 2"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "4 Deleting Tasks from the List"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Delete:** delete \\\u003cnumber of the task in the list to mark completed\\\u003e *OR* DEL \\\u003cnumber of the task in the list to mark completed\\\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will delete a task from the list based on the number in the list spcified."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " delete 2"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " DEL 2"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][✓] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Now you have 2 tasks in your list"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *When command List is called again, the list will look like this:*"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 5 Search for certain tasks based on key words"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Find:** find \\\u003ckeyword\\\u003e *OR* F \\\u003ckeyword\\\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display a separate list of all tasks that contain the keyword."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " find dog"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " F dog"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Examples of output:*"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 6 Reschedule Tasks"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Reschedule:** reschedule \\\u003cnumber of the task in the list to change\\\u003e /to \\\u003cdate to change to\\\u003e "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *OR* R \\\u003cnumber of the task in the list to change\\\u003e /to \\\u003cdate to change to\\\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will change the date and time of Event and Deadline tasks to the date specified vased on the number order in the list."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  An error will show if user tries to reschedule a Todo Task."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Example of your list:*"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 1. [T][X] feed the dog"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 2. [E][X] dog birthday party (at: 12 Sep 2020, 11:00)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 3. [D][X] pet the cat (by: 12 Sep 2020, 23:00)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " reschedule 2 /to 10/11/2023 1500 "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " R 2 /to 10/11/2023 1500 "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Example of output:*"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Noted. I have now reschedule [E][X] dog birthday party (at: 12 Sep 2020, 11:00) to:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " [E][X] dog birthday party (at: 10 Nov 2023, 15:00)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 7 Exiting the program"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "# **Command Input**"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  - **Exit:** bye **OR** B."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  Will display a farewell message before exiting the program."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  *Examples of input:*"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " bye"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " B"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "  "
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *Example of output:*"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ```"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " 8 Storing of Tasks"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " Upon exiting the program, all tasks in the list will be saved onto a file called list.duke."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " If the file does not exist, anew file will be created in the hard drive of the pc."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " "
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "GoodBye"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " ![](https://media.giphy.com/media/l3V0csAeJ2Q9rvrkA/giphy.gif)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 308,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * enum Commands states constant keywords that are used to determine the command inputted by user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    EXIT(\"bye\", \"B\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    LIST(\"list\", \"L\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    DONE(\"done\", \"D\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    TODO(\"todo\", \"T\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    DEADLINE(\"deadline\", \"DL\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    EVENT(\"event\", \"E\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    DELETE(\"delete\", \"DEL\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    RESCHEDULE(\"reschedule\", \"R\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    FIND(\"find\", \"F\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private final String abbr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    Commands(String keyword, String abbr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.abbr \u003d abbr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * compares keyword with the enum commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return Commands that corresponds to the keyword"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @throws DukeException if it is unable to match any of the enum commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static Commands findCommand(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        for (Commands c : values()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (keyword.equals(c.keyword) || keyword.equals(c.abbr)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        throw new DukeException(\"DukeException: OOPS!!! I\u0027m sorry, but Luigi is Italian and doesn\u0027t understand\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 37
    }
  },
  {
    "path": "src/main/java/DateConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * class handles all formatting for dates in Deadline and Event objects"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class DateConverter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private static final List\u003cString\u003e ACCEPTED_FORMATS_WITH_TIME \u003d Arrays.asList(\"d MMM yyyy HH:mm\", \"d-M-yyyy HH:mm\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            \"d/M/yyyy HHmm\", \"d/M/yyyy HH:mm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private static final List\u003cString\u003e ACCEPTED_FORMATS_DATE_ONLY \u003d Arrays.asList(\"d MMM yyyy\", \"d-M-yyyy\", \"d/M/yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private static final int HAS_TIME_INDICATOR \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private static final int NO_TIME_INDICATOR \u003d 30;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * compares accepted date formats with the string input. If it matches, it will create the Date in the format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param input String containing date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return LocalDateTime object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @SuppressWarnings(\"checkstyle:EmptyCatchBlock\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static LocalDateTime parseString(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            for (String format : ACCEPTED_FORMATS_WITH_TIME) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(format))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                            .withSecond(HAS_TIME_INDICATOR);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (DateTimeParseException ignored) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            for (String format : ACCEPTED_FORMATS_DATE_ONLY) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return LocalDate.parse(input, DateTimeFormatter.ofPattern(format)).atStartOfDay()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                            .withSecond(NO_TIME_INDICATOR);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (DateTimeParseException ignored) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"Unable to find time\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return LocalDateTime.parse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * takes a LocalDateTime Object and converts it back into String"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param dateTime LocalDateTime object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String form of dateTime"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static String parseLocalDateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (dateTime.getSecond() \u003d\u003d NO_TIME_INDICATOR) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return dateTime.format(DateTimeFormatter.ofPattern(ACCEPTED_FORMATS_DATE_ONLY.get(0)));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return dateTime.format(DateTimeFormatter.ofPattern(ACCEPTED_FORMATS_WITH_TIME.get(0)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 65
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * Deadline class creates a type of Task called deadline which contains a date and description of the task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private static final int dividerNum \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * Constructor to create a Deadline Object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param description description of deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param date the date of the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public Deadline(String description, LocalDateTime date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * creates a deadline a string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param str input form user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return Deadline object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static Deadline createDeadline(String str) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"Luigi wonders why the string is null\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String[] detailsArray \u003d str.split(\"/by\", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String description \u003d detailsArray[0].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String dateTimeString \u003d detailsArray[1].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            LocalDateTime dateTime \u003d DateConverter.parseString(dateTimeString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"No date found\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * converts a String into a condensed form"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return condesnsed form of inputted string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return String.format(\"D|%s|%s|%s\", super.isDone ? \"Y\" : \"N\", this.date, super.description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * unravels encoded Strings"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param code String that has been previously encoded()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return Deadline object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @throws DukeException in the event it is unable to decode the string"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static Deadline decode(String code) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (code.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String[] content \u003d code.split(\"\\\\|\", dividerNum);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (content.length !\u003d dividerNum) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                throw new DukeException(\"data string is not equal to 4\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(content[3], DateConverter.parseString(content[2]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (content[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                newDeadline.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return newDeadline;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"Unable to decode Deadline\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * overrides Deadline String output to be formatted"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String of formatted Deadline"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateConverter.parseLocalDateTime(this.date) + \")\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 89
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            assert text.length() \u003e 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 56
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * DukeException class handles exception unique to Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public DukeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 18
    }
  },
  {
    "path": "src/main/java/Encodable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * public interface to use encode()"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * @param \u003cT\u003e T is a generic type"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public interface Encodable\u003cT\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    String encode();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * Event class creates a type of Task called event which contains a date and description of the task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * constructor to mkae Event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public Event(String description, LocalDateTime date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * creates a Event from string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param details input from user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return Event object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static Event createEvent(String details) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (details \u003d\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"luigi thinks you are missing details\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String[] detailsArray \u003d details.split(\"/at\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String description \u003d detailsArray[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String dateTimeString \u003d detailsArray[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            LocalDateTime dateTime \u003d DateConverter.parseString(dateTimeString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return new Event(description, dateTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"Out of Bounds Exceptions\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * converts a String into a condensed form"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return condesnsed form of inputted string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return String.format(\"E|%s|%s|%s\", super.isDone ? \"Y\" : \"N\", this.date, super.description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * unravels encoded Strings"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param code String that has been previously encoded()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return Event object"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @throws DukeException in the event it is unable to decode the string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static Event decode(String code) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (code.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String[] content \u003d code.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (content.length !\u003d 4) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                throw new Error(\"data string is not equal to 4\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Event newEvent \u003d new Event(content[3], DateConverter.parseString(content[2]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (content[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                newEvent.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return newEvent;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"Unable to decode event\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * overrides Event String output to be formatted"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String of formatted Event"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateConverter.parseLocalDateTime(this.date) + \")\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 84
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * launches the javafx application"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param args arg to run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 14
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private TaskList tl \u003d Storage.load(Storage.FILE_PATH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MarioUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/LuigiDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * Start up the application with introduction dialog"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                DialogBox.getDukeDialog(UI.addLines(\"Mama Mia! I\u0027m Luigi \\nWhat can I do for you?\"), dukeImage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String response \u003d Parser.parseCode(tl, new UI(), input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (response.equals(UI.addLines(\"Bye. Hope to see you again soon!\"))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    DialogBox.getDukeDialog(UI.addLines(response), dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            TimeUnit.SECONDS.sleep(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 73
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * Parser class handles userinput from UI class and parses throught it to create the Task List"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * Takes all the necessary arguments to create the list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param taskList main list where all tasks are kept on"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param ui       scanner that takes user inputs"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static String parseCode(TaskList taskList, UI ui, String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String echo \u003d userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String split \u003d echo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String[] arr \u003d split.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String keyword \u003d arr[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Commands command \u003d Commands.findCommand(keyword);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case EXIT:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                return ui.addLines(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                return ui.addLines(taskList.printOutList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    int index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return ui.addLines(taskList.markCompleted(index));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return (new DukeException(\"Integer not detected\")).toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return ui.addLines(taskList.add(Deadline.createDeadline(arr[1])));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return (new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\", e))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                            .toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    ToDo item \u003d new ToDo(arr[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return ui.addLines(taskList.add(item));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return (new DukeException(\"OOPS!!! The description of a todo cannot be empty.\", e)).toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return ui.addLines(taskList.add(Event.createEvent(arr[1])));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return (new DukeException(\"OOPS!!! The description of a event cannot be empty.\", e)).toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    int index2 \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return ui.addLines(taskList.deleteTask(index2));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return (new DukeException(\"OOPS!!! There is no task at that list number to delete!\", e))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                             .toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                String findWord \u003d arr[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                taskList.findTask(findWord);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                return ui.addLines(taskList.printOutKeyWordList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            case RESCHEDULE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    Storage.save(taskList, Storage.FILE_PATH);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    String taskToChange \u003d arr[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return ui.addLines(taskList.rescheduleTask(taskToChange));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    return (new DukeException(\"OOPS!!! The description to reschedule a task cannot be empty\", e))"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                                .toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            default: return \"Unable to parse\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 103
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * Storage class handles saving and loading of data from the hard-drive"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static final String FILE_PATH \u003d \"duke/data/list.duke\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * saves the list of items in a hardcoded file called list.duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param list     TaskList object to be saved"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param filePath path to save file at"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static void save(TaskList list, String filePath) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        assert filePath.length() \u003e 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String[] directories \u003d filePath.split(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        Path path \u003d Paths.get(home, directories);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (!Files.exists(path.getParent())) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            boolean directoriesCreated \u003d path.getParent().toFile().mkdirs();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (!directoriesCreated) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                throw new DukeException(\"unable to create directory\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            for (Task item : list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                writer.write(item.encode() + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"IOexception detected\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * loads from list.duke form specified filePath"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param filePath filePath to search"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return TaskList containing all saved additions to the list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static TaskList load(String filePath) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            assert filePath.length() \u003e 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String[] directories \u003d filePath.split(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Path path \u003d Paths.get(home, directories);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            File history \u003d new File(path.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Scanner sc \u003d new Scanner(history);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            TaskList loadStore \u003d new TaskList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                Task loadedTask \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                switch (line.charAt(0)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    loadedTask \u003d Event.decode(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    loadedTask \u003d Deadline.decode(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    loadedTask \u003d ToDo.decode(line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    throw new DukeException(\"Unable to find\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                loadStore.add(loadedTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return loadStore;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"String Index out of bounds\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 87
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * Represents a task to do and creates a parent class with child classes Event, ToDo, Deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public abstract class Task implements Encodable\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * Constructor for making a Task Object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * obtains a tick or cross from a Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String [✓] or [✗]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * marks a task as completed by turning boolean isDone to true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * overrides Task String output to be formatted"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String of formatted Task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String s \u003d \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 49
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * TaskList manages the list of tasks and implements the iterable interface"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfItems;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfKeyWordItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.listOfItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * adds a task to the list of items"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param item task that is being added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String output stating its has been added"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String add(Task item) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        this.listOfItems.add(item);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return String.format(\"\\nGot it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in your list.\\n\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                item.toString(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                this.listOfItems.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfItems() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return listOfItems;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * marks a task in the list with [✓] to state it is done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param index position of the task to be marked in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String output stating that the task has been marked completed"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @throws DukeException if the number given is not on the list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String markCompleted(int index) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            //assert index \u003e 0 \u0026\u0026 index \u003c this.listOfItems.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Task item \u003d this.getListOfItems().get(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            item.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return String.format(\"\\nNice! I\u0027ve marked this task as done:\\n  %s\\n\", item.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return (new DukeException(\"List does not contain the number specified\")).toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * removes a task form the list at the specified position"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String output stating that the task has been removed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @throws DukeException if the number given is not on the list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Task item \u003d this.getListOfItems().remove(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return String.format(\"\\nNoted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in your list.\\n\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    item.toString(),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    this.getListOfItems().size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return (new DukeException(\"List does not contain the number specified\")).toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * reschedule either a deadline or event with a new date and time"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param details the details to change the date to"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String withe the new date and time"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String rescheduleTask(String details) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (details \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"I need something to work with.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String[] detailsArray \u003d details.split(\"/to\", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String indexString \u003d detailsArray[0].trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            int index \u003d Integer.parseInt(indexString) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            Task temp \u003d this.getListOfItems().get(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String dateTimeString \u003d detailsArray[1].trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            LocalDateTime dateTime \u003d DateConverter.parseString(dateTimeString);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (temp instanceof Deadline) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                Task item \u003d new Deadline(temp.description, dateTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                if (temp.isDone) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    item.markAsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                this.getListOfItems().set(index, item);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                return String.format(\"\\nNoted. I have now rescheduled %s to :\\n \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                                + \" %s\\nYou still have %d tasks in your list.\\n\", temp.toString(), item.toString(),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                        this.getListOfItems().size());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            } else if (temp instanceof Event) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                Task item \u003d new Event(temp.description, dateTime);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                if (temp.isDone) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                    item.markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                this.getListOfItems().set(index, item);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                return String.format(\"\\nNoted. I have now rescheduled %s to :\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                                + \"  %s\\nYou still have %d tasks in your list.\\n\", temp.toString(), item.toString(),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                        this.getListOfItems().size());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                return (new DukeException(\"ToDo Task detected. Unable to reschedule\")).toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return (new DukeException(\"Unable reschedule the specified Task\")).toString();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * searches the listOF Items for any task that contains the key word"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param keyWord word being looked for"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void findTask(String keyWord) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        assert keyWord.length() \u003e 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        listOfKeyWordItems.clear();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        for (Task item : getListOfItems()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (item.toString().indexOf(keyWord) !\u003d -1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                listOfKeyWordItems.add(item);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * prints out the list of items that have the keyword contained"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return a string of the list of key words tasks"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String printOutKeyWordList() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String list \u003d \"\\nHere are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfKeyWordItems.size(); i++) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            list +\u003d String.format(\"%d.%s\\n\", i + 1, listOfKeyWordItems.get(i).toString());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * prints out the list of all tasks"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return string output of the list of items"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String printOutList() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String list \u003d \"\\nHere are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        for (int i \u003d 0; i \u003c this.getListOfItems().size(); i++) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            list +\u003d String.format(\"%d.%s\\n\", i + 1, this.listOfItems.get(i).toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * iterates over the list of items"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return iterator with generic T as Task"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return this.listOfItems.iterator();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 174
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * ToDo class creates a type of Task called ToDo which contains a description of the task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * convertes a String into a condensed form"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return condesnsed form of inputted string"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return String.format(\"T|%s|%s\", super.isDone ? \"Y\" : \"N\", super.description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * unravels encoded Strings"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param code String that has been previously encoded()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return ToDo object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @throws DukeException in the event it is unable to decode the string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static ToDo decode(String code) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        assert code.length() \u003e 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        if (code.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            String[] content \u003d code.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (content.length !\u003d 3) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                throw new Error(\"data string is not equal to 4\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            ToDo newToDo \u003d new ToDo(content[2]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            if (content[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                newToDo.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            return newToDo;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            throw new DukeException(\"Unable to decode ToDo\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * overrides ToDo String output to be formatted"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @return String of formatted ToDo"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 52
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " * UI class handles the scanner object and UI elements seen by user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static final String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    UI(){}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * adds the LINEs to make it look nice"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     * @param content String item to be wrapped by two lines"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public static String addLines(String content) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        assert content.length() \u003e 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        return LINE + \"\\n\" + content + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 25
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" styleClass\u003d\"messageWindow\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"profilePic\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003cAnchorPane fx:id\u003d\"userinput\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "      \u003cVBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"558.0\" prefWidth\u003d\"400.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"558.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" styleClass\u003d\"background\" stylesheets\u003d\"@../css/style.css\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-border-width: 10;\" styleClass\u003d\"background\" stylesheets\u003d\"@../css/style.css\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 20
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void testEncode() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "String expectedOutput \u003d \"D|N|2019-12-02T18:00|return book\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "Deadline toEncode \u003d Deadline.createDeadline(\"return book /by 2/12/2019 1800\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "String encoded \u003d toEncode.encode();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "assertEquals(expectedOutput, encoded);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import org.junit.jupiter.api.Test;import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void testEventCreator() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        Event eventToTest \u003d Event.createEvent(\"test /at 5/05/2019\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String expectedOutcome \u003d \"[E][\\u2718] test (at: 5 May 2019)\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        assertEquals( expectedOutcome, eventToTest.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    public void testMarkCompleted() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        tl.getListOfItems().add(Deadline.createDeadline(\"return book /by 2/12/2019 1800\"));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String markedTask \u003d tl.markCompleted(0);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        String expectedOutput \u003d \"\\nNice! I\u0027ve marked this task as done:\\n  [D][\\u2713] return book (by: 2 Dec 2019 18:00)\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "        assertEquals(expectedOutput ,markedTask);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "REM compare the output to the expected outputruntest"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 7,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Marcon2509"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Marcon2509": 2,
      "-": 38
    }
  }
]
