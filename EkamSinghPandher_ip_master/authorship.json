[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.DukeBot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        DukeBot.simulate();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 3,
      "-": 4
    }
  },
  {
    "path": "src/main/java/com/Duke/DataManager/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.DataManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static void write(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String homeDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Path dataFolderPath \u003d Paths.get(homeDir, \"data\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(Files.exists(dataFolderPath)){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                Files.createDirectories(dataFolderPath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }catch (Exception e){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                throw new DukeException(\"Unable to create a files for storage\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Path dataFilePath \u003d Paths.get(homeDir, \"data\", \"DukeData.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        File dukeData \u003d dataFilePath.toFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if (!dukeData.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                dukeData.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }catch (Exception e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                throw new DukeException(\"Unable to create a files for storage\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            FileWriter writer \u003d new FileWriter(dukeData);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            for (Task item : taskList.getListOfTasks()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                writer.write(item.toSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"Error saving files\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static List\u003cTask\u003e read(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String homeDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Path filePath \u003d Paths.get(homeDir, \"data\", \"DukeData.txt\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            while(sc.hasNextLine()){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                String[] dataArr \u003d data.split(\"\\\\*\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                if(dataArr[0] \u003d\u003d \"T\"){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if(dataArr[2] \u003d\u003d \"Y\"){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new ToDo(dataArr[1], true));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new ToDo(dataArr[1], false));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }else if (dataArr[0]\u003d\u003d\"E\"){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if(dataArr[4] \u003d\u003d \"Y\"){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Event(dataArr[1], dataArr[2], dataArr[3], true));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Event(dataArr[1], dataArr[2], dataArr[3], false));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }else if(dataArr[0]\u003d\u003d\"D\"){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if(dataArr[4] \u003d\u003d \"Y\"){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Deadline(dataArr[1], dataArr[2], true));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Deadline(dataArr[1], dataArr[2], false));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if(dataArr[2] \u003d\u003d \"Y\"){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Task(dataArr[1], true));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Task(dataArr[1], false));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 94
    }
  },
  {
    "path": "src/main/java/com/Duke/DukeBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.DataManager.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DukeBot{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    //This class handles the simulation of the Duke chat bot"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static void simulate(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        TaskList ls \u003d new TaskList(Storage.read());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        boolean hasBye \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String[] splitList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String line \u003d \"     ___________________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String introText1 \u003d \"     Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String introText2 \u003d \"     What can I do for you?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(introText1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(introText2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        while(!hasBye){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            splitList \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            if(input.equals(\"bye\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    Storage.write(ls);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    hasBye \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch (DukeException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else if(input.equals(\"list\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ls.printTask();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch(DukeException e){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else if(splitList[0].equals(\"done\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ls.setDone(Integer.parseInt(splitList[1]) - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch (DukeException e){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! There arent that many tasks in your list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else if(splitList[0].equals(\"todo\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ToDo todo \u003d new ToDo(splitList[1], false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Got it I\u0027ve now added this Task:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"       \" + todo.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ls.add(todo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch (Exception e){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else if(splitList[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    String[] splitList2 \u003d splitList[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    Deadline deadline \u003d new Deadline(splitList2[0], splitList2[1], false);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Got it I\u0027ve now added this Task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"       \" + deadline.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ls.add(deadline);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                } catch (Exception e){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     \\u2639 OOPS!!! The description or the time to complete by of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else if(splitList[0].equals(\"event\")){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    String[] splitList2 \u003d splitList[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    String[] splitList3 \u003d splitList2[1].split(\"-\", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    Event event \u003d new Event(splitList2[0], splitList3[0], splitList3[1], false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Got it I\u0027ve now added this Task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"       \" + event.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ls.add(event);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     \\u2639 OOPS!!! The description or the time duration of a event cannot be empty.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else if(input.equals(\"blah\")){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    Blah.blahCreated();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch (DukeException e){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else if(splitList[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ls.delete(Integer.parseInt(splitList[1]));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch(DukeException e){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally{"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    Task task \u003d new Task(input, false);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    ls.add(task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(\"     added: \" + input);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }catch(DukeException e){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }finally {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 140
    }
  },
  {
    "path": "src/main/java/com/Duke/TaskManager/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.TaskManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String errorMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DukeException(String errorMsg){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"     \\u2639 OOPS!!!\" + this.errorMsg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 14
    }
  },
  {
    "path": "src/main/java/com/Duke/TaskManager/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.TaskManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    //This class manages the list of Tasks that the user has added"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public final List\u003cTask\u003e ls;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public TaskList(List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.ls \u003d ls;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public int length(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return ls.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void setDone(int task) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(task\u003els.size()){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"You don\u0027t have that many tasks\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ls.set(task, ls.get(task).done());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"       \" + ls.get(task).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.ls;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void delete(int task) throws DukeException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(task\u003els.size()){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"You don\u0027t have that many tasks\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"       \" + ls.get(task-1).toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ls.remove(task-1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void add(Task task){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ls.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void printTask() throws DukeException{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(ls.isEmpty()){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"Sorry you have no tasks in your list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            for (int i \u003d 0; i \u003c ls.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                int j \u003d i + 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                System.out.println(\"     \" + j + \".\" + ls.get(i).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 59
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Blah.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Blah {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static void blahCreated() throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 10
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Deadline(String task, String deadline, boolean isDone)throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String getDeadline(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"(by:\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Deadline done() throws DukeException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new Deadline(this.task, this.deadline,true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? \"D*\" + task + \"*\" + deadline + \"*Y\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : \"D*\" + task + \"*\" + deadline + \"*N\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[D][\\u2713] \" + this.getTask() + this.getDeadline())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[D][\\u2718] \" + this.getTask() + this.getDeadline());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 34
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String start;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String end;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Event(String task, String start, String end, boolean isDone)throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? \"E*\" + task + \"*\" + start + \"*\"+ end + \"*Y\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : \"E*\" + task + \"*\" + start + \"*\"+ end + \"*N\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String getDeadline(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"(at:\" + this.start + \"-\" + this.end + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Event done() throws DukeException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new Event(this.task, this.start, this.end, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[E][\\u2713] \" + this.getTask() + this.getDeadline())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[E][\\u2718] \" + this.getTask() + this.getDeadline());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 38
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    //This class manages the information of each task within Dukes Task List"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    protected final String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Task(String task, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(task.trim().isEmpty()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? task + \"*Y\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : task + \"*N\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Task done() throws DukeException{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new Task(this.task, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String getTask(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[\\u2713] \" + this.getTask())"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[\\u2718] \" + this.getTask());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 45
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public final class ToDo extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public ToDo(String task, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public ToDo done() throws DukeException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new ToDo(this.task, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? \"T*\" + task + \"*Y\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : \"T*\" + task + \"*N\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[T][\\u2713] \" + this.getTask())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[T][\\u2718] \" + this.getTask());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "todo Buy Dinner"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "todo Eat Chicken"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "deadline /by friday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "done 2"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 4
    }
  }
]
