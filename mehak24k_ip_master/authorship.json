[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/*"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 18,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "D ~ 0 ~ read book ~ 2020-08-26"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "T ~ 0 ~ read readings"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "T ~ 0 ~ bake bread"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "T ~ 0 ~ buy bread"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "T ~ 0 ~ shopping"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "D ~ 0 ~ read book ~ 2020-08-27"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 6
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents an add command for adding a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Executes the add command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param tasks list of tasks to which the task is to be added"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param ui user interface to display added message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param storage file storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        if (tasks.containsTask(this.task)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return ui.showDuplicateMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            tasks.add(this.task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return ui.showAddedMessage(this.task, tasks.getTotalTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 25
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a generic command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param ui user interface for printing relevant messages for the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param storage file storage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the format for permanent storage of a deadline task in file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return string format for storing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String getStoringFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"D \" + super.getStoringFormat() + \" ~ \" + this.by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 33
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a delete command for adding a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param ui user interface to display deleted message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param storage file storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Task currTask \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        tasks.delete(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return ui.showDeletedMessage(currTask, tasks.getTotalTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 23
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a done command for marking a task as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Executes the done command to mark a task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param ui user interface to display deleted message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param storage file storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        tasks.markTaskAsDone(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Task currTask \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return ui.showDoneMessage(currTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents the main Chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.run(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Loads the saved tasks into the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param filePath path to file containing saved tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Activates and deactivates the Chatbot accordingly."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 47,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents an exception arising from the flow of the Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"☹ OOPS!!! \" + this.message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public LocalDate getEventDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the format for permanent storage of an event task in file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return string format for storing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String getStoringFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"E \" + super.getStoringFormat() + \" ~ \" + this.at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 33
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents an exit command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Executes the exit command to say goodbye to the user and save the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param ui user interface to display deleted message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param storage file storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 21
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    String filter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public FindCommand(String filter) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.filter \u003d filter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return ui.showFindMessage(tasks.listFilteredTasks(this.filter));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 12
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a list command for listing all tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Executes the list command to list all current tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param ui user interface to display deleted message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param storage file storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return ui.showListMessage(tasks.getTasksList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 15
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a parser to make sense of the user commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the appropriate command to be carried out after scanning the user command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param fullCommand original user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return command to be executed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @throws DukeException for errors such as non-comprehensible user commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Scanner parserScanner \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            // goodbye command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } else if (fullCommand.contains(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            // done command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            parserScanner.skip(\"done\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            assert parserScanner.hasNextInt() : \"Cannot read task number for done command\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            int taskNumber \u003d parserScanner.nextInt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } else if (fullCommand.contains(\"find\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            // find command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            parserScanner.skip(\"find\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            assert parserScanner.hasNext() : \"Cannot find filter word\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            String filterWord \u003d parserScanner.next();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return new FindCommand(filterWord);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            // list command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } else if (fullCommand.contains(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            // delete command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            parserScanner.skip(\"delete\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            assert parserScanner.hasNextInt() : \"Cannot read task number for delete command\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            int taskNumber \u003d parserScanner.nextInt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            Task currTask;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            if (fullCommand.contains(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                // add command for todotask"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                parserScanner.skip(\"todo\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                if (parserScanner.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    parserScanner.skip(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    assert parserScanner.hasNext() : \"Cannot read description of todo\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    currTask \u003d new Todo(parserScanner.nextLine());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            } else if (fullCommand.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                // add command for deadline"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                parserScanner.skip(\"deadline \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                parserScanner.useDelimiter(\" /by \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                currTask \u003d new Deadline(parserScanner.next(), parserScanner.next());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                // add command for event"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                if (fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    parserScanner.skip(\"event \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    parserScanner.useDelimiter(\" /at \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    currTask \u003d new Event(parserScanner.next(), parserScanner.next());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            assert currTask !\u003d null : \"Task to perform cannot be null\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return new AddCommand(currTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 73
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents the file handling aspect of reading and writing files."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    ArrayList\u003cTask\u003e loadedTasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.loadedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Writes task information to the file for permanent storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param filePath path to file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param textToAdd text to be added into the file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param isAppending indicates if text is being appended to the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @throws IOException for input/output errors"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private void writeToFile(String filePath, String textToAdd, boolean isAppending) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath, isAppending);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        fileWriter.write(textToAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns an ArrayList of tasks from the stored tasks information upon reading the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return ArrayList of existing tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @throws DukeException if file is not found"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @throws IOException for input/output errors"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                String nextLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                Scanner s2 \u003d new Scanner(nextLine);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                String taskType \u003d s2.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                boolean isDone \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                Task currTask;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    s2.useDelimiter(\" ~ \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (s2.nextInt() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    currTask \u003d new Todo(s2.next());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    loadedTasks.add(currTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        currTask.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    s2.useDelimiter(\" ~ \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (s2.nextInt() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    currTask \u003d new Deadline(s2.next(), s2.next());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    loadedTasks.add(currTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        currTask.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    s2.useDelimiter(\" ~ \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (s2.nextInt() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    currTask \u003d new Event(s2.next(), s2.next());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    loadedTasks.add(currTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        currTask.markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            throw new DukeException(\"Input-Output error\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.loadedTasks;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Saves tasks into a file for permanent storage."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param tasks ArrayList of tasks to be saved"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    writeToFile(filePath, tasks.get(i).getStoringFormat() +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                            System.lineSeparator(), false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    writeToFile(filePath, tasks.get(i).getStoringFormat() +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                            System.lineSeparator(), true);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 115
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a generic task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns a tick or cross mark depending on whether the task has been marked as completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return tick or cross symbol"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the format for permanent storage of a task in file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return string format for storing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String getStoringFormat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return \"~ 1 ~ \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            return \"~ 0 ~ \" + this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 48
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a list of all tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private int totalTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.tasks \u003d tasksList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.totalTasks \u003d tasksList.size();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.totalTasks \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Checks whether the list of tasks contains a task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param task the task to be checked."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return boolean value indicating if the list contains the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public boolean containsTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        boolean isDuplicate \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            Task currTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            if (currTask.getDescription().equals(task.getDescription())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                if (task instanceof Deadline \u0026\u0026 currTask instanceof Deadline) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (((Deadline) currTask).getDueDate().equals(((Deadline) task).getDueDate())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        isDuplicate \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                } else if (task instanceof Event \u0026\u0026 currTask instanceof Event) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    if (((Event) currTask).getEventDate().equals(((Event) task).getEventDate())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                        isDuplicate \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                } else if (task instanceof Todo){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                    isDuplicate \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return isDuplicate;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param taskNumber number of task to be deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void delete(int taskNumber) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        totalTasks--;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param taskNumber number of task to be marked as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns a specific task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param taskNumber number of task to be returned."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return a specific task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the total number of tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return total number of tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.totalTasks;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the list of tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public ArrayList\u003cTask\u003e listFilteredTasks(String filter) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        for (int i \u003d 0; i \u003c totalTasks; i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            if (tasks.get(i - 1).description.contains(filter)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                filteredTasks.add(tasks.get(i));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 107
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a to-do task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the format for permanent storage of a to-do task in file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return string format for storing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String getStoringFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"T \" + super.getStoringFormat();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " * Represents a user interface (UI) to deal with interactions with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a welcome message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Returns the user input in a String format upon scanning the system input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @return user input in String format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        // scans for the next command (input from user)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a message to indicate that a task has been marked as completed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param task task which has been marked as completed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showFindMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        String findMessage \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            findMessage \u003d findMessage + i + \".\" + tasks.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return findMessage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a message to indicate that a task has been deleted."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param task task which has been deleted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param totalTasks total number of tasks left after deletion."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showDeletedMessage(Task task, int totalTasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + \"\\nNow you have \" + totalTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a message to indicate that a task has been added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param task task which has been added."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param totalTasks total number of tasks left after addition."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showAddedMessage(Task task, int totalTasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + \"\\nNow you have \" + totalTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a message to indicate the list of all tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showListMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        String listMessage \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            listMessage \u003d listMessage + i + \".\" + tasks.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return listMessage;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showDuplicateMessage() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"This task has already been added to your list!\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a message to say goodbye to the user with an uplifting quote."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showGoodbyeMessage() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + \"Those who are crazy enough to think that they can \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                + \"change the world are the ones who usually do. Dream big!\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a message to show the error encountered."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * @param errorMessage error message to be printed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     * Prints a message to indicate an error in loading the file containing saved tasks."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        return \"File loading error!\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 109
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 19
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void eventStringTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Event myEvent \u003d new Event(\"test event\", \"2020-08-26\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        String expectedStringRep \u003d \"[E][✘] test event (at: Aug 26 2020)\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        assertEquals(myEvent.toString(), expectedStringRep);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 11
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void addTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        TaskList myList \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Todo testTodo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        myList.add(testTodo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        assertEquals(myList.getTotalTasks(), 1);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void deleteTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        TaskList myList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Todo testTodo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Todo anotherTestTodo \u003d new Todo(\"another test\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        myList.add(testTodo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        myList.add(anotherTestTodo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        myList.delete(2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        assertEquals(myList.getTotalTasks(), 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 24
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    public void todoStringTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        Todo myTodo \u003d new Todo(\"hello\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        String expectedStringRep \u003d \"[T][✘] hello\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "        assertEquals(myTodo.toString(), expectedStringRep);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mehak24k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mehak24k"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/Chatbot.java ../src/main/java/Task.java ../src/main/java/Todo.java ../src/main/java/Deadline.java ../src/main/java/Event.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mehak24k": 3,
      "-": 37
    }
  }
]
