[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "T | 1 | test1"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents a Task Chatbot that helps the user to track of the task to be done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the Duke class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Loads and reads the data from the text file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param filePath the path of the text file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Processes the user input and execute the commands"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * main method that runs the run method"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param args Unused"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 58
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Takes the user\u0027s command and parse it"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected static List\u003cString\u003e inputFormat \u003d Arrays.asList(\"dd/MM/yyyy HHmm\", \"yyyy-mm-dd Haaa\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected static SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"MMM dd yyyy h:mma\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Converts the input date to another date format, if it exist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param str users date input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String representation of the new date format or the original date input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static String dateParser(String str) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        for (String input : inputFormat) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                date \u003d new SimpleDateFormat(input).parse(str);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (ParseException ignore) { }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return outputFormat.format(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a command object based on the users\u0027 input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param input users\u0027 input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return Command to be executed"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is any parsing error"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String[] inputArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (inputArray.length \u003d\u003d 1 \u0026\u0026 (inputArray[0].equals(\"done\") || inputArray[0].equals(\"delete\") || inputArray[0].equals(\"todo\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                || inputArray[0].equals(\"deadline\") || inputArray[0].equals(\"event\") || inputArray[0].equals(\"find\"))) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new EmptyDescriptionException((\"The description of \" + inputArray[0] + \" cannot be empty. Please re-enter\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        switch (inputArray[0]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new DoneCommand(Integer.parseInt(inputArray[1]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(inputArray[1]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new FindCommand(inputArray[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new TodoCommand(inputArray[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                formatChecker(inputArray);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                String str \u003d inputArray[1].split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                String date \u003d inputArray[1].split(\"/\", 2)[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new DeadlineCommand(str, dateParser(date));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                formatChecker(inputArray);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                String str \u003d inputArray[1].split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                String date \u003d inputArray[1].split(\"/\", 2)[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                return new EventCommand(str, dateParser(date));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                throw new CommandException(\"Im sorry, I do not understand what you mean. Please re-enter:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Checks if there is any format discrepancy"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param input users\u0027 input"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is an incorrect format"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private static void formatChecker(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String str \u003d input[1].split(\" /\", 2)[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            if(input[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                if (!input[1].split(\"/\", 2)[1].split(\" \" ,2)[0].equals(\"by\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    throw new WrongFormatException(\"Incorrect format, Please re-enter\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                if (!input[1].split(\"/\", 2)[1].split(\" \", 2)[0].equals(\"at\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    throw new WrongFormatException(\"Incorrect format, Please re-enter\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new WrongFormatException(\"Incorrect format, Please re-enter:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 112
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Handles the read and write operations to the data file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    String path;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    String content \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the Storage Class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param path relative filepath where the datafile is located"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Reads the datafile if it exists else it creates a new data file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds all the tasks on the datafile into a new ArrayList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return returns a list of Task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is error reading the file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String fileLine \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                throw new DukeException(\"File cannot be created\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                while ((fileLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    content +\u003d fileLine + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    String[] str \u003d fileLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    switch (str[0]) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                            taskList.add(new Todo(str[2], Integer.parseInt(str[1])));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                            taskList.add(new Deadline(str[2], Integer.parseInt(str[1]), str[3]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        case \"E\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                            taskList.add(new Event(str[2], Integer.parseInt(str[1]), str[3]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                content \u003d content.trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                throw new DukeException(\"File not Found\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                throw new DukeException(\"Error reading file: \" + path);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Saves the task into the current datafile"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be saved"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void save(Task task) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if(content.isEmpty()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content \u003d task.saveText(task.getStatus());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content \u003d content + \"\\n\" + task.saveText(task.getStatus());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Deletes the task from the data file"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be deleted"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void delete(Task task) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content \u003d content.replace(task.saveText(task.getStatus()), \"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Replaces the uncompleted task with completed task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task that has been completed"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void replace(Task task) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content \u003d content.replace(task.saveText(0), task.saveText(1));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Updates and writes all the changes into a text file upon exiting the program"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is error writing file"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void update() throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            writer.write(content);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new DukeException(\"Error writing file: \" + path);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 127
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents a list of Tasks that uses an ArrayList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the TaskList Class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new ArrayList of Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the TaskList Class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Takes in an existing lists of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList existing list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Deletes the task from the list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be deleted"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void removeTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Retrives the task from the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param index index of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Get the current list of tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 69
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Handles the interaction with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Uses Scanner to take in user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return user input as a String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Greeting messages when bot starts up"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Goodbye messages upon bot exits"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints messages to the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void print(String str) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints the error message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param error error message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Bye\" Command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eByeCommand\u003c/code\u003e object corresponds to a command of an input \"bye\"."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Sets the variable isExit to true and prints the exit message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * It also writes and save the data to the datafile before exiting"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException Exception when there is an error updating the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.update();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 29
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Command is an abstract class for all commands that the user will be inputting."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * a \u003ccode\u003eCommand\u003c/code\u003e object corresponds to the input of the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Command class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a boolean stating whether the program is going to exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return true if program is going end by next call else false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Abstract method that executes the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException Exception that happens when there is an invalid input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    abstract public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Deadline\" Command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDeadlineCommand\u003c/code\u003e object corresponds to a command with an input of \"Deadline\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description and date as a String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    String description, date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DeadlineCommand class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param date date of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new Task based on the description and date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the taskList object and prints the corresponding messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Save the task into the datafile."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTask(taskList.getList().size() - 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Now you have \" + taskList.getList().size() + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.save(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Delete\" Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to a command with an input of \"Delete\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * followed by the index of the task to be deleted"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DeleteCommand Class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param index The index of the task to be deleted"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Retrieve task from taskList and remove the task from it."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints corresponding messages and deletes the task from the datafile"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.removeTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Noted. I\u0027ve deleted this task:\\n\" + task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Now you have \" + (taskList.getList().size()) + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.delete(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DoneException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Done\" command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to a command of an input \"done\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * followed by the index of the task in which is completed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DoneCommand Class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param index The index of task that has been completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Retrieve task from taskList and marks the task as completed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints corresponding messages and replace the old task in the datafile"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            ui.print(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            ui.print(task.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            storage.replace(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DoneException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            ui.print(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 47
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Event\" Command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eEventCommand\u003c/code\u003e object that corresponds to a command of an input \"event\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description and date as a String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    String description, date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the EventCommand Class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param date date of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public EventCommand(String description, String date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new Task based on the description and date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the taskList object and prints the corresponding messages."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Save the task into the datafile."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTask(taskList.getList().size() - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Now you have \" + taskList.getList().size() + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.save(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 45
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.FindException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Find\" Command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eFindCommand\u003c/code\u003e object that corresponds to a command of an input \"find\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description as a String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the FindCommand Class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Goes through the list of task to search for matching description and"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * assign it to a new Arraylist to be printed out"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is no matching results"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            if (task.toString().contains(description)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                list +\u003d \"\\n\" + index + \". \" + task.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (list.equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new FindException(\"There is no matching results. Please re-enter:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "           ui.print(\"Here are the matching tasks in your list:\" + list);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"List\" Command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eListCommand\u003c/code\u003e object that corresponds to a command of an input \"list\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints the current list of task in the taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (taskList.getList().isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            System.out.println(\"List is Empty\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        for(Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            System.out.println(i + \".\" + t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 32
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Todo\" command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eTodoCommand\u003c/code\u003e object that corresponds to a command of an input \"event\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description as a String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class TodoCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the TodoCommand Class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new Task based on the description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the taskList object and prints the corresponding messages."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Save the task into the datafile."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTask(taskList.getList().size() - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui.print(\"Now you have \" + taskList.getList().size() + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.save(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 43
    }
  },
  {
    "path": "src/main/java/duke/exception/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when the input is completely"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * not recognised"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class CommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the CommandException Class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public CommandException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DoneException Class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DoneException(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent the base class of all the exceptions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DukeException Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when the description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * of \"todo\", \"deadline\" and \"event\" is not filled."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the EmptyDescriptionException class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/FindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class FindException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public FindException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when the format of the input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * is wrongly written"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class WrongFormatException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the WrongFormatException Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public WrongFormatException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a Deadline object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e corresponds to a task created using the command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * \"deadline\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Deadline Class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param by date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Deadline Class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param by date of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Deadline(String description, int status, String by) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String saveText(int status) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"D | \" + status + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a Event object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e corresponds to a task created using the command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * \"event\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Event Class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param at date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Event Class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status status of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param at date of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Event(String description, int status, String at) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String saveText(int status) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"E | \" + status + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DoneException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents a task object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task created using the command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * given by the user such as \"todo\", \"event\", \"deadline\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected int status;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of Task Class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.status \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for Task Class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status status of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Task(String description, int status) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns the an icon depending on status"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return an icon"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return (status \u003d\u003d 1 ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void markAsDone() throws DoneException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (status \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new DoneException(\"Task is already completed. Please re-enter:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            status \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Gets the current status of the task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return status"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public int getStatus() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    abstract public String saveText(int status);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 84
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a Todo object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e corresponds to a task created using the command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * \"todo\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Todo Class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Todo Class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status status of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Todo(String description, int status) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String saveText(int status) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"T | \" + status + \" | \" + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 48
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 13
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testDateParser() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"Sep 09 2020 10:00AM\", Parser.DateParser(\"09/09/2020 1000\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void parse_incompleteDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Parser.parse(\"todo\"); //missing description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            assertEquals(\"The description of todo cannot be empty. Please re-enter\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void parse_wrongCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Parser.parse(\"blahh\"); //invalid input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            assertEquals(\"Im sorry, I do not understand what you mean. Please re-enter:\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 36
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testSaveText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"D | 1 | test1 | Sep 09 2020 10:00AM\", new Deadline(\"test1\",\"Sep 09 2020 10:00AM\").saveText(1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"[D][✘] test1 (by: Sep 09 2020 10:00AM)\", new Deadline(\"test1\",\"Sep 09 2020 10:00AM\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testSaveText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"E | 1 | test1 | Sep 09 2020 10:00AM\", new Event(\"test1\",\"Sep 09 2020 10:00AM\").saveText(1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"[E][✘] test1 (at: Sep 09 2020 10:00AM)\", new Event(\"test1\",\"Sep 09 2020 10:00AM\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testSaveText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"T | 0 | test1\", new Todo(\"test1\").saveText(0));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"[T][✘] test1\", new Todo(\"test1\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "zeranium97": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "zeranium97": 5
    }
  }
]
