[
  {
    "path": "iP/src/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 13
    }
  },
  {
    "path": "iP/src/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            \"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);  // Create a Scanner object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        String user_input \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            user_input \u003d scanner.nextLine();  // Read user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                user_input_handler(user_input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    static void user_input_handler(String user_input) throws DukeException{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        if (user_input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            // quit"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        } else if (user_input.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            // list task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                System.out.println(String.format(\"%s. %s\", index, task));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                index +\u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        } else if (user_input.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            // mark done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            int index \u003d Integer.parseInt(user_input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            Task chosenTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            chosenTask.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(chosenTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        } else if (user_input.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            //delete task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            int index \u003d Integer.parseInt(user_input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            Task chosenTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            taskList.remove(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(chosenTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(String.format(\"Now you have %s tasks in the list.\", taskList.size()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        }else if (user_input.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            // make to do"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            if (user_input.split(\" \", 2).length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            String description \u003d user_input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(todo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(String.format(\"Now you have %s tasks in the list.\", taskList.size()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        } else if (user_input.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            // make deadline"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            if (user_input.split(\" \", 2).length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            String task \u003d user_input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            if (task.split(\"/by\", 2).length \u003c 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description and time is required for deadline\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            String description \u003d task.split(\"/by\", 2)[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            String time \u003d task.split(\"/by\")[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            Task deadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(deadline);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(String.format(\"Now you have %s tasks in the list.\", taskList.size()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        } else if (user_input.split(\" \")[0].equals(\"event\")){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            // make event"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            if (user_input.split(\" \", 2).length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            String task \u003d user_input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            if (task.split(\"/at\", 2).length \u003c 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description and time is required for event\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            String description \u003d user_input.split(\"/at\", 2)[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            String time \u003d task.split(\"/at\")[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            Task event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            System.out.println(String.format(\"Now you have %s tasks in the list.\", taskList.size()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            // invalid input"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 118
    }
  },
  {
    "path": "iP/src/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 5
    }
  },
  {
    "path": "iP/src/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 13
    }
  },
  {
    "path": "iP/src/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 22
    }
  },
  {
    "path": "iP/src/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 10
    }
  },
  {
    "path": "iP/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 5
    }
  },
  {
    "path": "iP/text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuki-cell"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yuki-cell": 1,
      "-": 37
    }
  }
]
