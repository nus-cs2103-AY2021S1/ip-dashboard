[
  {
    "path": "src/main/java/botbot/Botbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.exceptions.BotbotException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Botbot {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Botbot(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                String input \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                Command c \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                c.execute(storage, tasks, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                isRunning \u003d !ExitCommand.isExit(c);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            } catch (BotbotException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                ui.printStatus(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        new Botbot(\"data/botbot.txt\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 34,
      "-": 2
    }
  },
  {
    "path": "src/main/java/botbot/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.InvalidCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.commands.MarkAsDoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.exceptions.EmptyTaskException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.exceptions.EmptyTaskNumberException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.exceptions.InvalidFormatException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.exceptions.NoSuchCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static Command parseCommand(String input) throws EmptyTaskException, EmptyTaskNumberException,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            InvalidFormatException, NoSuchCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                int id \u003d parseCommandId(input, \"delete \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                return new DeleteCommand(id);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                return new InvalidCommand(\"    oops! invalid task number!\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"delete\") || (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0, 7).equals(\"delete \"))) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskNumberException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                int id \u003d parseCommandId(input, \"done \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                return new MarkAsDoneCommand(id);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                return new InvalidCommand(\"    oops! invalid task number!\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"done\") || (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"done \"))) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskNumberException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 5).equals(\"todo \")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return new AddCommand(new Todo(input));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"todo\") || (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"todo \"))) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskException(\"a todo\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 10 \u0026\u0026 input.substring(0, 9).equals(\"deadline \")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            if (!input.contains(\" /by \")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                throw new InvalidFormatException(Deadline.FORMAT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return new AddCommand(new Deadline(input));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"deadline\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                || (input.length() \u003e\u003d 9 \u0026\u0026 input.substring(0, 9).equals(\"deadline \"))) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskException(\"a deadline\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0, 6).equals(\"event \")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            if (!input.contains(\" /at \")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                throw new InvalidFormatException(Event.FORMAT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return new AddCommand(new Event(input));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else if (input.equals(\"event\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                || (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"event \"))) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new EmptyTaskException(\"an event\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new NoSuchCommandException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static int parseCommandId(String input, String command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return Integer.parseInt(input.substring(command.length())) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 71
    }
  },
  {
    "path": "src/main/java/botbot/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (!file.isFile()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                return new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return read();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    List\u003cTask\u003e read() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        List\u003cTask\u003e list \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                String[] dataArr \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                char taskType \u003d dataArr[0].charAt(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                boolean isDone \u003d dataArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                String description \u003d dataArr[2];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                if (taskType \u003d\u003d Todo.TYPE_CODE) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    list.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                } else if (taskType \u003d\u003d Deadline.TYPE_CODE) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    String by \u003d dataArr[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    list.add(new Deadline(description, isDone, by));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                } else if (taskType \u003d\u003d Event.TYPE_CODE) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    String at \u003d dataArr[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    list.add(new Event(description, isDone, at));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            System.out.println(\"    oops! your data file is missing!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                List\u003cString\u003e temp \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                temp.add(String.valueOf(task.getType()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                temp.add(task.getStatus());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                temp.add(task.getDescription());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    temp.add(task.getBy());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    temp.add(task.getAt());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                String data \u003d String.join(\"|\", temp);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                fw.write(data + \"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 90
    }
  },
  {
    "path": "src/main/java/botbot/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class TaskList extends LinkedList\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    TaskList(Collection\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void delete(int id) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        remove(id);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            result +\u003d String.format(\"      %s. %s\\n\", i + 1, this.get(i));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 25
    }
  },
  {
    "path": "src/main/java/botbot/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    void greet() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String logo \u003d \"\\n.-. .-\u0027)                .-\u0027) _  .-. .-\u0027)                .-\u0027) _\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \"\\\\  ( OO )              (  OO) ) \\\\  ( OO )              (  OO) )\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" ;-----.\\\\  .-\u0027),-----. /     \u0027._ ;-----.\\\\  .-\u0027),-----. /     \u0027._\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | .-.  | ( OO\u0027  .-.  \u0027|\u0027--...__)| .-.  | ( OO\u0027  .-.  \u0027|\u0027--...__)\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | \u0027-\u0027 /_)/   |  | |  |\u0027--.  .--\u0027| \u0027-\u0027 /_)/   |  | |  |\u0027--.  .--\u0027\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | .-. `. \\\\_) |  | |  |   |  |   | .-. `. \\\\_) |  | |  |   |  |\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | |  \\\\  |  \\\\ |  | |  |   |  |   | |  \\\\  |  \\\\ |  | |  |   |  |\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027   |  |   | \u0027--\u0027  /   `\u0027  \u0027-\u0027  \u0027   |  |\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + \" `------\u0027      `-----\u0027    `--\u0027   `------\u0027      `-----\u0027    `--\u0027\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        System.out.println(\"helluu! I\u0027m\\n\" + logo + \"\\nwhat would you like me to do?\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        System.out.println(\"    bye! see you soon!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    String getUserInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void printStatus(String status) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        System.out.println(status);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 36
    }
  },
  {
    "path": "src/main/java/botbot/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        ui.printStatus(String.format(\"    ok! I\u0027ve added this task:\\n      %s\\n    you now have %d task\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                + (numOfTasks \u003e 1 ? \"s\" : \"\") + \" in your list\\n\", task, numOfTasks));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 23
    }
  },
  {
    "path": "src/main/java/botbot/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public abstract void execute(Storage storage, TaskList tasks, Ui ui);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 9
    }
  },
  {
    "path": "src/main/java/botbot/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public DeleteCommand(int id) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            Task task \u003d tasks.get(id);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            tasks.delete(id);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            ui.printStatus(String.format(\"    ok! I\u0027ve removed this task:\\n      %s\\n    you now have \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                    + \"%d task\" + (numOfTasks \u003e 1 ? \"s\" : \"\") + \" in your list\\n\", task, numOfTasks));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            ui.printStatus(\"    oops! invalid task number!\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 28
    }
  },
  {
    "path": "src/main/java/botbot/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 16
    }
  },
  {
    "path": "src/main/java/botbot/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public InvalidCommand(String error) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        ui.printStatus(error);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 18
    }
  },
  {
    "path": "src/main/java/botbot/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            ui.printStatus(\"    your list is empty!\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            ui.printStatus(\"    here\u0027s your list:\\n\" + tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 16
    }
  },
  {
    "path": "src/main/java/botbot/commands/MarkAsDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class MarkAsDoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public MarkAsDoneCommand(int id) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            Task task \u003d tasks.get(id);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            tasks.delete(id);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            ui.printStatus(\"    nice! I\u0027ve marked this task as done:\\n      \" + task + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            ui.printStatus(\"    oops! invalid task number!\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 26
    }
  },
  {
    "path": "src/main/java/botbot/exceptions/BotbotException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class BotbotException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public BotbotException(String e) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"    oops! \" + e + \"\\n\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 7
    }
  },
  {
    "path": "src/main/java/botbot/exceptions/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class EmptyTaskException extends BotbotException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public EmptyTaskException(String e) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"the description of \" + e + \" cannot be empty!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 7
    }
  },
  {
    "path": "src/main/java/botbot/exceptions/EmptyTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class EmptyTaskNumberException extends BotbotException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public EmptyTaskNumberException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"the task number to be marked as done cannot be empty!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 7
    }
  },
  {
    "path": "src/main/java/botbot/exceptions/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class InvalidFormatException extends BotbotException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public InvalidFormatException(String e) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"invalid format! please follow \u0027\" + e + \"\u0027!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 7
    }
  },
  {
    "path": "src/main/java/botbot/exceptions/NoSuchCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class NoSuchCommandException extends BotbotException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public NoSuchCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(\"sorry, I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 7
    }
  },
  {
    "path": "src/main/java/botbot/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.exceptions.InvalidFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public static final char TYPE_CODE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public static final String FORMAT \u003d \"deadline \u003cdescription\u003e /by \u003cD-M-YYYY HHmm\u003e (eg. 17-3-2020 0945 \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            + \"or 3-4-2020 with no time specified)\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private static final String NO_TIME_FLAG \u003d String.format(\" 0%.0f\", Math.PI * Math.pow(10, 10));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Deadline(String command) throws InvalidFormatException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(TYPE_CODE, extractNameFromCommand(command));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\"/by \") + 4;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String dateStr \u003d command.substring(index).strip();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (dateStr.length() \u003c 13) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            dateStr +\u003d NO_TIME_FLAG;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            by \u003d LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm[ssn]\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new InvalidFormatException(FORMAT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(TYPE_CODE, description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static String extractNameFromCommand(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\" /by \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return command.substring(9, index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return by.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String format \u003d \"d MMM yyyy\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (by.getHour() !\u003d 3 || by.getMinute() !\u003d 14 || by.getSecond() !\u003d 15 || by.getNano() !\u003d 926536) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            if (by.getMinute() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                format +\u003d \" ha\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                format +\u003d \" h.mma\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String byStr \u003d by.format(DateTimeFormatter.ofPattern(format));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return String.format(\"[%c] [%s] %s (by: %s)\", TYPE_CODE, getStatusIcon(), description, byStr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 63
    }
  },
  {
    "path": "src/main/java/botbot/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import botbot.exceptions.InvalidFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public static final char TYPE_CODE \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public static final String FORMAT \u003d \"event \u003cdescription\u003e /at \u003cD-M-YYYY HHmm\u003e (eg. 17-3-2020 0945 \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            + \"or 3-4-2020 with no time specified)\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private static final String NO_TIME_FLAG \u003d String.format(\" 0%.0f\", Math.PI * Math.pow(10, 10));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Event(String command) throws InvalidFormatException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(TYPE_CODE, extractNameFromCommand(command));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\"/at \") + 4;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String dateStr \u003d command.substring(index).strip();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (dateStr.length() \u003c 13) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            dateStr +\u003d NO_TIME_FLAG;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            at \u003d LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm[ssn]\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            throw new InvalidFormatException(FORMAT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(TYPE_CODE, description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static String extractNameFromCommand(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        int index \u003d command.indexOf(\" /at \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return command.substring(6, index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return at.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String format \u003d \"d MMM yyyy\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        if (at.getHour() !\u003d 3 || at.getMinute() !\u003d 14 || at.getSecond() !\u003d 15 || at.getNano() !\u003d 926536) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            if (at.getMinute() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                format +\u003d \" ha\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "                format +\u003d \" h.mma\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        String atStr \u003d at.format(DateTimeFormatter.ofPattern(format));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return String.format(\"[%c] [%s] %s (at: %s)\", TYPE_CODE, getStatusIcon(), description, atStr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 63
    }
  },
  {
    "path": "src/main/java/botbot/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    protected final char type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Task(char type, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Task(char type, String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public abstract String getAt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public abstract String getBy();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 42
    }
  },
  {
    "path": "src/main/java/botbot/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "package botbot.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public static final char TYPE_CODE \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Todo(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(TYPE_CODE, extractNameFromCommand(command));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        super(TYPE_CODE, description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    static String extractNameFromCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return command.substring(5);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wakululuu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "        return String.format(\"[%c] [%s] %s\", TYPE_CODE, getStatusIcon(), description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "event "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "delete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\botbot.Botbot.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "java -classpath ..\\bin botbot.Botbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/botbot.Botbot.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wakululuu"
        },
        "content": "java -classpath ../bin botbot.Botbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wakululuu": 3,
      "-": 36
    }
  }
]
