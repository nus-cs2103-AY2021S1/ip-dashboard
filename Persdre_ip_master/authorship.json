[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 39,
      "Persdre": 23
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "todo read book"
      }
    ],
    "authorContributionMap": {
      "Persdre": 1
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":init"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":end"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Persdre"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Persdre"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Persdre"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Persdre"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Persdre"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 3b19ba1790d6035a9e246f5d4ae627bf68778606"
      }
    ],
    "authorContributionMap": {
      "-": 103,
      "Persdre": 87
    }
  },
  {
    "path": "src/main/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "[T][✘] buy bread"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "[T][✘] buy bread"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "[T][✘] read book"
      }
    ],
    "authorContributionMap": {
      "Persdre": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 11
    }
  },
  {
    "path": "src/main/java/duke/ActionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public enum ActionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    MARK_DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    ADD_TODO,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    ADD_DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    ADD_EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    FIND"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 10
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command for adding tasks into list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final ActionType actionType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * AddCommand constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param input User input (without type of task written in front)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param actionType Dictates type of task to be added"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public AddCommand(String input, ActionType actionType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.actionType \u003d actionType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Creates new task and adds it into list, then returns string containing task info"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return String containing task info"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        switch(actionType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                throw new DukeException(\"Task can\u0027t be empty :(\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                newTask \u003d new ToDo(input.substring(5), false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                throw new DukeException(\"Event can\u0027t be empty :(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String[] split \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String eventDesc \u003d split[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                LocalDate eventTime \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                newTask \u003d new Event(eventDesc, eventTime, false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                throw new DukeException(\"Deadline can\u0027t be empty :(\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String[] split \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String deadlineDesc \u003d split[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                LocalDate deadline \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                newTask \u003d new Deadline(deadlineDesc, deadline, false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            assert false : actionType; // only one of the three commands belongs to addcommand"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return ui.printTask(newTask, actionType) + \"\\n\" + ui.printTotalTasks(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 72
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Abstract class for all commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Executes command and returns output string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return String to be output by Duke in the dialogue box"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 30
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Deadline constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string without date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param deadline Deadline LocalDate object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Deadline(String description, LocalDate deadline, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \" (by: \" + this.deadline.format(formatter) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 27
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command for deleting tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * DeleteCommand constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param taskIndex Index of class to be deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Deletes task from list and prints its info"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        assert (taskIndex \u003e\u003d 0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (taskIndex \u003e\u003d tasks.getList().size()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            throw new DukeException(\"Sorry, the task does not exist...\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            Task deletedTask \u003d tasks.delete(taskIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return ui.printTask(deletedTask, ActionType.DELETE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 38
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Duke main class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Duke constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        storage \u003d new Storage(\"src/main/data.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        tasks \u003d new TaskList(storage.getTasks());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Runs the Duke program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ui.showInfo();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        String op;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            op \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            op \u003d (e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return op;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Show welcome message to users"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return a welcome message when people start the GUI"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String welcomeMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"Hello, I\u0027m DukeQ:) \\n\" + \"I am very happy to serve you! \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"The valid command formats are as follows and the case is sensitive. \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"todo then your instructions e.g. todo read book\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"deadline then your instructions e.g. deadline by 2020-09-01\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type \u0027event\u0027 followed by the description,\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"if \u0027/at\u0027, the time should be like 2020-09-01\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"if \u0027/by\u0027, the due date should be like 2020-09-01 \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"done followed by the task number to marked it as done \\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type list to see the task lists\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type find followed by keywords to search for tasks \\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type help to get a tutorial \\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type bye to exit DukeQ, hope you have a good day! \\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Persdre": 70
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Special exception class for Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * DukeException constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param s Exception error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return super.getMessage() + \"\\n Please re-enter your command!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 20
    }
  },
  {
    "path": "src/main/java/duke/EmptyDeadLineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDeadLineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final String errorMessage \u003d \"OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * EmptyDeadLineException constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDeadLineException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns error message when occurs empty deadline exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 24
    }
  },
  {
    "path": "src/main/java/duke/EmptyDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDeleteException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final String errorMessage \u003d \"OOPS!!! The description of a delete cannot be empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * EmptyDeleteException constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDeleteException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 18
    }
  },
  {
    "path": "src/main/java/duke/EmptyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyDoneException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final String errorMessage \u003d \"OOPS!!! The description of a done cannot be empty. \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyDoneException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 15
    }
  },
  {
    "path": "src/main/java/duke/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyEventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final static String errorMessage \u003d \"OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyEventException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class EmptyTodoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public EmptyTodoException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(ERROR_MESSAGE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return ERROR_MESSAGE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final LocalDate eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Event constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string without date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param eventTime Time of event LocalDate object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Event(String description, LocalDate eventTime, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + this.eventTime.format(formatter) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 26
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command to quit Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Exits program"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return ui.bye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 23
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * FindCommand constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return ui.search(tasks, input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 20
    }
  },
  {
    "path": "src/main/java/duke/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"Hello, I\u0027m DukeQ:) \\n\" + \"I am very happy to serve you! \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"The valid command formats are as follows and the case is sensitive. \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"todo then your instructions e.g. todo read book\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"deadline then your instructions e.g. deadline by 2020-09-01\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type \u0027event\u0027 followed by the description,\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"if \u0027/at\u0027, the time should be like 2020-09-01\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"if \u0027/by\u0027, the due date should be like 2020-09-01 \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"done followed by the task number to marked it as done \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type list to see the task lists\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type find followed by keywords to search for tasks \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type help to get a tutorial \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                + \"type bye to exit DukeQ, hope you have a good day! \\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 24
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command to print list of tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Makes Ui print list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return ui.printList(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 23
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 29
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private ImageView imageView;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                DialogBox.getDukeDialog(d.welcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 60
    }
  },
  {
    "path": "src/main/java/duke/MarkDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Command to mark a task as done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class MarkDoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * MarkDoneCommand constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param taskIndex Index of task to be completed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public MarkDoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Marks task as done, then prints info"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (taskIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            throw new DukeException(\"Sorry, the task does not exist :(\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            Task completedTask \u003d tasks.markDone(taskIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return ui.printTask(completedTask, ActionType.MARK_DONE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 36
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Parses user input and returns the correct command to execute"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return Correct command for Duke to execute"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"help\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new MarkDoneCommand(taskIndex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String search \u003d input.substring(5);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                return new FindCommand(search);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_TODO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_EVENT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_DEADLINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            throw new DukeException(\"Sorry but I think you enter a wrong command...\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 37
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Storage class to manage loading and saving of tasks in text file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private File data;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Storage constructor"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param filePath Filepath of .txt file to save tasks in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            data \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            data.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Loads saved tasks into list for use"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return ArrayList containing all saved tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            Scanner dataScanner \u003d new Scanner(data);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            while (dataScanner.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String next \u003d dataScanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                char taskType \u003d next.charAt(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                boolean isDone \u003d next.charAt(4) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String description \u003d next.substring(7);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                if (taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    list.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String[] split \u003d description.split(\"[(]by: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String deadlineDesc \u003d split[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    LocalDate deadline \u003d LocalDate.parse(split[1].substring(0, split[1].length() - 1), formatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    list.add(new Deadline(deadlineDesc, deadline, isDone));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String[] split \u003d description.split(\"[(]at: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    String eventDesc \u003d split[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    LocalDate eventTime \u003d LocalDate.parse(split[1].substring(0, split[1].length() - 1), formatter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    list.add(new Event(eventDesc, eventTime, isDone));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                    throw new DukeException(\"File reading error _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Writes tasks into file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks to be saved"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            for (Task task: list) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                fw.write(taskString + System.lineSeparator());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 88
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Task constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 25
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * List class to store tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * TaskList Constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Marks task as done, then returns it"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param index Index of task to be completed"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Task doneTask \u003d list.get(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Deletes task, then returns it"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param index Index of task to be deleted"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        Task deletedTask \u003d list.get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 59
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * ToDo constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param description Description string"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param isDone Completion status of todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 18
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": " * Ui class to deal with user\u0027s interaction"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns next line of user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return Next line of user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints message when it operates"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void showInfo() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"Hello, I\u0027m DukeQ\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"todo then your instructions e.g. todo read book\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"deadline then your instructions e.g. deadline by 2020-09-01\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"type \u0027event\u0027 followed by the description,\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"if \u0027/at\u0027, then timing in yyyy-MM-dd format\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"done followed by the task number \" + \"marked it as done\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"type list to see the task list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"type find to search by keywords for tasks\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"type bye to exit\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        System.out.println(\"type help to get a tutorial\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Returns string containing list of existing tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return String of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String printList(TaskList tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        String tasksString \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            tasksString +\u003d \"List is empty \\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            tasksString +\u003d \"Tasks in the list: \\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                tasksString +\u003d ((i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return tasksString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints appropriate message for task depending on action type"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param task Task to be printed"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param action Action type; determines format of text that is printed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String printTask(Task task, ActionType action) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        switch(action) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case MARK_DONE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            taskDescription \u003d \"Task marked complete: \\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            taskDescription \u003d \"Task deleted: \\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            taskDescription \u003d \"Added: \\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        taskDescription +\u003d task.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Searches task with keywords and print them."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return tasks including keywords\u0027 description string."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String search(TaskList tasks, String input) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        String result \u003d \"Matching tasks: \\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        for (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            if (taskString.contains(input)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                result +\u003d (count + \". \" + taskString + \"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints total number of tasks"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * @return String with total number of tasks"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String printTotalTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"Total tasks: \" + tasks.size();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     * Prints goodbye message"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Persdre"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        return \"Bye!!!\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 114
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"rgb(120, 80, 80)\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Persdre": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" text\u003d\"Please enter your command here\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Persdre"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #CFDAEA;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Persdre"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Persdre": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Persdre"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Persdre"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Persdre"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Persdre"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Persdre": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Persdre"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Persdre"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Persdre"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Persdre"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Persdre"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Persdre"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Persdre"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Persdre": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Persdre"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Persdre": 1
    }
  }
]
