[
  {
    "path": "data/tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "D@0@party@2020-12-13@1300"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "T@1@elephant party"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "D@1@party@2020-12-12@1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "D@0@party@2020-12-12@1800"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "D@0@party@2020-12-12@1300"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "D@0@party@2020-12-12@1800"
      }
    ],
    "authorContributionMap": {
      "amylzting": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String userInputDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String userInputTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.dateAndTimeFormat(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public void dateAndTimeFormat(String by) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        String[] dateAndTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.userInputDate \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.userInputTime \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            this.time \u003d timeFormat(dateAndTime[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String timeFormat(String time) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int min \u003d Integer.parseInt(time.substring(2, 4));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        StringBuilder formattedTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if (hour \u003e\u003d 12 \u0026\u0026 hour \u003c 24 \u0026\u0026 min \u003c 60 \u0026\u0026 min \u003e\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            formattedTime.append(hour-12).append(\".\").append(String.format(\"%02d\", min)).append(\"pm\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else if (hour \u003e 0 \u0026\u0026 hour \u003c 12 \u0026\u0026 min \u003c 60 \u0026\u0026 min \u003e\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            formattedTime.append(hour).append(\".\").append(String.format(\"%02d\", min)).append(\"am\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else if (hour \u003d\u003d 0 \u0026\u0026 min \u003c 60 \u0026\u0026 min \u003e\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            formattedTime.append(\"12\").append(\".\").append(String.format(\"%02d\", min)).append(\"am\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return formattedTime.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \", \" + this.time + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String storedTaskString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"D\" + \"@\" + super.storedTaskString()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"@\" + this.userInputDate + \"@\" + this.userInputTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 65
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void printList(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if(tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // Dino lists out all items in list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"Dino lists your tasks:\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(index + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"To mark off a task after completion\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \", input \u0027done \u003ctask number\u003e\u0027.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not find any items in your task list.\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nGet started by entering a task. \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Formats for a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void markDone(List\u003cTask\u003e tasks, String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // task number is not valid"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Task \" + taskNumber + \" is not in your list of tasks!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // Dino marks task as done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            Task doneTask \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            writeToFile(doneTask, DukeAction.MARK_DONE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            doneTask.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"Great! Dino has marked \" + \"Task \" + taskNumber"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \" as done:\\n\" + doneTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void addTask(List\u003cTask\u003e tasks, String input, String[] inputWords) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            switch (inputWords[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String task \u003d input.substring(5);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                writeToFile(todo, DukeAction.ADD);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Dino has added to your list of tasks:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + todo"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nNumber of tasks in list: \" + tasks.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String[] taskBy \u003d input.substring(9).split(\" /by\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                if(taskBy.length \u003d\u003d 2 \u0026\u0026 !taskBy[0].equals(\"\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // condition checks that input has task description and date/time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // task deadline taken as string after first \u0027/by\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        Deadline deadline \u003d new Deadline(taskBy[0], taskBy[1].substring(1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        writeToFile(deadline, DukeAction.ADD);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        System.out.println(\"Dino has added to your list of tasks:\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                                + deadline"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                                + \"\\nNumber of tasks in list: \" + tasks.size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    } catch(DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String[] eventAt \u003d input.substring(6).split(\" /at\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                if(eventAt.length \u003d\u003d 2 \u0026\u0026 !eventAt[0].equals(\"\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // condition checks that input has task description and date/time"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    // task deadline taken as string after first \u0027/at\u0027"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        Event event \u003d new Event(eventAt[0], eventAt[1].substring(1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        writeToFile(event, DukeAction.ADD);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        System.out.println(\"Dino has added to your list of tasks:\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                                + event"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                                + \"\\nNumber of tasks in list: \" + tasks.size());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    } catch(DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // when input is not a deadline, event or todo"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // invalid task format entered"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void deleteTask(List\u003cTask\u003e tasks, String input) throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // task number is not valid"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Task \" + taskNumber + \" is not in your list of tasks!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            // Dino deletes task from list"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            Task toDelete \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            writeToFile(toDelete, DukeAction.DELETE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(\"Rawr! Dino has deleted \" + \"Task \" + taskNumber"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \" from your list:\\n\" + toDelete"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nNumber of tasks in list: \" + tasks.size());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void processInputs(List\u003cTask\u003e tasks, String input, String[] inputWords) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            if (input.equals(\"format\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Formats for the three task types Todo, Deadline and Event,\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" are shown below.\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Todo: \u0027todo \u003ctask description\u003e\u0027\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" (e.g. todo visit new theme park)\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Deadline: \u0027deadline \u003ctask description\u003e\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" /by \u003cyyyy-mm-dd hhmm\u003e\u0027 (e.g. deadline submit report /by 2019-11-10 1500)\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"Event: \u0027event \u003ctask description\u003e\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \" /at \u003cyyyy-mm-dd hhmm-hhmm\u003e\u0027 \""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"(e.g. event team project meeting /at 2019-10-02 1400-1500)\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nAdditional Information:\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nTo mark a task as done, input \u0027done \u003ctask number\u003e\u0027.\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\nTo delete a task from your list, input \u0027delete \u003ctask number\u003e\u0027.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                printList(tasks);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else if (inputWords[0].equals(\"done\") \u0026\u0026 inputWords.length \u003d\u003d 2"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    \u0026\u0026 inputWords[1].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // condition checks that user input is in the format \"done X\" where X is a numeric"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                markDone(tasks, input);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else if (inputWords[0].equals(\"delete\") \u0026\u0026 inputWords.length \u003d\u003d 2"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    \u0026\u0026 inputWords[1].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // condition checks that user input is in the format \"delete X\" where X is a numeric"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                deleteTask(tasks, input);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // Dino adds task to list"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                addTask(tasks, input, inputWords);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void loadData(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        //read Duke\u0027s data file and load tasks into tasks list"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            File dir \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            File taskFile \u003d new File(\"./data/tasklist.txt\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            if(dir.mkdir()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Welcome. Dino has created a new directory \" +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        \"to store your data.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                if(taskFile.createNewFile()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    System.out.println(\"Dino has successfully created a new file to store your task list.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    System.out.println(\"Dino could not create a new file to store your task list.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else if(taskFile.createNewFile()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Welcome. Dino has successfully created \" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        \"a new file to store your task list.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                Scanner scan \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    String taskString \u003d scan.nextLine();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    if(taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        String[] taskSplit \u003d taskString.split(\"@\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        String taskType \u003d taskSplit[0];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        String taskDone \u003d taskSplit[1];"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        String taskDesc \u003d taskSplit[2];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        switch (taskType) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        case \"T\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            Todo todo \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            if(taskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                                todo.markAsDone();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            tasks.add(todo);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        case \"D\":"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            String taskDeadline \u003d taskSplit[3] + \" \" + taskSplit[4];"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            Deadline deadline \u003d new Deadline(taskDesc, taskDeadline);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            if(taskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                                deadline.markAsDone();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            tasks.add(deadline);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        case \"E\":"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            String taskDateTime \u003d taskSplit[3] + \" \" + taskSplit[4];"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            Event event \u003d new Event(taskDesc, taskDateTime);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            if(taskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                                event.markAsDone();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            tasks.add(event);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Welcome back. Dino has successfully loaded your task data.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Dino could not load your task data.\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void run(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            loadData(tasks);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public static void writeToFile(Task task, DukeAction action) throws DukeException {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            switch(action) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case ADD:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                FileWriter fw \u003d new FileWriter(\"./data/tasklist.txt\", true);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                fw.write(task.storedTaskString() + \"\\n\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Success!\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                File inputFile \u003d new File(\"./data/tasklist.txt\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                File tempFile \u003d new File(\"./data/myTempFile.txt\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                BufferedReader reader \u003d new BufferedReader(new FileReader(\"./data/tasklist.txt\"));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String lineToRemove \u003d task.storedTaskString();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String currentLine;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                while((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    if (!currentLine.equals(lineToRemove)) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        writer.write(currentLine);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        writer.newLine();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.gc();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                if(inputFile.delete()) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    if(tempFile.renameTo(inputFile)) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        System.out.println(\"Success!\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        throw new DukeException(\"Dino could not write task data to hard disk.\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    throw new DukeException(\"Dino could not write task data to hard disk.\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            case MARK_DONE:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                File taskFile \u003d new File(\"./data/tasklist.txt\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                File temFile \u003d new File(\"./data/myTemFile.txt\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(\"./data/tasklist.txt\"));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                BufferedWriter bw \u003d new BufferedWriter(new FileWriter(temFile));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String lineToMarkDone \u003d task.storedTaskString();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                String currentL;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                while((currentL \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    if (!currentL.equals(lineToMarkDone)) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        bw.write(currentL);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        String taskType \u003d currentL.substring(0,2);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        String taskDesc \u003d currentL.substring(3);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        bw.write(taskType + \"1\" + taskDesc);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    bw.newLine();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                bw.close();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.gc();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                if(taskFile.delete()) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    if(temFile.renameTo(taskFile)) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        System.out.println(\"Success!\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        throw new DukeException(\"Dino could not write task data to hard disk.\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    throw new DukeException(\"Dino could not write task data to hard disk.\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Dino could not write task data to hard disk.\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        String logo \u003d \" ____\\n\""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"|  _ \\\\ _ _____  ___\\n\""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"| | | | |  _  |/   \\\\\\n\""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"| |_| | | | | | |_| |\\n\""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"|____/|_|_| |_|\\\\___/\\n\";"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        System.out.println(\"Rawr! I\u0027m Dino \u003e\u003c\\n\""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                +logo"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nGet started on your task list by entering a task!\""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo see how to format your task, input \u0027format\u0027\""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo see your list of tasks, input \u0027list\u0027.\""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo mark a task as done, input \u0027done \u003ctask number\u003e\u0027.\""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo delete a task from your list, input \u0027delete \u003ctask number\u003e\u0027.\""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\nTo stop Dino, input \u0027bye\u0027.\""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        run(tasks);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        while (!isBye \u0026\u0026 scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            String[] inputWords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                // Dino says bye"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                System.out.println(\"Rawr. Hope to see you again soon! \u003e\u003c\""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                        + \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                isBye \u003d true;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                processInputs(tasks, input, inputWords);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 349,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public enum DukeAction {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    MARK_DONE,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    ADD,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String userInputDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String userInputTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.dateAndTimeFormat(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public void dateAndTimeFormat(String by) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        String[] dateAndTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.userInputDate \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.userInputTime \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            String[] startAndEndTime \u003d dateAndTime[1].split(\"-\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            this.time \u003d timeFormat(startAndEndTime[0]) + \" - \" + timeFormat(startAndEndTime[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String timeFormat(String time) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        int min \u003d Integer.parseInt(time.substring(2, 4));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        StringBuilder formattedTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        if (hour \u003e\u003d 12 \u0026\u0026 hour \u003c 24 \u0026\u0026 min \u003c 60 \u0026\u0026 min \u003e\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            formattedTime.append(hour-12).append(\".\").append(String.format(\"%02d\", min)).append(\"pm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else if (hour \u003e 0 \u0026\u0026 hour \u003c 12 \u0026\u0026 min \u003c 60 \u0026\u0026 min \u003e\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            formattedTime.append(hour).append(\".\").append(String.format(\"%02d\", min)).append(\"am\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else if (hour \u003d\u003d 0 \u0026\u0026 min \u003c 60 \u0026\u0026 min \u003e\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            formattedTime.append(\"12\").append(\".\").append(String.format(\"%02d\", min)).append(\"am\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amylzting"
        },
        "content": "            throw new DukeException(\"Rawr! Dino could not add your task. \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"Make sure your format is correct.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                    + \"\\nFormats to input a task can be found by entering \u0027format\u0027.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return formattedTime.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \", \" + this.time + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String storedTaskString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"E\" + \"@\" + super.storedTaskString()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amylzting"
        },
        "content": "                + \"@\" + this.userInputDate + \"@\" + this.userInputTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 66
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return 1 or 0 symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + taskName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String storedTaskString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return this.getStatusIcon() + \"@\" + taskName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    public String storedTaskString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "        return \"T\" + \"@\" + super.storedTaskString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amylzting": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amylzting"
        },
        "content": "format"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amylzting"
        },
        "content": "todo swimming in sea"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline swimming /by 2020-05-27 1430"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event swimming /at 2021-03-20 1500-1600"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amylzting"
        },
        "content": "todo racing car"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amylzting"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amylzting"
        },
        "content": "done 88"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amylzting"
        },
        "content": "chasing elephants"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline eat by 2pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event party at 4pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline eat /by 10am /by june"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event travel to japan /at 10 June /at 2pm /at airport"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event travel to japan /at"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event /at 2pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline /by 2pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline homework /by"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amylzting"
        },
        "content": "todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amylzting"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amylzting"
        },
        "content": "event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amylzting"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amylzting"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amylzting"
        },
        "content": "delete 10"
      }
    ],
    "authorContributionMap": {
      "amylzting": 27
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amylzting"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "amylzting": 1,
      "-": 20
    }
  }
]
