[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "aqcd": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 16,
      "-": 45
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### Create, Read, Search, Delete Tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "You will be able to create tasks, view the list of your"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "tasks, search your list of tasks, and delete tasks from"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "the list. There are 3 supported types of tasks: To-dos,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Deadlines and Events."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### Toggle Completion of Tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "You will be able to mark a task as completed, and this"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "will be reflected in the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### Local Data Storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Your task list will be saved locally and loaded in"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "whenever you open the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### Graphical User Interface (GUI)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "The application runs on a GUI, making usage more intuitive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### Tagging"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "You will be able to tag your tasks with words or"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "phrases. Tasks can have multiple tags. These tags"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "are responsive to searches."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### Syntax:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`[parameter]` denotes a parameter. Parameters are required."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`(arguments)` denotes optional arguments. The command will run "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "with or without this part of the input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `todo [task name] (/tags tag1, tag2...)` - Add a To-do type task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Adds a To-do type task with a name to your task list. If"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "you provide tags, the task added will be tagged."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`todo Task 1`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Sample outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Added the task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e [T][✘] Task 1"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e You now have 5 tasks to do!"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Tasks saved!"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `deadline [task name] /by [deadline] (/tags tag1, tag2...)` - Add a Deadline type task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Adds a Deadline type task with a name and deadline to"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "your task list. Deadline date format must be of the"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "form YYYY-MM-DD. If you provide tags, the task added"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "will be tagged."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`deadline Task 2 /by 2020-09-18 /tags Important, CS2103`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Sample outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Added the task:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e [D][✘] Task 2 #Important #CS2103 (by: Sep 18 2020)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e You now have 6 tasks to do!"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Tasks saved!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `event [task name] /at [date] (/tags tag1, tag2...)` - Add an Event type task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Adds an Event type task with a name and date to"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aqcd"
        },
        "content": "your task list. Date format must be of the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aqcd"
        },
        "content": "form YYYY-MM-DD. If you provide tags, the task "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aqcd"
        },
        "content": "added will be tagged."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`event Task 3 /at 2020-09-19 /tags CS2101`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Sample outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Added the task:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e [E][✘] Task 3 #CS2101 (at: Sep 19 2020)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e You now have 7 tasks to do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Tasks saved!"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `done [task number]` - Marks a task as done."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Marks the task corresponding to the task number as done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`done 7`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Sample outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Yay! The following task is marked as done:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e [E][✓] Task 3 #CS2101 (at: Sep 19 2020)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Tasks saved!"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `delete [task number]` - Deletes a task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Removes the task corresponding to the task number from"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aqcd"
        },
        "content": "the task list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`delete 7`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Sample outcome:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e I\u0027ve eradicated the task:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e [E][✓] Task 3 #CS2101 (at: Sep 19 2020)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e You now have 6 tasks to do!"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Tasks saved!"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `find [key string]` - Finds tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Provides a list of all tasks which contain the key"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aqcd"
        },
        "content": "string in either its name or tags."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aqcd"
        },
        "content": "`find CS2103`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Sample outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e Your matching tasks:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e 1. [T][✓] CS2103 Week 5"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003e\u003e 2. [D][✘] Task 2 #Important #CS2103 (by: Sep 18 2020)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `list` - Displays your list of tasks."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Displays your list of tasks along with their corresponding"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aqcd"
        },
        "content": "dates and completion status."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Sample outcome:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aqcd"
        },
        "content": "[T][✓] Task 1"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aqcd"
        },
        "content": "[D][✘] Task 2 (by: Sep 18 2020)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aqcd"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aqcd"
        },
        "content": "### `bye` - Exits the program."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aqcd"
        },
        "content": "Closes the program. Your task list will be automatically"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aqcd"
        },
        "content": "loaded into the program the next time it is started."
      }
    ],
    "authorContributionMap": {
      "aqcd": 148,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of deadline-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details in the form [TYPE, INFORMATION] */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.AddDeadlineCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains description and deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public AddDeadlineCommand(String[] instructions) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the AddDeadline duke.Command, adding a new duke.Task of type duke.Deadline with description and date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String[] deadlineInfo \u003d instructions[1].split(\" /by \", 2); // deadlineInfo \u003d [name, deadline \u0026 tags]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (deadlineInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.conditionError(Constants.TaskTypes.DEADLINE); // User provided incomplete information."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String deadline \u003d deadlineInfo[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Task deadlineTask;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (deadlineInfo[1].contains(\" /tags \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                String[] tags;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                String[] deadlineAndTags \u003d deadlineInfo[1].split(\" /tags \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                deadline \u003d deadlineAndTags[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                tags \u003d deadlineAndTags[1].split(\",\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                // cleanup whitespace"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                for (int i \u003d 0; i \u003c tags.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    tags[i] \u003d tags[i].strip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                deadlineTask \u003d new Deadline(deadlineInfo[0], LocalDate.parse(deadline), tags);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                deadlineTask \u003d new Deadline(deadlineInfo[0], LocalDate.parse(deadline));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return tasks.addTask(deadlineTask) + \"\\n\" + storage.save(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.invalidDateError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 59
    }
  },
  {
    "path": "src/main/java/duke/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of event-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details in the form [TYPE, INFORMATION] */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.AddEventCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains description and deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public AddEventCommand(String[] instructions) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the AddEvent duke.Command, adding a new duke.Task of type duke.Event with description and date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String[] eventInfo \u003d instructions[1].split(\" /at \", 2); // eventInfo \u003d [name, date \u0026 tags]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (eventInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.conditionError(Constants.TaskTypes.EVENT); // User provided incomplete information."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String eventDate \u003d eventInfo[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Task eventTask;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (eventInfo[1].contains(\" /tags \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                String[] tags;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                String[] dateAndTags \u003d eventInfo[1].split(\" /tags \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                eventDate \u003d dateAndTags[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                tags \u003d dateAndTags[1].split(\",\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                // cleanup whitespace"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                for (int i \u003d 0; i \u003c tags.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    tags[i] \u003d tags[i].strip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                eventTask \u003d new Event(eventInfo[0], LocalDate.parse(eventDate), tags);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                eventTask \u003d new Event(eventInfo[0], LocalDate.parse(eventDate));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return tasks.addTask(eventTask) + \"\\n\" + storage.save(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.invalidDateError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 59
    }
  },
  {
    "path": "src/main/java/duke/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of todo-based Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details in the form [TYPE, INFORMATION] */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.AddTodoCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public AddTodoCommand(String[] instructions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the AddTodo duke.Command, adding a new duke.Task of type duke.Todo with description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Task todoTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (instructions[1].contains(\" /tags \")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String[] tags;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String[] nameAndTags \u003d instructions[1].split(\" /tags \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String todoName \u003d nameAndTags[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tags \u003d nameAndTags[1].split(\",\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            // cleanup whitespace"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            for (int i \u003d 0; i \u003c tags.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                tags[i] \u003d tags[i].strip();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            todoTask \u003d new Todo(todoName, tags);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            todoTask \u003d new Todo(instructions[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return tasks.addTask(todoTask) + \"\\n\" + storage.save(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 46
    }
  },
  {
    "path": "src/main/java/duke/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles closing of application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Bye duke.Command, ending the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return ui.bye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 22
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Provides contract for duke.Command subclasses."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Contract for duke.Command execution."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 19
    }
  },
  {
    "path": "src/main/java/duke/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Contains Enums used in multiple locations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Type of Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public enum TaskTypes {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Type of Commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public enum CommandType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        BYE, LIST, DELETE, DONE, TODO, DEADLINE, EVENT, FIND"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 21
    }
  },
  {
    "path": "src/main/java/duke/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of date-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public abstract class DatedTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Date of task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Dated Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DatedTask(String name, LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Dated Task with tags."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tags Tags associated with Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DatedTask(String name, LocalDate date, String[] tags) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Dated Tasks with completed state."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted State of completion of duke.Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DatedTask(String name, boolean isCompleted, LocalDate date) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Dated Tasks with completed state and tags."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted State of completion of duke.Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DatedTask(String name, boolean isCompleted, LocalDate date, String[] tags) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted, tags);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Task in String form."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Task object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return super.format() + getDelimiter() + this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 65
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles deadline-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Deadline-based Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param deadline duke.Deadline of duke.Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Deadline(String name, LocalDate deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, deadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Deadline-based Tasks with Tags."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param deadline duke.Deadline of duke.Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tags Tags associated with Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Deadline(String name, LocalDate deadline, String[] tags) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, deadline, tags);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Deadline-based Tasks with completed state."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted State of completion of duke.Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param deadline duke.Deadline of duke.Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Deadline(String name, boolean isCompleted, LocalDate deadline) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted, deadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Deadline-based Tasks with completed state and tags."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted State of completion of duke.Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param deadline duke.Deadline of duke.Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tags Tags associated with Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Deadline(String name, boolean isCompleted, LocalDate deadline, String[] tags) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted, deadline, tags);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Deadline in format to be saved."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Deadline object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"D\" + getDelimiter() + super.format();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Deadline in String form."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Deadline object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 68
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles deletion of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details in the form [TYPE, INFORMATION] */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.DeleteCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains index of duke.Task to be deleted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DeleteCommand(String[] instructions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Delete duke.Command, deleting the duke.Task at the index provided by the instructions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To remove the deleted task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (instructions.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.incompleteInstructionError(); // User did not provide index of task for deletion."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            int index \u003d Integer.parseInt(instructions[1]) - 1; // instructions[1] contains the index of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                return ui.deleteError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                return tasks.deleteTask(index) + \"\\n\" + storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.invalidIndexError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 43
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private static final int BASE_HEIGHT \u003d 85;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        dialog.setMinHeight(getDialogHeight(text));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Determine optimal height of dialog box based on its number of lines and contents."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Height of dialog box."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private int getDialogHeight(String text) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String[] textPortions \u003d text.split(\"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        int heightUnits \u003d textPortions.length;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        for (String s : textPortions) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            heightUnits +\u003d Math.max(0, s.length() / 20 - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return heightUnits * 15 + BASE_HEIGHT;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 80
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles completion of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details in the form [TYPE, INFORMATION] */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.DoneCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains index of duke.Task to be completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DoneCommand(String[] instructions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Done duke.Command, completing the duke.Task at the index provided by the instructions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To update the completed task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (instructions.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.incompleteInstructionError(); // User did not provide index of task to mark done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            int index \u003d Integer.parseInt(instructions[1]) - 1; // instructions[1] contains the index of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return tasks.completeTask(index) + \"\\n\" + storage.save(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return ui.invalidIndexError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 39
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Controls application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Local task store */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** List of tasks */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Ui to interact with user */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Parser to understand user commands. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param filepath Contains filepath of local data storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(ui.greet());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Listens for user input and responds."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command cmd \u003d parser.parse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert cmd !\u003d null : \"Command could not be parsed!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            response \u003d cmd.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 49,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles exceptions generated by application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for DukeExcpetion."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param msg Contains error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles event-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Event-based Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Event-based Tasks with Tags."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param deadline duke.Deadline of duke.Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tags Tags associated with Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Event(String name, LocalDate deadline, String[] tags) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, deadline, tags);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Event-based Tasks with completed state."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted State of completion of duke.Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Event(String name, boolean isCompleted, LocalDate date) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted, date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Event-based Tasks with completed state and tags."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted State of completion of duke.Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Event(String name, boolean isCompleted, LocalDate date, String[] tags) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted, date, tags);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Event in format to be saved."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Event object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"E\" + getDelimiter() + super.format();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Event in String form."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Event object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 67
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles searching of tasks given a search phrase."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details in the form [TYPE, INFORMATION] */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.FindCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains search phrase."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public FindCommand(String[] instructions) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Find duke.Command, displaying a list of tasks that have the search phrase."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be searched."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        response.append(\"\u003e\u003e Your matching tasks:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        boolean hasResult \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert task.name !\u003d null : \"Task name could not be found!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (task.name.contains(instructions[1]) || (task.tags !\u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    \u0026\u0026 Arrays.asList(task.tags).contains(instructions[1]))) { // instructions[1] contains search query"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                response.append(\"\\n\u003e\u003e \" + i++ + \". \" + task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                hasResult \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (!hasResult) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return \"\u003e\u003e No results!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 51
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 12
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles display of duke.Task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.ListCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the List duke.Command, displaying a list of all Tasks the user has."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be referenced."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        response.append(\"\u003e\u003e Your tasks:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            response.append(\"\\n\u003e\u003e \" + i++ + \". \" + task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 33
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shiba.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/corgi.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 53
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles making sense of user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Converts user input into a command of the appropriate type depending on the leading word"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * of the user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return duke.Command object corresponding to input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @throws DukeException When user input cannot be parsed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assert input !\u003d null : \"Invalid input!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String[] commandTypeAndDetails \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String action \u003d commandTypeAndDetails[0].toUpperCase();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Constants.CommandType command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            command \u003d Constants.CommandType.valueOf(action);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no!!! I don\u0027t understand this input.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (commandTypeAndDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! Delete must have the index of the task you\u0027re deleting!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new DeleteCommand(commandTypeAndDetails);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (commandTypeAndDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! Done must have the index of the task you\u0027re completing!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new DoneCommand(commandTypeAndDetails);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (commandTypeAndDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! A todo must have a description!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new AddTodoCommand(commandTypeAndDetails);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (commandTypeAndDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! A deadline must have a description and date!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new AddDeadlineCommand(commandTypeAndDetails);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (commandTypeAndDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! An event must have a description and date!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new AddEventCommand(commandTypeAndDetails);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (commandTypeAndDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! Find needs a search word or phrase!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new FindCommand(commandTypeAndDetails);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no!!! I don\u0027t understand this input.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 69
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles storing Tasks locally and reading from locally stored Tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Where the local save file is stored */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** List of tasks to be saved */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Short form of duke.Task types. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private enum TaskSymbols {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        SYMBOL_T, SYMBOL_E, SYMBOL_D"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param filepath Contains path of local storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Saves the input list of tasks into a local store."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks List of tasks to be saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String save(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                fw.write(t.format() + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return \"\u003e\u003e Tasks saved!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return \"\u003e\u003e Oh no! Your tasks could not be saved!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Loads a list of tasks from a local store."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return List of tasks from the local store."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @throws DukeException When file is not found."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String directoryErrorMsg \u003d \"\u003e\u003e Something went wrong creating the data directory!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String[] directories \u003d filepath.split(\"/\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            StringBuilder path \u003d new StringBuilder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            // Creates directories if they don\u0027t exist yet."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            for (int i \u003d 0; i \u003c directories.length - 1; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                path.append(directories[i]).append(\"/\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                File directory \u003d new File(path.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    boolean success \u003d directory.mkdir();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    if (!success) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        throw new DukeException(directoryErrorMsg);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                boolean success \u003d file.createNewFile();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                if (!success) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    throw new DukeException(directoryErrorMsg);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Scanner fr \u003d new Scanner(file);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            while (fr.hasNextLine()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                String ln \u003d fr.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                String[] taskInfo \u003d ln.split(Task.getEscapedSaveDelimiter());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                TaskSymbols type \u003d TaskSymbols.valueOf(\"SYMBOL_\" + taskInfo[0]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                switch(type) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                case SYMBOL_T:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    assert taskInfo.length \u003e 2 : \"File format error!\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    if (taskInfo.length \u003d\u003d 3) { // no tags"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Todo(taskInfo[1], Boolean.parseBoolean(taskInfo[2])));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    } else { // tags"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Todo(taskInfo[1], Boolean.parseBoolean(taskInfo[2]),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                                taskInfo[3].split(\",\")));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                case SYMBOL_E:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    assert taskInfo.length \u003e 3 : \"File format error!\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    if (taskInfo.length \u003d\u003d 4) { // no tags"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Event(taskInfo[1], Boolean.parseBoolean(taskInfo[2]),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                                LocalDate.parse(taskInfo[3])));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    } else { // tags"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Event(taskInfo[1], Boolean.parseBoolean(taskInfo[2]),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                                LocalDate.parse(taskInfo[4]), taskInfo[3].split(\",\")));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                case SYMBOL_D:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    assert taskInfo.length \u003e 3 : \"File format error!\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    if (taskInfo.length \u003d\u003d 4) { // no tags"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Deadline(taskInfo[1], Boolean.parseBoolean(taskInfo[2]),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                                LocalDate.parse(taskInfo[3])));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    } else { // tags"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Deadline(taskInfo[1], Boolean.parseBoolean(taskInfo[2]),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                                LocalDate.parse(taskInfo[4]), taskInfo[3].split(\",\")));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return this.tasks;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no! I can\u0027t find your file!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no! The file couldn\u0027t be created for some reason!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no! File format seems to be incorrect!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 134
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles maintenance and display of duke.Task objects."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Separator for task details */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private static final String SAVE_DELIMITER \u003d \"|\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Escaped version of separator */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private static final String ESCAPED_SAVE_DELIMITER \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Name of task */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Completion state of task */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Tags associated with task */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    protected String[] tags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Task with tags."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tags Tags associated with Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Task(String name, String[] tags) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Tasks with completed state."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted Completion state of duke.Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Task(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Task with completed state and tags."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted Completion state of duke.Task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tags Tags associated with Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Task(String name, boolean isCompleted, String[] tags) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Accessor for SAVE_DELIMITER."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return SAVE_DELIMITER."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static String getDelimiter() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return SAVE_DELIMITER;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Accessor for ESCAPED_SAVE_DELIMITER."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return ESCAPED_SAVE_DELIMITER."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static String getEscapedSaveDelimiter() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return ESCAPED_SAVE_DELIMITER;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Marks duke.Task as complete."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Gets appropriate status icon based on completion state of the duke.Task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return this.isCompleted ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Task in format to be saved."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Task object."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String base \u003d this.name + SAVE_DELIMITER + this.isCompleted;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (tags \u003d\u003d null || tags.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return base;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return base + SAVE_DELIMITER + Arrays.stream(tags).reduce((a, b) -\u003e a + \",\" + b).orElse(\"\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays the list of tags for the task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return List of tags."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String showTags() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (tags \u003d\u003d null || tags.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(Arrays.toString(tags));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"#\" + Arrays.stream(tags).reduce((a, b) -\u003e a + \" #\" + b).orElse(\"\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Task in String form."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Task object."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.name + \" \" + showTags();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 130
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles manipulation of the list of Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks Initial list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Gets list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Gets size of the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Size of list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Adds an input task to the list of tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param task duke.Task to be added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assert task !\u003d null : \"Task to be added does not exist!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Added the task:\\n\u003e\u003e \" + task + \"\\n\u003e\u003e You now have \" + tasks.size() + \" tasks to do!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Deletes a task to the list of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param idx Index of task to be deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String deleteTask(int idx) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assert idx \u003c tasks.size() : \"Task number provided is not valid!\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Task task \u003d tasks.get(idx);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.remove(idx);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e I\u0027ve eradicated the task:\\n\u003e\u003e \" + task + \"\\n\u003e\u003e You now have \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                + tasks.size() + \" tasks to do!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Marks a task in the list of tasks as completed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param idx Index of task to be completed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String completeTask(int idx) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assert idx \u003c tasks.size() : \"Task number provided is not valid!\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.get(idx).complete();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Yay! The following task is marked as done:\\n\u003e\u003e \" + tasks.get(idx);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 79
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles todo-based Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Todo-type Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Todo-type Tasks with tags."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tags Tags associated with Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Todo(String name, String[] tags) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, tags);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Todo-type Tasks with completed state."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted Completion state of duke.Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Todo(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Todo-type Tasks with completed state and tags."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param isCompleted Completion state of duke.Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Todo(String name, boolean isCompleted, String[] tags) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, isCompleted, tags);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Todo in format to be saved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Todo object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"T\" + getDelimiter() + super.format();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Todo in String form."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Todo object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 60
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles interaction with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user loads the program without an existing saved task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e No data storage found. Creating new task list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Greets the user on application boot."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Beep Boop. I am Aq-bot.\\n\u003e\u003e How can I help?\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Says bye to the user when application closes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Bye! Hope I helped!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user enters an invalid date for Dated Tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String invalidDateError() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Please format your date in YYYY-MM-DD format!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user enters an invalid index for tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String invalidIndexError() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Please provide a valid task number!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user enters an incomplete instruction."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String incompleteInstructionError() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e This instruction is incomplete!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user attempts to create a Dated duke.Task without a date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String conditionError(Constants.TaskTypes type) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Oh no!!! A \" + type.toString().toLowerCase() + \" must have an associated date!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user attempts to delete a task that does not exist."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String deleteError() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"\u003e\u003e Oh no!!! That task does not exist!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 74
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E408\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" prefWidth\u003d\"268.0\" style\u003d\"-fx-padding: 0; -fx-label-padding: 10; -fx-border-radius: 20; -fx-border-style: solid; -fx-background-radius: 20; -fx-background-color: #dddddd;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "aqcd": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-border-style: solid;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #54c0ff#54c0ff; -fx-border-style: solid;\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #eeeeee;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "aqcd": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeBye_expectedBehaviour() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command byeCommand \u003d parser.parse(\"bye\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(byeCommand instanceof ByeCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeList_expectedBehaviour() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command listCommand \u003d parser.parse(\"list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(listCommand instanceof ListCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeDone_expectedBehaviour() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command doneCommand \u003d parser.parse(\"done 2\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(doneCommand instanceof DoneCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeDelete_expectedBehaviour() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command deleteCommand \u003d parser.parse(\"delete 2\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(deleteCommand instanceof DeleteCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeDelete_exceptionThrown() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e parser.parse(\"delete\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeAdd_expectedBehaviour() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command addTodoCommand \u003d parser.parse(\"todo Test1\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(addTodoCommand instanceof AddTodoCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command addDeadlineCommand \u003d parser.parse(\"deadline Test2 /by 2020-10-10\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(addDeadlineCommand instanceof AddDeadlineCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command addEventCommand \u003d parser.parse(\"event Test3 /at 2020-10-10\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(addEventCommand instanceof AddEventCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 72
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void storage_testLoad_expectedBehaviour() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Storage storage \u003d new Storage(\"src/test/resources/storageTest.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            List\u003cTask\u003e tasks \u003d storage.load();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assertEquals(2, tasks.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void storage_testLoad_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Storage storage \u003d new Storage(\"src/test/resources/storageTestException.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 27
    }
  },
  {
    "path": "src/test/resources/storageTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "T|Test1|true"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": "D|Test2|true|2020-10-10"
      }
    ],
    "authorContributionMap": {
      "aqcd": 2
    }
  },
  {
    "path": "src/test/resources/storageTestException.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "SomeRandomContent"
      }
    ],
    "authorContributionMap": {
      "aqcd": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "todo eat cake"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": "event friend\u0027s birthday /at 2020-08-23"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "deadline CS2103 /by Aug 10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "deadline CS2103 /by 2020-08-20"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "hello"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "event description-less event :("
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "deadline CS2103 /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "testy test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "todo eat less cake"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find cake"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find friend\u0027s birthday"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find no match"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aqcd": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "aqcd": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "# delete saved file from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "if [ -e \"./data/duke.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    rm data/duke.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "aqcd": 9,
      "-": 35
    }
  }
]
