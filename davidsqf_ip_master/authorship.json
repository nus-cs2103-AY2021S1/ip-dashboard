[
  {
    "path": "File.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "T0book hotel"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "E0book hotel   ,2021-04-28"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "D1book hotel                       ,2021-04-28"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public LocalDate due;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Deadline(String description, LocalDate due) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Deadline(boolean done, String description, LocalDate due) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super(done, description,\u0027D\u0027);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String unparseMessage \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            unparseMessage +\u003d \"1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            unparseMessage +\u003d \"0\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage +\u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage +\u003d \",\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage +\u003d due;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super.unparseMessage \u003d unparseMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return \"[D]\" + super.toString() + \"(\" + due.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            tasks \u003d new TaskList(storage.load(new File(filePath)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        boolean fileExists \u003d new java.io.File(home + \"/iP/File.txt\").exists();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        new Duke(home + \"//iP//File.txt\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Event(boolean done, String description, LocalDate due) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super(done, description,\u0027E\u0027);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.time \u003d due;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String unparseMessage \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            unparseMessage +\u003d \"1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            unparseMessage +\u003d \"0\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage +\u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage +\u003d \",\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage +\u003d due;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super.unparseMessage \u003d unparseMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return \"[E]\" + super.toString() + \"(\" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static String process(String order) throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (order.equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            Storage.writeData(TaskList.list);//write data into the new file before exiting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            return \"    Bye-bye, see you next time!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (order.equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            if (TaskList.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    Well done! You\u0027ve completed all your tasks.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return TaskList.printList(TaskList.list);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (order.length() \u003e\u003d 4 \u0026\u0026 order.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            int index \u003d Integer.parseInt(order.substring(5))-1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            Task temp \u003d TaskList.list.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            temp.done();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            TaskList.list.set(index, temp);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            Storage.writeData(TaskList.list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            return \"    Great! I have marked this task as done:\\n\" + temp;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (order.length() \u003e\u003d 4 \u0026\u0026 order.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            if (order.length()\u003e4) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                String content \u003d order.substring(5);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                TaskList.list.add(new Todo(false, content));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                Storage.writeData(TaskList.list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    added:\" + content + \"\\n\" + \"    Now you have \" + TaskList.list.size() + \" task(s) in the list\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    description cannot be empty~\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (order.length() \u003e\u003d 8 \u0026\u0026 order.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            if (order.length() \u003e 8) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                Integer indexOfSlash \u003d order.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                String content \u003d order.substring(9, indexOfSlash);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                String due \u003d order.substring(indexOfSlash + 4);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                LocalDate ddl \u003d LocalDate.parse(due);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                TaskList.list.add(new Deadline(false,content, ddl));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                Storage.writeData(TaskList.list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    added:\" + content + \"\\n\" + \"    Now you have \" + TaskList.list.size() + \" task(s) in the list\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    description cannot be empty~\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (order.length() \u003e\u003d 5 \u0026\u0026 order.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            if (order.length() \u003e 5) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                int indexOfSlash \u003d order.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                String content \u003d order.substring(6, indexOfSlash);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                String time \u003d order.substring(indexOfSlash + 4);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                LocalDate ddl \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                TaskList.list.add(new Event(false,content, ddl));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                Storage.writeData(TaskList.list);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    added:\" + content + \"\\n\" + \"    Now you have \" + TaskList.list.size() + \" task(s) in the list\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    description cannot be empty~\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (order.length() \u003e\u003d 6 \u0026\u0026 order.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            if (order.length() \u003e 6) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                Integer toBeDeleted \u003d Integer.valueOf(order.substring(7));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                Task temp \u003d TaskList.list.get(toBeDeleted-1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                TaskList.list.remove(toBeDeleted-1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                Storage.writeData(TaskList.list);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    I have removed this task: \" + \"\\n\" + temp;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                return \"    Sorry, you have not specified which task to be deleted.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            return \"    Sorry, I don\u0027t understand.\"; //handles all unexpected inputs"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static String unparse(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return task.unparseMessage;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 80
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static File f;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static List\u003cTask\u003e load(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        Scanner scFile \u003d new Scanner(f);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        while (scFile.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            String data \u003d scFile.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            Task task \u003d parse(data);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            temp.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    private static Task parse(String data) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        char type \u003d data.charAt(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            return parseTodo(data);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            return parseEvent(data);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            return parseDeadline(data);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            return new Task(\"something went wrong, the header is not T/D/E\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    private static Task parseDeadline(String data) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        //format: {D1bookhotel,tomorrow}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        boolean done;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String due;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        int i \u003d data.charAt(1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            done \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            done \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        int indexOfComma \u003d data.indexOf(\u0027,\u0027);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        description \u003d data.substring(2, indexOfComma);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        due \u003d data.substring(indexOfComma+1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        LocalDate ddl \u003d LocalDate.parse(due);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return new Deadline(done, description, ddl);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    private static Task parseEvent(String data) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        //format: {D1bookhotel,tomorrow}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        boolean done;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String due;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        int i \u003d data.charAt(1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            done \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            done \u003d false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        int indexOfComma \u003d data.indexOf(\u0027,\u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        description \u003d data.substring(2, indexOfComma);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        due \u003d data.substring(indexOfComma+1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        LocalDate ddl \u003d LocalDate.parse(due);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return new Event(done, description, ddl);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    private static Task parseTodo(String data) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        //format: {D1bookhotel,tomorrow}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        boolean done;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String due;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        int i \u003d data.charAt(1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            done \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            done \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        description \u003d data.substring(2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return new Todo(done, description);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static void writeData(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        f.deleteOnExit();//delete the old file"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            String temp \u003d Parser.unparse(task);//convert Task into String"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            fw.write(temp + System.lineSeparator());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 104
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    char type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    String unparseMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Task(boolean done, String description, char type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        int indexOf0 \u003d unparseMessage.indexOf(\u00270\u0027);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage \u003d unparseMessage.substring(0, indexOf0) + \"1\" + unparseMessage.substring(indexOf0+1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static String printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        int size \u003d list.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            string +\u003d \"\\n\"+i+\". \"+list.get(i-1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public Todo(boolean done, String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super(done, description, \u0027T\u0027);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String unparseMessage \u003d \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            unparseMessage +\u003d \"1\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            unparseMessage +\u003d \"0\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        unparseMessage +\u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        super.unparseMessage \u003d unparseMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static String greeting \u003d \"Hello, I\u0027m Duke, your personal assistant. \\n What can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public static String home \u003d System.getProperty(\"user.home\");//home \u003d C:/Users/david"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            String order \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            String reply \u003d Parser.process(order);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "            System.out.println(reply);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 33
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        assertEquals(\"[D][\\u2718] buy gift(Apr 28 2021)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "                new Deadline(\"buy gift\", LocalDate.parse(\"2021-04-28\")));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    public void byeTest() throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "        assertEquals(\"    Bye-bye, see you next time!\", Parser.process(\"bye\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "todo book hotel"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "event book hotel /tomorrow"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "deadline book hotel /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "blah"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidsqf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidsqf"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "davidsqf": 3,
      "-": 20
    }
  }
]
