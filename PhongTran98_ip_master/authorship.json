[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    mainClassName \u003d \"MainLauncher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/MainLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.gui.Launcher;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class MainLauncher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        boolean runningTerminal \u003d true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (runningTerminal) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Duke.main(args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Launcher.main(args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 13
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.UserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.gui.Launcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            List\u003cString\u003e inputTokens \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Command command \u003d Commands.create(inputTokens);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return command.run(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (UserException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return \"Unhandled exception: \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                    + e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(\"Error parsing file\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        System.out.println(Ui.wrap(Ui.greet()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            System.out.println(Ui.wrap(response));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            if (input.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 62
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public ByeCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        taskList.save();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public ClearCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        taskList.clearAll();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerClear();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 19
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.UserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected List\u003cString\u003e input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Creates a new command with user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Command(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Runs the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param taskList the current list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws UserException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public abstract String run(TaskList taskList) throws UserException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 29
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Creates a new command from the user\u0027s input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * This method decide which type of command to be created based on the first token of the input, or throw"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * an exception if the type of the command is invalid."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return a command with the correct type"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static Command create(List\u003cString\u003e input) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String commandType \u003d input.get(0).toLowerCase();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new ByeCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new ClearCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new TaskCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"save\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new SaveCommand(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Command not found\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public DeleteCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert input.size() \u003e\u003d 2: \"DeleteCommand.run(): input must have at least 2 words\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e indices \u003d new ArrayList\u003c\u003e(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        indices.remove(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Integer[] indicesArray \u003d indices.stream()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                .map(s -\u003e Integer.parseInt(s))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                .distinct()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                .sorted(Comparator.reverseOrder())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                .toArray(Integer[]::new);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (int i : indicesArray) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            if (i \u003c\u003d 0 || i \u003e taskList.count()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                throw new InvalidArgumentException(\"Out of range indices\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (int index : indicesArray) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            listOfTask.add(taskList.getTask(index).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            taskList.removeTask(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerDelete(listOfTask, taskList.count());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Checker;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public DoneCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert input.size() \u003e\u003d 2: \"DoneCommand.run(): input must have at least 2 words\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (int index \u003d 1; index \u003c input.size(); index++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            if (index \u003c\u003d 0 || index \u003e taskList.count()) throw new InvalidArgumentException(\"Out of range index(s)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e listOfTask\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (int index \u003d 1; index \u003c input.size(); index++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            taskList.finishTask(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            listOfTask.add(taskList.getTask(index).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerDone(listOfTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public FindCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert input.size() \u003d\u003d 2: \"FindCommand.run(): input must have exactly 2 words\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String query \u003d input.get(1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerFind(taskList.findTasks(query));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public ListCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerList(taskList.printTasks());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/duke/command/SaveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class SaveCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public SaveCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        taskList.save();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerSave();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 18
    }
  },
  {
    "path": "src/main/java/duke/command/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.UserException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public TaskCommand(List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String run(TaskList taskList) throws UserException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (input.size() \u003c 4) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Missing argument(s)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Task task \u003d taskList.makeTask(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return Ui.answerTask(task.toString(), taskList.count());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class InvalidArgumentException extends UserException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public InvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/UserException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class UserException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public UserException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 7
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 12
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 32
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 49
    }
  },
  {
    "path": "src/main/java/duke/misc/Checker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Checker {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static \u003cS\u003e void checkListIndex(int index, List\u003cS\u003e list, String errorMessage) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e list.size()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void checkTime(String datetimeString) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (datetimeString.equals(Const.NO_TIME)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Time cannot be empty\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 19
    }
  },
  {
    "path": "src/main/java/duke/misc/Const.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Const {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static final String NO_TIME \u003d \"null\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static final LocalDateTime DEFAULT_TIME \u003d LocalDateTime.MIN;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 8
    }
  },
  {
    "path": "src/main/java/duke/misc/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private static String getCommandType(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return command.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private static String getTaskTitle(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return command.split(\" \", 2)[1].split(\"/\")[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private static String getTimeString(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String commandType \u003d getCommandType(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (commandType.equals(\"todo\")) return Const.NO_TIME;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String afterSlash \u003d command.split(\"/\",2)[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return afterSlash.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private static String[] getArguments(String command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return command.split(\" \", 2)[1].split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Parses the user\u0027s input into a list of tokens."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Command syntax:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      bye"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      clear"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      delete \u003cindex\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      done \u003cindex\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      find \u003cquery string\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      save"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      todo \u003ctitle\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      deadline \u003ctitle\u003e /by DD/MM/YY HHMM"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *      event \u003ctitle\u003e /at DD/MM/YY HHMM"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param command user\u0027s input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the list of tokens"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static List\u003cString\u003e parseCommand(String command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String[] splitByFirstWhiteSpace \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String commandType \u003d splitByFirstWhiteSpace[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            tokens.add(commandType);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Collections.addAll(tokens, getArguments(command));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return tokens;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            tokens.add(commandType);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            tokens.add(getTaskTitle(command));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            tokens.add(getTimeString(command));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            tokens.add(\"0\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return tokens;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            tokens.add(commandType);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return tokens;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Parses a string of datetime into a LocalDateTime object, or throw an exception if the datetime is invalid."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param datetimeString the string of datetime"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the corresponding LocalDateTime object"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static LocalDateTime stringToTime(String datetimeString) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert datetimeString !\u003d null : \"cannot convert a null string to time\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String[] timeTokens \u003d datetimeString.split(\"[ /]\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        int time \u003d timeTokens.length \u003e\u003d 4 ? Integer.parseInt(timeTokens[3]) : 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return LocalDateTime.of(Integer.parseInt(timeTokens[2]),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                    Integer.parseInt(timeTokens[1]),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                    Integer.parseInt(timeTokens[0]),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                    time / 100, time % 100);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new InvalidArgumentException(\"Invalid date\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 95
    }
  },
  {
    "path": "src/main/java/duke/misc/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Reads the storage.txt created in ./tmp/data, or create a new one if the file cannot be found."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return List of task in the file. Each task is represented with a list of tokens."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static List\u003cList\u003cString\u003e\u003e readFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cList\u003cString\u003e\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        File dir \u003d new File(\"./tmp/data\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        dir.mkdirs();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        File f \u003d new File(dir, \"storage.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                String[] tokens \u003d s.nextLine().split(\"%%%\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                List\u003cString\u003e tokenss \u003d new ArrayList\u003c\u003e(Arrays.asList(tokens));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                out.add(tokenss);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return out;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new Error(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Overwrites the file ./tmp/data/storage.txt with information from the current list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param database the current list of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static void writeFile(List\u003cTask\u003e database) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert database !\u003d null: \"Storage.writeFile(): database cannot be null\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        File dir \u003d new File(\"./tmp/data\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(dir, \"storage.txt\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            for (Task task : database) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                assert task !\u003d null: \"Storage.writeFile(): task to be added cannot be null\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                fw.write(task.serialize() + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new Error(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 57
    }
  },
  {
    "path": "src/main/java/duke/misc/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Wraps the message inside a box."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param message the content of the message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String wrap(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return \"\\n++++++++++++++++++++++++++++++++++++++++++\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + \"\\n------------------------------------------\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Greet the user and create a Scanner object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return (\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Farewell the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerBye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return (\"See you again!\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the DONE command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param tasks the task that is marked as finished"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerDone(List\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        StringBuilder response \u003d new StringBuilder(\"You have marked these task as finished: \\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (String s : tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            response.append(\"    \").append(s).append(\"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the LIST command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param tasks list of tasks to be printed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerList(List\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (String s : tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            response.append(\"    \").append(s).append(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerFind(List\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (String s : tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            response.append(\"    \").append(s).append(\"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the DELETE command."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param tasks  the task deleted"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param count the number of tasks left in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerDelete(List\u003cString\u003e tasks, int count) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        StringBuilder response \u003d new StringBuilder(\"Noted. I\u0027ve removed these tasks: \\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (String s : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            response.append(\"    \").append(s).append(\"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        response.append(\"Now you have \" + count + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the CLEAR command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerClear() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return \"All tasks cleared!\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Prints the response of the commands that create a task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param task  the task created"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param count the current number of tasks in the list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerTask(String task, int count) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + \"    \" + task + \"\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + \"Now you have \" + count + \" tasks in the list. \\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public static String answerSave() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return \"All changes saved!\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Deadline(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Deadline(String description, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this(description, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.isDone ? \"\\u2713\" : \"\\u2718\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.type \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Event(String description, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this(description, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.isDone ? \"\\u2713\" : \"\\u2718\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.description,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Const;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected LocalDateTime time \u003d Const.DEFAULT_TIME;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Create a task with a title and its optional datetime"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param description the title of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param time        the time of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        type \u003d \"Task\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task(String description, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        type \u003d \"Task\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        type \u003d \"Task\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        type \u003d \"Task\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Marks the task as finished."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Serializes the task to be store in the disk."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the serial of the task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert time !\u003d null: \"cannot serialize when time is null\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String datetimeString \u003d time.getDayOfMonth() + \"/\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + time.getMonthValue() + \"/\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + time.getYear() + \" \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                + (time.getHour() * 100 + time.getMinute());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        if (time.equals(Const.DEFAULT_TIME)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            datetimeString \u003d Const.NO_TIME;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return type + \"%%%\" + description + \"%%%\" + datetimeString + \"%%%\" + (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[T][%s] %s\", (isDone ? \"\\u2713\" : \"\\u2718\"), description);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 76
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Checker;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    private List\u003cTask\u003e database \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Initializes the list of task with the information from the disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public TaskList() throws InvalidArgumentException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cList\u003cString\u003e\u003e data \u003d Storage.readFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert data !\u003d null: \"TaskList(): data cannot be null\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (List\u003cString\u003e tokens : data) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            addTask(makeTask(tokens));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task makeTask(List\u003cString\u003e tokens) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        LocalDateTime datetime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert tokens.size() \u003e\u003d 2: \"TaskList.addTask(): tokens\u0027 size must be at least 2\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String taskType \u003d tokens.get(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String taskTitle \u003d tokens.get(1).trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String datetimeString \u003d tokens.get(2).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String taskStatus \u003d tokens.get(3);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        boolean isDone \u003d taskStatus.equals(\"1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new Todo(taskTitle, isDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Checker.checkTime(datetimeString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            datetime \u003d Parser.stringToTime(datetimeString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new Deadline(taskTitle, datetime, isDone);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            Checker.checkTime(datetimeString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            datetime \u003d Parser.stringToTime(datetimeString);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            return new Event(taskTitle, datetime, isDone);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            throw new Error(\"An unexpected error has occurred\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Create a new task corresponding to the tokens then add it into the list of task, or throw an exception"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * if the input tokens is invalid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert database !\u003d null : \"TaskList.addTask(): database cannot be null\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        database.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Gets the task from the list with the given index, or throw an exception if the index is invalid."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param index the query index"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the corresponding task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task getTask(int index) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Checker.checkListIndex(index, database, \"Out of range index for getting task.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert (index \u003e 0 || index \u003c\u003d database.size()) : \"getTask\u0027s pretest not working properly\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return database.get(index - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Marks the task from the list with the given index as done, or throw an exception if the index is invalid."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param index the query index"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void finishTask(int index) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Checker.checkListIndex(index, database,\"Out of range argument for DONE command.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert (index \u003e 0 || index \u003c\u003d database.size()) : \"finishTask\u0027s pretest not working properly\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        database.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Removes the task from the list with the given index, or throw an exception if the index is invalid."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @param index the query index"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the task that has just been deleted"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @throws InvalidArgumentException"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Task removeTask(int index) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Checker.checkListIndex(index, database,\"Out of range argument for DELETE command.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert (index \u003e 0 || index \u003c\u003d database.size()) : \"removeTask\u0027s pretest not working properly\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return database.remove(index - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Saves the list of task into the disk."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Storage.writeFile(database);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Counts the number of current tasks in the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the number of current tasks."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert database !\u003d null : \"TaskList.count(): database cannot be null\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return database.size();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Clears all tasks in the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void clearAll() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert database !\u003d null : \"TaskList.clear(): database cannot be null\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        database.clear();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * Return all task in the list in the form of strings."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     * @return the list of corresponding string represent the tasks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public List\u003cString\u003e printTasks() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert database !\u003d null : \"TaskList.printTasks(): database cannot be null\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (int i \u003d 0; i \u003c database.size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            output.add((i + 1) + \".\" + database.get(i));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public List\u003cString\u003e findTasks(String query) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assert database !\u003d null : \"TaskList.findTasks(): database cannot be null\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        query \u003d query.trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        for (Task task : database) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            if (task.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                output.add(count + \".\" + task);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 156
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.type \u003d \"todo\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        this(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        return String.format(\"[T][%s] %s\", ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.isDone ? \"\\u2713\" : \"\\u2718\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                super.description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 20
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 19
    }
  },
  {
    "path": "src/test/java/misc/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.misc.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void testParseCommandNormalCase() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e actual \u003d Parser.parseCommand(\"deadline read book /by 21/12/2012 1900\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e(Arrays.asList(\"deadline\", \"read book\", \"21/12/2012 1900\", \"0\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void testStringToTimeNormalCase() throws InvalidArgumentException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        LocalDateTime expected \u003d LocalDateTime.of(2012, 12, 21, 19, 00);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        LocalDateTime actual \u003d Parser.stringToTime(\"21/12/2012 1900\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 28
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    public void testNormalCase() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        Deadline task \u003d new Deadline(\"read book\", LocalDateTime.of(2020, 12, 20, 19, 30));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String actual \u003d task.serialize();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        String expected \u003d \"deadline%%%read book%%%20/12/2020 1930%%%0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "deadline return book /by 16/6/2020 1651"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "event return nothing /at 31/2/2021 1100"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 4,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 3,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\ByeCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\ClearCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\Command.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\Commands.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\DeleteCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\DoneCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\FindCommand.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\ListCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\command\\TaskCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\exception\\InvalidArgumentException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\exception\\UserException.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\misc\\Parser.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\misc\\Storage.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\misc\\Ui.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Deadline.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Event.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Task.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\TaskList.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "D:\\stuDYING\\Current-modules\\CS2103T\\ip\\src\\main\\java\\task\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 20
    }
  },
  {
    "path": "text-ui-test/tmp/data/storage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo%%%read book%%%null%%%1"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 1
    }
  },
  {
    "path": "tmp/data/storage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo%%%hihi%%%null%%%1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "todo%%%hoho%%%null%%%0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhongTran98"
        },
        "content": "event%%%haha%%%2/12/2020 0%%%1"
      }
    ],
    "authorContributionMap": {
      "PhongTran98": 3
    }
  }
]
