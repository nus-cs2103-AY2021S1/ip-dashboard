[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 1,
      "-": 25
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 17,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "# RichBot User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "RichBot is a desktop app for managing tasks, optimized for use via"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "a Command Line Interface(CLI) while still having the benefits of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Graphical User Interface (GUI). This app can help you to manage"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "your tasks tidier and efficiently."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "## Table of Content"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* [Usage](#usage)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Showing help](#help---showing-list-of-commands)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Adding todo task](#todo---adding-a-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Adding deadline task](#deadline---adding-a-task)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Adding event task](#event---adding-a-task)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Showing task list](#list---showing-list-of-tasks)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Finding task](#find---finding-tasks)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Marking task as done](#done---marking-tasks-as-done)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Deleting task](#delete---deleting-task)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Marking all tasks to done](#done-all---marking-all-undone-task)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Deleting all tasks](#delete-all---deleting-all-tasks)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Showing task after date](#show-after---showing-tasks-after-some-date)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Showing task before date](#show-before---showing-tasks-before-some-date)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    * [Exiting the program](#exit---exiting-the-program)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### Viewing help"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Shows the list of commands to you."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### Create task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Allows you to create 3 types of task, including todo task,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "deadline task, and event task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Allows you to delete unwanted task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Allows you to mark your done as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### Show list of tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Allows you to see what task exists."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### Show task after or before some date"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Allows you to see task before or after specified date. Note"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "that only deadline and event task that will be shown."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `help` - Showing list of commands."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Shows list of commands that can be executed in this app."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `--help`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`--help`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "COMMAND  |   FORMAT"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - deadline  |   deadline \u003cDEADLINE_NAME\u003e /by \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - delete  |   delete \u003cTASK_NUMBER\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - delete all  |   delete all"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - done  |   done \u003cTASK_NUMBER\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - done all  |   done all"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - event  |   event \u003cEVENT_NAME\u003e /at \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - show after  |   show after \u003cyyyy-MM-dd\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - show before  |   show before \u003cyyyy-MM-dd\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " - todo  |   todo \u003cTASK_NAME\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `todo` - Adding a task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Adds a todo type task to the list with the specified task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "description. "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* Adds a todo task with specified `\u003cdescription\u003e` to the list of tasks. "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`\u003cdescription\u003e` must be specified."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`todo borrow book`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Got it. I\u0027ve added this task :"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "[T][X] borrow book"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `deadline` - Adding a task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Adds a deadline type task to the list with the specified task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "description and date time. "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* Adds a deadline task with specified `\u003cdescription\u003e` and "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`date time` to the list of tasks. `\u003cdescription\u003e` must be specified."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* `date time` must be specified and in the format of "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`\u003cyyyy-MM-dd\u003e \u003cHH :mm\u003e`. Example :`2020-08-08 18:00` (Note that"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "the time are written in 24 hr format.)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`deadline CS2103T IP /by 2020-09-09 12:00`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Got it. I\u0027ve added this task :"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "[D][X] CS2103T IP (by: Sep 9 2020, 12 PM)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `event` - Adding a task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Adds a event type task to the list with the specified task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "description and date time. "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `event \u003cdescription\u003e /by \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* Adds a event task with specified `\u003cdescription\u003e` and "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`date time` to the list of tasks. `\u003cdescription\u003e` must be specified."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* `date time` must be specified and in the format of "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`\u003cyyyy-MM-dd\u003e \u003cHH :mm\u003e`. Example :`2020-08-08 18:00` (Note that"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "the time are written in 24 hr format.)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`event CS2103T IP /by 2020-09-09 12:00`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Got it. I\u0027ve added this task :"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "[E][X] CS2103T IP (by: Sep 9 2020, 12 PM)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `list` - Showing list of tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Shows list of tasks. "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "1. [T][X] borrow book"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "2. [E][X] dancing (by: Jun 6 2020, 7 PM)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "3. [T][X] borrow book"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "4. [D][X] CS2103T IP (by: Sep 9 2020, 12 PM)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "5. [E][X] CS2103T IP (by: Sep 9 2020, 12 PM)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `find` - Finding tasks"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Finds list of tasks from existing keyword."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      1. [T][X] borrow book"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      2. [T][X] borrow book"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `done` - Marking tasks as done."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Marks task as done. Specifies task by using the numbering"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "from the list."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `done \u003cindex_number\u003e`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* `\u003cindex_number\u003e` must be specified."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "[T][O] borrow book"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `delete` - Deleting task."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Deletes task from the list. Specifies the potential tasks by using"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "numbering from the list."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `delete \u003cindex_number\u003e`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "* `\u003cindex_number\u003e` must be specified."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "[T][O] borrow book"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `done all` - Marking all undone task."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Marks all undone task as done."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `done all`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`done all`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      1. [E][O] dancing (by: Jun 6 2020, 7 PM)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      2. [T][O] borrow book"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      3. [D][O] CS2103T IP (by: Sep 9 2020, 12 PM)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      4. [E][O] CS2103T IP (by: Sep 9 2020, 12 PM)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `delete all` - Deleting all tasks."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Deletes all tasks."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `delete all`"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`delete all`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "All of your task has been removed!"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `show after` - Showing tasks after some date."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Shows list of tasks after the specified date."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `show after \u003cyyyy-MM-dd\u003e`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "*  `date` must be specified and in the format of "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`\u003cyyyy-MM-dd\u003e`. Example: `2020-08-09`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`show after 2020-06-09`"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "1. [D][X] CS2103T (by: Sep 9 2020, 12 PM)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "2. [E][X] dance club (by: Aug 9 2020, 6 PM)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "3. [D][X] CS2103T TP (by: Jul 31 2020, 12 AM)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `show before` - Showing tasks before some date."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Shows list of tasks before the specified date."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `show before \u003cyyyy-MM-dd\u003e`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "*  `date` must be specified and in the format of "
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`\u003cyyyy-MM-dd\u003e`. Example: `2020-08-09`"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`show before 2020-09-09`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "1. [E][X] dance club (by: Aug 9 2020, 6 PM)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "2. [D][X] CS2103T TP (by: Jul 31 2020, 12 AM)"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "***"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "### `exit` - Exiting the program"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "Bye! Hope to see you soon"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "```"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "(Program terminate)"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 291,
      "-": 21
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 1,
      "-": 103
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "//Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart4.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.MainWindow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            stage.setTitle(\"C0mmand M3!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 32
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.AnonymousException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeInvalidIndexException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeKeywordException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.NoIndexException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * The Command class implements methods that will be used"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * by its child class to create various Command type."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * It also contains strings of commands that specify"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * the command type."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String HELP_COMMAND \u003d \"--help\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String SHOW_AFTER_COMMAND \u003d \"show after\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String SHOW_BEFORE_COMMAND \u003d \"show before\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DELETE_ALL_COMMAND \u003d \"delete all\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DONE_ALL_COMMAND \u003d \"done all\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * An empty constructor to initialize the Command object,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * and initialize isExit fields to false."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * isExit would be used to terminate the program when it is false."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * A method template for child\u0027s classes to implement. It would execute any"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * action needed based on the type of the command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException Thrown when the system failed to detect the external file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws AnonymousException Thrown whenever Parser failed to detect"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * valid command from user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DescriptionException Thrown whenever Parsed failed to detect"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * valid description passed in the command."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeDateTimeParserException Thrown whenever when Parser to detect"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * valid date-time details on the command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws NoIndexException Thrown whenever Parser failed to detect valid index"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * that should be specified in the command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeKeywordException Thrown when user failed to specify the keyword in the command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public abstract String execute (TaskList tasks, Ui ui, Storage storage) throws IOException, AnonymousException,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DescriptionException, DukeDateTimeParserException, NoIndexException, DukeKeywordException,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DukeInvalidIndexException;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * A getter method that returns the state whether a program is ready to exit or not."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return boolean Returns true if the type of command is ExitCommand, and false otherwise."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * A setter method to set the state to true when the program is ready to be terminated."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param exit boolean true if the program is set to be terminated, and false otherwise."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        isExit \u003d exit;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 88
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * DeadlineCommand class would execute the program when user specify"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"deadline\" in the command. It would parse the command and show"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * message to user, as well as updating the external file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a DeadlineCommand with the given"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is :"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. A new Task of type DeadlineTask."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. Append the new task to the TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. Notify the user about the newly created task via Ui object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 4. Updates the external file via Storage object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException This exception is thrown when the system failed to detect the external file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DescriptionException This is exception is thrown whenever Parsed failed to detect"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * valid description passed in the command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeDateTimeParserException This exception is thrown whenever when Parser to detect"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * valid date-time details on the command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DescriptionException,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DukeDateTimeParserException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e taskDetails \u003d Parser.findDescriptionParser(this.command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assert !taskDetails.isEmpty() : \"TaskDetails is empty\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String deadlineTaskDescription \u003d taskDetails.get(\"taskDescription\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assert !taskDetails.isEmpty() : \"TaskDetails is empty\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDateTime deadlineTaskDateTime \u003d LocalDateTime.parse(taskDetails.get(\"taskTime\"), formatter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DeadlineTask deadlineTask \u003d new DeadlineTask(deadlineTaskDescription, deadlineTaskDateTime);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return ui.getTaskMessage(deadlineTask, tasks.size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeDateTimeParserException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 76
    }
  },
  {
    "path": "src/main/java/command/DeleteAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * DeleteAllCommand would execute the program when user specify"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"delete all\" as the command. This would automatically delete all"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * the existing task via TaskList, show message via Ui, and update the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * external file via Storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeleteAllCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a DeleteAllCommand without any"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * argument passed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeleteAllCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes the parsed user command. The result is:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Delete all the tasks in the task list ."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2.show messages to the user via Ui object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. Updates the external file via Storage object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException Thrown when system failed to open external file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int length \u003d tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.remove(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(\"All of your task has been removed!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 51
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeInvalidIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.NoIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * DeleteCommand would execute the program when user specify"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"delete\" as the command. This would automatically delete the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * specified by user in number via TaskList, show message of the deleted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * task via Ui, and update the external file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a DeleteCommand with the given"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes the parsed user command. The result is:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1.Removes the tasks based on the index number specified"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * in the user command in the task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2.Shows messages of the deleted task to the user via Ui object,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3.Updates the external file via Storage object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException This exception would be thrown when the system failed to detect"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the external file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, NoIndexException,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DukeInvalidIndexException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int index \u003d Parser.findIndexParser(this.command);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeInvalidIndexException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task removedTask \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + removedTask.toString() + \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 67
    }
  },
  {
    "path": "src/main/java/command/DoneAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * DoneAllCommand would execute the program when user specify"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"done all\" as the command. This would automatically set all task to done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * show message to the user and update the external file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DoneAllCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a DoneAllCommand without any"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * argument passed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DoneAllCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Prints tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui user interface."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList list of task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String Lists of Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String printTask(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            boolean isLastTask \u003d i !\u003d tasks.size() - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (isLastTask) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                sb.append(ui.formatMessage((i + 1) + \". \" + tasks.getTask(i) + \"\\n\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                sb.append(ui.formatMessage((i + 1) + \". \" + tasks.getTask(i)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Sets all task in the list to finished via TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. Shows the updates list of tasks to the user via UI."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. Updates the external file via Storage object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException This exception is thrown when the system failed to detect"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the external file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (!task.isDone()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                task.setDone(true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String printTask \u003d printTask(ui, tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(\"Here are the tasks in your list:\\n\" + printTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 72
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.NoIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * DoneCommand would execute the program when user specify"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"done\" as the command. This would automatically set the specified task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * to done,show message to the user and update the external file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a DoneCommand with the given"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Sets the specified task to done via TaskList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. Shows the updated task to user via Ui object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. Updates the external file via Storage object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException This exception would be thrown when the system failed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * to detect the external file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws NoIndexException  This exception would be thrown when user failed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * to specify the index of the task in the command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, NoIndexException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int index \u003d Parser.findIndexParser(this.command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task task \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + task.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 62
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * EventCommand would execute the program when user specify"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"event\" as the command. This would create a Task of type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * EventTask, show the created task to user and update the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * external file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a EventCommand with the given"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is :"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Creates a Task of type EventTask."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. Adds the newly created to the list of task via TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. Notifies the new created task to user via Ui object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 4. Updates the external file via Storage object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException This exception would be thrown when"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the system failed to detect the external file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DescriptionException This exception would be thrown"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * when user failed to specify the task details in the command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeDateTimeParserException This exception would be thrown when"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user failed to enter the specified format of date-time in the command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DescriptionException,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DukeDateTimeParserException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e taskDetails \u003d Parser.findDescriptionParser(this.command);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assert !taskDetails.isEmpty() : \"TaskDetails is empty\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String eventTaskDescription \u003d taskDetails.get(\"taskDescription\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDateTime eventTaskDateTime \u003d LocalDateTime.parse(taskDetails.get(\"taskTime\"), formatter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            EventTask eventTask \u003d new EventTask(eventTaskDescription, eventTaskDateTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.add(eventTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return ui.getTaskMessage(eventTask, tasks.size());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DescriptionException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DescriptionException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeDateTimeParserException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 84
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * EventCommand would execute the program when user specify"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"exit\" as the command. This would terminate the duke.Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a ExitCommand without any"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * argument passed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Terminates the duke.Duke program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. Sends a farewell message to the user via Ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. Alter the setExit field to true."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super.setExit(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(\"Bye! Hope to see you soon\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 37
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeKeywordException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * FindCommand executes when use specify \"find\" in the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new FindCommand with the specified"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Shows the list of tasks with that keyword to the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList list of task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user to show intended messages."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage Updates external file whenever needed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeKeywordException Thrown when user failed to specify"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * keyword in the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeKeywordException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String keyword \u003d Parser.findKeywordParser(this.command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            boolean isKeywordExist \u003d task.getDescription().contains(keyword);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (isKeywordExist) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                sb.append(ui.formatMessage((i) + \". \" + task + \"\\n\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        sb.deleteCharAt(sb.length() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(ui"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                .formatMessage(\"Here are the matching tasks in your list:\\n\" + sb.toString()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 58
    }
  },
  {
    "path": "src/main/java/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * HelpCommand would execute the program when user specify"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"help\" as the command. This would show a list of"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * existing command together with the format of the command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * A constructor with no argument to initialize"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * HelpCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is :"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Shows  the existing command and its format to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the user via Ui object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getCommandList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 36
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * ListCommand would execute the program when user specify"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"list\" as the command. This would show all the existing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * list of task to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a ListCommand without any"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * argument passed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Shows all the existing tasks in the list via Ui object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        AtomicInteger index \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        tasks.getTasks().stream().forEach(t -\u003e sb.append(index.getAndIncrement()).append(\". \").append(t).append(\"\\n\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(\"Here are the tasks in your list:\\n\" + sb.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 45
    }
  },
  {
    "path": "src/main/java/command/ShowAfterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * ShowAfterCommand would execute the program when user specify"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"show after\" as the command. This would show all the task that exist"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * after the specified date that was passed in the user command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ShowAfterCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a ShowAfterCommand with the given"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ShowAfterCommand(String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String printTask(TaskList tasks, LocalDate localDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                boolean isAfterSpecifiedDate \u003d deadlineTask.getDateTime().toLocalDate().isAfter(localDate);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (isAfterSpecifiedDate) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(index).append(\". \").append(deadlineTask).append(\"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                boolean isAfterSpecifiedDate \u003d eventTask.getDateTime().toLocalDate().isAfter(localDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (isAfterSpecifiedDate) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(index).append(\". \").append(eventTask).append(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Shows user all the task that exist after the specified date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeDateTimeParserException This exception would be thrown"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * when the user failed to specify the date in the command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeDateTimeParserException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDate localDate \u003d Parser.findDateParser(this.command);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String printTask \u003d printTask(tasks, localDate);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(printTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 78
    }
  },
  {
    "path": "src/main/java/command/ShowBeforeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * ShowBeforeCommand would execute the program when user specify"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"show before\" as the command. This would show all the task that exist"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * before the specified date that was passed in the user command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ShowBeforeCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a ShowBeforeCommand with the given"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ShowBeforeCommand(String command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String printTask(TaskList tasks, LocalDate localDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                boolean isBeforeSpecifiedDate \u003d deadlineTask.getDateTime().toLocalDate().isBefore(localDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (isBeforeSpecifiedDate) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(index).append(\". \").append(deadlineTask).append(\"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                boolean isBeforeSpecifiedDate \u003d eventTask.getDateTime().toLocalDate().isBefore(localDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (isBeforeSpecifiedDate) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(index).append(\". \").append(eventTask).append(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Shows user all the task that exist before the specified date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeDateTimeParserException This exception would be thrown"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * when the user failed to specify the date in the command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeDateTimeParserException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDate localDate \u003d Parser.findDateParser(this.command);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String printTask \u003d printTask(tasks, localDate);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getMessageTemplate(printTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 78
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * TodoCommand would execute the program when user specify"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * \"todo\" in the command. It would create a new Task of type"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * TodoTask, add it to the list, and notify the user that the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * new task was created, as well as updating the external file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a TodoCommand with the given"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Creates a new Task of type TodoTask."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. Adds it to the tasks in TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. Notifies the user about the newly created task via Ui object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 4. Updates the external file via Storage object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException Thrown when system failed to access external file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DescriptionException Thrown when user forget to include task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * description in user command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DescriptionException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String taskDescription \u003d Parser.findTodoParser(this.command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoTask todoTask \u003d new TodoTask(taskDescription);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        tasks.add(todoTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return ui.getTaskMessage(todoTask, tasks.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 57
    }
  },
  {
    "path": "src/main/java/command/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.AnonymousException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * WrongCommand class would execute the program when user specify"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * any command that doesn\u0027t exist in the program. It would notify"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * the user that the command doesn\u0027t exist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a WrongCommand with the given"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * user command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String user command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public WrongCommand(String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Executes parsed user command. The result is:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. Notifies user that the input command does not exist in the program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * and recommend the user to run the help command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * All the of the notification are run under Ui object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList List of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param ui Ui updating user interface to show intended messages."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param storage Storage to update external file whenever needed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws AnonymousException Thrown when user run a command that"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * does not exist in the program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws AnonymousException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        throw new AnonymousException(this.command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 44
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.AnonymousException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeCreateFileException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeFileException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeFileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * duke.Duke is the main program that runs and"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * interact with the user with Command Line."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this(\"data/data.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new duke.Duke with the specified filepath."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param filepath file path."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            ui.getExceptionTemplate(new DukeFileNotFoundException());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            ui.getExceptionTemplate(new DukeCreateFileException());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            System.exit(-1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Runs the main program of the duke.Duke. Terminates when"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * isExit is set to true."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void mainProgram() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                Command c \u003d Parser.parseCommand(command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                String output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                System.out.println(output);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new DukeFileNotFoundException());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new DukeFileException());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (AnonymousException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new AnonymousException(command));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String getResponse(String command) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            System.out.println(command);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Command c \u003d Parser.parseCommand(command);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DukeFileNotFoundException().toString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DukeFileException().toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (AnonymousException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new AnonymousException(command).toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The main program of duke.Duke."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param args String[] arbitrary arguments."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static void main (String[]args) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Duke duke \u003d new Duke(\"data/data.txt\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        duke.mainProgram();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 105,
      "-": 3
    }
  },
  {
    "path": "src/main/java/exception/AnonymousException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that enter a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * non-existing command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class AnonymousException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public AnonymousException(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is the concatenation of the name of"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the incorrect commend and a suggestion to run"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the help command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" There are no commands that start with \\\"\" + this.input + \"\\\".\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + \"Please type --help to see all the commands\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 27
    }
  },
  {
    "path": "src/main/java/exception/DescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that they forgot to include"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * task description in their command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DescriptionException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is \"OOPS!! Description cannot be empty\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" Description cannot be empty\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 19
    }
  },
  {
    "path": "src/main/java/exception/DukeCreateFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that the system failed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * to create the intended external file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeCreateFileException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is \"OOPS!! Failed to create a file\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \"Failed to create a file\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 19
    }
  },
  {
    "path": "src/main/java/exception/DukeDateTimeParserException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that the date time format"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * entered in the command does not satisfy the format"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * that was hoped in the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeDateTimeParserException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is \"OOPS!! You have to enter the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * date time format correctly\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" You have to enter the date time format correctly\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 22
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that there are missing input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * of command when the program is running or to notify"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * that there is something wrong with the file system."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is \"OOPS!!\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return \"OOPS!!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 21
    }
  },
  {
    "path": "src/main/java/exception/DukeFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that system failed to access"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * the external file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeFileException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is \"OOPS!! Something went wrong when"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * accessing your file.\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" Something went wrong when accessing your file\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 20
    }
  },
  {
    "path": "src/main/java/exception/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that system failed to find"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * the external file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeFileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is \"OOPS!! I cannot find your file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Sorry! :(\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" I cannot find your file. Sorry! :(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 20
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeInvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" You have to specify the correct index\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user when user forget to include"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * keyword when using FindCommand."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeKeywordException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short message of the throwable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The message is\"OOPS!! You need to specify the keyword.\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" You need to specify the keyword.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 19
    }
  },
  {
    "path": "src/main/java/exception/NoIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Thrown to notify user that they forgot to specify"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * index number of the tasks list when they run"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * DoneCommand or DeleteCommand."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class NoIndexException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * The result is \"OOPS!! You have ton specify"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * which number in your lists."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String exception message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" You have to specify which number in your lists\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 21
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DeleteAllCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DoneAllCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.HelpCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ShowAfterCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ShowBeforeCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.TodoCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.WrongCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DescriptionException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.DukeKeywordException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import exception.NoIndexException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * The Parser class are used to parse any user input and process"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * them into executable command and data."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new Parser object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Parser() {}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Parses a file path into parent directory and the file name."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param filepath String The path of a file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String[] array of separated String."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static String[] fileParser(String filepath) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return filepath.split(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Parses the content of a file line by line and"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * turns into the correct Task object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param line String Each line of strings in the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return Task Return the correct Task type from reading the file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static Task readFileParser(String line) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String[] strings \u003d line.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String taskType \u003d strings[0].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        case \"T\" :"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            task \u003d new TodoTask(strings[2].trim());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        case \"D\" :"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] taskDetails \u003d strings[2].split(\"\\\\|\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String deadlineDescription \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(taskDetails[1].trim(), formatter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            task \u003d new DeadlineTask(deadlineDescription, deadlineDateTime);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        case \"E\" :"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] taskDetails2 \u003d strings[2].split(\"\\\\|\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String eventDescription \u003d taskDetails2[0].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDateTime eventDateTime \u003d LocalDateTime.parse(taskDetails2[1].trim(), formatter);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            task \u003d new EventTask(eventDescription, eventDateTime);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new Task();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (strings[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            task.setDone(false);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Parses given user command and turns it into and"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Command object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String User command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return Command Return various Command type based on user input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static Command parseCommand(String command) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (command.toLowerCase().equals(Command.EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().equals(Command.LIST_COMMAND)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().equals(Command.DONE_ALL_COMMAND)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DoneAllCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.DONE_COMMAND)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.TODO_COMMAND)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new TodoCommand(command);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new EventCommand(command);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().equals(Command.HELP_COMMAND)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.DELETE_ALL_COMMAND)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DeleteAllCommand();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.DELETE_COMMAND)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.SHOW_AFTER_COMMAND)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ShowAfterCommand(command);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.SHOW_BEFORE_COMMAND)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ShowBeforeCommand(command);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.FIND_COMMAND)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new WrongCommand(command);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Parses user command (usually DeleteCommand and"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * DoneCommand), returns the number that was passed in the command."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param input user command."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return int The index specified by the user command."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws NoIndexException This exception is thrown when user forget"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * to specify the index of the task list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static int findIndexParser(String input) throws NoIndexException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            int index \u003d Integer.parseInt(input.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new NoIndexException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Parses user command(usually ShowAfterCommand"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * or ShowBeforeCommand) and returns the date that was passed in the"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * command."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param input String user command."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return LocalDate The date that was passed in the user command."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeDateTimeParserException This exception is thrown when user forget"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * to specify the date in the command."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static LocalDate findDateParser(String input) throws DukeDateTimeParserException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(input.split(\"\\\\s\")[2]);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return localDate;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeDateTimeParserException();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns Map(String,String) that contains task\u0027s description and"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * task\u0027s date-time. Usually used by DeadlineCommand and EventCommand."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param input user command."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return Map (String,String) Returns map that contains task\u0027s description and task\u0027s date-time."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DescriptionException This exception is thrown when user forget to specify"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * either the task description or the date-time."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static Map\u003cString, String\u003e findDescriptionParser(String input) throws DescriptionException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] getDetails \u003d input.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] details \u003d getDetails[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String taskDescription \u003d details[0].trim();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            map.put(\"taskDescription\", details[0].trim());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] splitTimeDetails \u003d details[1].split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String taskDateTime \u003d splitTimeDetails[1];"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            map.put(\"taskTime\", taskDateTime);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return map;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DescriptionException();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Parses specific TodoCommand and return the task description."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param input user command."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String task description of type TodoTask."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DescriptionException This exception is thrown when user forget to specify"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the task\u0027s description on the command."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static String findTodoParser(String input) throws DescriptionException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return input.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DescriptionException();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Finds the keyword specified in user command."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param input String user command."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String keyword"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws DukeKeywordException Thrown when user failed to specify the keyword"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * in the command."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static String findKeywordParser(String input) throws DukeKeywordException {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String keyword \u003d input.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (isKeywordEmpty(keyword)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                throw new DukeKeywordException();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                return keyword.trim();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeKeywordException();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private static boolean isKeywordEmpty(String keyword) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return keyword.equals(\"\") || keyword.equals(\"\\\\s\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 243
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * This Storage class is used to handle creating, reading, and writing"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * a local file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new Storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Storage() {}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new Storage object with file path as its arguments."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * It would instantly create the directory and the file if"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the filepath specified was found in user\u0027s local."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param filepath String The path of the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException This is exception would be thrown if the system"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * could detect any file or directory with the specified filepath."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Storage(String filepath) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String[] strings \u003d Parser.fileParser(filepath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String parentPath \u003d strings[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String childPath \u003d strings[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        File file \u003d new File(parentPath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            file.mkdir();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.file \u003d new File(parentPath, childPath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (!this.file.exists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Loads the data from the given file path, turn into"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * various type of Task object (based on the data), and return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * a list of task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return List(Task) Returns a list of type Task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws FileNotFoundException This exception would be thrown if"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the specified file was not found in user\u0027s local."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Scanner s \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.add(Parser.readFileParser(s.nextLine()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Updates the external file of the given"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * file path, by taking a list of Task as it\u0027s argument."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks TaskList A list of task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @throws IOException This exception would be thrown if"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the system was not able to write to the specified file path."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void updateFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder txtToAdd \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                TodoTask todoTask \u003d (TodoTask) task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (todoTask.isDone()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"T\").append(\" | \").append(\"1\").append(\" | \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"T\").append(\" | \").append(\"0\").append(\" | \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                txtToAdd.append(todoTask.getDescription()).append(\"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (eventTask.isDone()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"E\").append(\" | \").append(\"1\").append(\" | \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"E\").append(\" | \").append(\"0\").append(\" | \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                txtToAdd.append(eventTask.getDescription()).append(\" | \")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                        .append(eventTask.getDateTime().format(DateTimeFormatter"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                                .ofPattern(\"yyyy-MM-dd HH:mm\"))).append(\"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (deadlineTask.isDone()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"D\").append(\" | \").append(\"1\").append(\" | \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"D\").append(\" | \").append(\"0\").append(\" | \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                txtToAdd.append(deadlineTask.getDescription()).append(\" | \")"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                        .append(deadlineTask.getDateTime().format(DateTimeFormatter"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                                .ofPattern(\"yyyy-MM-dd HH:mm\"))).append(\"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        fw.write(txtToAdd.toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 128
    }
  },
  {
    "path": "src/main/java/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * The DeadlineTask class inherits method from the Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * It would create an DeadlineTask object with the given description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * and date-time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private static final String DEADLINE \u003d \"[D]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new DeadlineTask with empty description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * and null as its date time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeadlineTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new DeadlineTask with task description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * and task date time that was parsed from user command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param description String deadline task description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param dateTime LocalDateTime deadline task date and time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeadlineTask(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assert dateTime !\u003d null : \"DateTime is null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets task date-time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return LocalDateTime This return deadline task date-time."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Sets set the current date-time to the given date-time."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param dateTime LocalDateTime this argument would change the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * current date-time."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDate(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns messages to user. The result is the concatenation of :"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. The type of the Task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. The task\u0027s status."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. The description of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 4. The date and time of the task (MMM d yyy, h a)."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String Returns the they task type ([D]), its status as well"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * as its description and date-time in an intended format."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DEADLINE + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy, h a\")) + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 72
    }
  },
  {
    "path": "src/main/java/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " *  The EventTask class inherits method from the Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " *  It would create an EventTask object with the given description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " *  and date-time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private static final String EVENT \u003d \"[E]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new EventTask with empty description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * and null as its date time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public EventTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new EventTask with task description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * and task date time that was parsed from user command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param description String event task description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param dateTime LocalDateTime event task date and time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public EventTask(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets task date-time."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return LocalDateTime This return event task date-time."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Sets set the current date-time to the given date-time."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param dateTime LocalDateTime this argument would change the"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * current date-time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns messages to user. The result is the concatenation of :"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. The type of the Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. The task\u0027s status."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. The description of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 4. The date and time of the task (MMM d yyy, h a)."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String Returns the task type ([E]), its status as well"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * as its description and date-time in an intended format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return EVENT + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy, h a\")) + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 71
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * The Task class implements methods that will be used"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * by its child class to create various task object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new Task with empty string as  its"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * description and false for isDone."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new Task with task description specified"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * by user command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param description To define task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assert !(description.isEmpty()) : \"Task Description is empty\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the task\u0027s description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String task description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Sets the current task description to the specified"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param description The task\u0027s description/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns whether a task is finished or not."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return boolean Returns true if task is done,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * false otherwise."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns the status (done/undone) of the task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * in symbolic form ([O]/[X])."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String Returns \"[O]\" if the task is done, and"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * return \"[X]\" otherwise."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String getStatus() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return isDone ? \"[O]\" : \"[X]\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Sets the current isDone to the specified boolean."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param isDone Sets isDone to true if task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * has finished, and false otherwise."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns messages to user. The result is the concatenation of :"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. The status of the Task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. The description of the task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String Returns the task type ([T]]), its status as well"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * as its description."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return getStatus() + \" \" + this.description;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 95
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * TaskList class are used to store all the task specified"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * by user in an ArrayList of Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new TaskList with the tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * initialize to a new ArrayList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new TaskList with the"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * specified list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks List(Task) List of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return List(Task) Returns list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Sets the current list of tasks to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the specified list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param tasks List(Task) list of task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Adds new Task to the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param task Task single task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Removes the specified task from the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param index int list\u0027s index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return Task task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the specified task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param index int list\u0027s index."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return Task Returns the specified task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the size of the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return int list\u0027s size."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 88
    }
  },
  {
    "path": "src/main/java/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * The TodoTask class inherits method from the Task class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * It would create EventTask object with the given description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private static final String TODO \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new TodoTask with empty description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TodoTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Costructs a new TodoTask with the given task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param description todo task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Returns messages to user. The result is the concatenation of :"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 1. The type of the Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 2. The status of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * 3. The description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String Returns the task type ([T]]), its status as well"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * as its description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return TODO + super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 41
    }
  },
  {
    "path": "src/main/java/ui/DialogBoxDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DialogBoxDuke extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private DialogBoxDuke(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBoxDuke.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        //this.setBackground(new Background(Color.RED));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Circle clip \u003d new Circle(50.0, 50.0, 50.0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static DialogBoxDuke getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DialogBoxDuke dialogBoxDuke \u003d new DialogBoxDuke(text, img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (text.contains(\"OOPS!!\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            dialogBoxDuke.dialog.setTextFill(Color.RED);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return dialogBoxDuke;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 46
    }
  },
  {
    "path": "src/main/java/ui/DialogBoxUser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "//Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart4.html"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DialogBoxUser extends HBox {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private DialogBoxUser(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBoxUser.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        //this.setBackground(new Background(Color.RED));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Circle clip \u003d new Circle(50.0, 50.0, 45.0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        //this.setBackground(new Background(new BackgroundFill(Color.BLUEVIOLET, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        setBackground(new Background(new BackgroundFill(Color.YELLOW, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets user dialog."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param text String user\u0027s Text."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param img Image user\u0027s image."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return DialogBox user\u0027s dialog box."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static DialogBoxUser getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return new DialogBoxUser(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets duke dialog."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param text String duke\u0027s text."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param img Image duke\u0027s  image."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return DialogBox duke\u0027s dialog box"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static DialogBoxUser getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DialogBoxUser db \u003d new DialogBoxUser(text, img);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 88
    }
  },
  {
    "path": "src/main/java/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "//Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart4.html"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Controller for ui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/robot.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Initializes MainWindow controllers."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DialogBoxDuke.getDukeDialog(ui.greet(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Duke\u0027s reply and then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String exitString \u003d \"Bye! Hope to see you soon\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DialogBoxUser.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DialogBoxDuke.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (response.equals(exitString)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        userInput.setPromptText(\"Enter Command\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 69
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * Ui class deals with everything that has to do"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * with user interface, like showing messages,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " * showing list of task, and showing exception message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    static final String LINE \u003d \"___________________________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    static final String DOUBLE_TAB \u003d \"      \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Constructs a new Ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Reads the input command from user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String user command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        enterCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String command \u003d sc.nextLine();;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the template of message, where messages"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * are in between two lines."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param input String message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String getMessageTemplate(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        stringBuilder.append(input).append(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.println(stringBuilder.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the template of exception message, where"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * the exception messages are in between two lines."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param exception String exception message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void getExceptionTemplate(Exception exception) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        stringBuilder.append(exception.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.println(stringBuilder.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Formats the command and format message, so that"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * it follows some indentation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param command String existing command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param format String command\u0027s accepted format"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String Formats strings with some indentation."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String formatCommandList(String command, String format) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String indentation \u003d \"  |   \";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return command + \"  |   \" + format + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the list of existing commands that is available"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * in duke.Duke program ans shows it to the user via HelpCommand."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String getCommandList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return formatCommandList(\"COMMAND\", \"FORMAT\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- deadline\", \"deadline \u003cDEADLINE_NAME\u003e /by \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- delete\", \"delete \u003cTASK_NUMBER\u003e\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- delete all\", \"delete all\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- done\", \"done \u003cTASK_NUMBER\u003e\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- done all\", \"done all\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- event\", \"event \u003cEVENT_NAME\u003e /at \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- show after\", \"show after \u003cyyyy-MM-dd\u003e\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- show before\", \"show before \u003cyyyy-MM-dd\u003e\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"- todo\", \"todo \u003cTASK_NAME\u003e\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Indents the inputted message by two tabs."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param input String input."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String indented message."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String formatMessage(String input) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DOUBLE_TAB + input;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Indents the inputted exception message by two tabs."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param message String exception message."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @return String indented exception message."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static String formatExceptionMessage(String message) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DOUBLE_TAB + message;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the greeting message and show it to the user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return getMessageTemplate(\"Hello! I\u0027m Rich.\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the message to indicate when program is ready to"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * receive user input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void enterCommand() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.print(\"Enter command here: \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * Gets the message to show specific Task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * and the size of the task list to the user."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param task Task task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     * @param size int size of task list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String getTaskMessage(Task task, int size) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return getMessageTemplate(\"Got it. I\u0027ve added this task :\\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 137
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: lightskyblue; -fx-border-color: navy; -fx-background-radius: 20; -fx-border-width: 1.5; -fx-border-radius: 20;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_CENTER\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: lightcyan; -fx-background-radius: 25; -fx-border-color: blue; -fx-border-radius: 25;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInsets bottom\u003d\"7.5\" left\u003d\"7.5\" right\u003d\"7.5\" top\u003d\"7.5\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInnerShadow choke\u003d\"0.47\" color\u003d\"#0048ff\" height\u003d\"28.15\" radius\u003d\"14.17\" width\u003d\"30.53\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cFont name\u003d\"Georgia\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "   \u003ceffect\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      \u003cInnerShadow choke\u003d\"0.36\" color\u003d\"#1100ff\" height\u003d\"71.05\" radius\u003d\"36.8125\" width\u003d\"78.2\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "   \u003c/effect\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBoxDuke.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #00f7a8; -fx-border-color: navy; -fx-background-radius: 20; -fx-border-width: 1.5; -fx-border-radius: 20;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-opacity: 0.95;\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"-Infinity\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" style\u003d\"-fx-background-color: #a1ffe1; -fx-background-radius: 25; -fx-border-color: blue; -fx-border-radius: 25;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInnerShadow choke\u003d\"0.18\" color\u003d\"#007f55\" height\u003d\"42.45\" radius\u003d\"20.7225\" width\u003d\"42.44\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cFont name\u003d\"Georgia Italic\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "   \u003ceffect\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      \u003cInnerShadow choke\u003d\"0.43\" color\u003d\"#05573a\" height\u003d\"51.38\" radius\u003d\"25.935000000000002\" width\u003d\"54.36\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "   \u003c/effect\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBoxUser.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: lightskyblue; -fx-border-color: navy; -fx-background-radius: 20; -fx-border-width: 1.5; -fx-border-radius: 20;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_CENTER\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: lightcyan; -fx-background-radius: 25; -fx-border-color: blue; -fx-border-radius: 25;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInnerShadow choke\u003d\"0.47\" color\u003d\"#0048ff\" height\u003d\"28.15\" radius\u003d\"14.17\" width\u003d\"30.53\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cFont name\u003d\"Georgia\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-opacity: 0.95;\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "   \u003ceffect\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "      \u003cInnerShadow choke\u003d\"0.36\" color\u003d\"#1100ff\" height\u003d\"71.05\" radius\u003d\"36.8125\" width\u003d\"78.2\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "   \u003c/effect\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 37
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: black;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #c4c4c4;\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cFont name\u003d\"Georgia\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInnerShadow choke\u003d\"0.07\" color\u003d\"#6f6e6e\" height\u003d\"49.6\" radius\u003d\"23.705\" width\u003d\"47.22\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/effect\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter Command...\" style\u003d\"-fx-background-color: #c4c4c4;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cInnerShadow /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003cFont name\u003d\"Constantia\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" spacing\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 33
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DeleteAllCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DoneAllCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.HelpCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ShowAfterCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.ShowBeforeCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.TodoCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import command.WrongCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void readFileTest() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task test1 \u003d Parser.readFileParser(\"T | 0 | read book\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoTask todoTask \u003d new TodoTask(\"read book\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(todoTask.toString(), test1.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(todoTask.getDescription(), test1.getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task test2 \u003d (Parser.readFileParser(\"D | 0 | return book | 2020-06-06 06:00\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeadlineTask deadlineTask \u003d new DeadlineTask(\"return book\", LocalDateTime"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                .parse(\"2020-06-06 06:00\", formatter));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.toString(), test2.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.getDescription(), test2.getDescription());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.getClass(), test2.getClass());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.getDateTime(), ((DeadlineTask) test2).getDateTime());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task test3 \u003d Parser.readFileParser(\"E | 0 | return book | 2020-06-06 06:00\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        EventTask eventTask \u003d new EventTask(\"return book\", LocalDateTime.parse(\"2020-06-06 06:00\", formatter));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventTask.toString(), test3.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventTask.getDescription(), test3.getDescription());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventTask.getDateTime(), ((EventTask) test3).getDateTime());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void parseCommandTest() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test1 \u003d Parser.parseCommand(\"bye\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ExitCommand exitCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(exitCommand.getClass(), test1.getClass());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test2 \u003d Parser.parseCommand(\"list\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(listCommand.getClass(), test2.getClass());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test3 \u003d Parser.parseCommand(\"done all\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DoneAllCommand doneAllCommand \u003d new DoneAllCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(doneAllCommand.getClass(), test3.getClass());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test4 \u003d Parser.parseCommand(\"done 1\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DoneCommand doneCommand \u003d new DoneCommand(\"done 1\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(doneCommand.getClass(), test4.getClass());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test5 \u003d Parser.parseCommand(\"todo borrow book\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoCommand todoCommand \u003d new TodoCommand(\"todo borrow book\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(todoCommand.getClass(), test5.getClass());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test6 \u003d Parser.parseCommand(\"deadline eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"deadline eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineCommand.getClass(), test6.getClass());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test7 \u003d Parser.parseCommand(\"event eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        EventCommand eventCommand \u003d new EventCommand(\"event eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventCommand.getClass(), test7.getClass());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test8 \u003d Parser.parseCommand(\"--help\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        HelpCommand helpCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(helpCommand.getClass(), test8.getClass());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test9 \u003d Parser.parseCommand(\"delete all\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeleteAllCommand deleteAllCommand \u003d new DeleteAllCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deleteAllCommand.getClass(), test9.getClass());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test10 \u003d Parser.parseCommand(\"delete 1\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(\"delete 1\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deleteCommand.getClass(), test10.getClass());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test11 \u003d Parser.parseCommand(\"show after 2020-04-04\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ShowAfterCommand showAfterCommand \u003d new ShowAfterCommand(\"show after 2020-04-04\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(showAfterCommand.getClass(), test11.getClass());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test12 \u003d Parser.parseCommand(\"show before 2020-04-04\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ShowBeforeCommand showBeforeCommand \u003d new ShowBeforeCommand(\"show before 2020-04-04\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(showBeforeCommand.getClass(), test12.getClass());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test13 \u003d Parser.parseCommand(\"blah\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        WrongCommand wrongCommand \u003d new WrongCommand(\"blah\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(wrongCommand.getClass(), test13.getClass());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findIndexParserTest() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            int test1 \u003d Parser.findIndexParser(\"done 1\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(1, test1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            int test2 \u003d Parser.findIndexParser(\"delete 1\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(1, test2);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findDateParserTest() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(()-\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate test1 \u003d Parser.findDateParser(\"show before 2020-05-05\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(\"2020-05-05\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(localDate, test1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate test2 \u003d Parser.findDateParser(\"show after 2020-05-05\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(localDate, test2);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findDescriptionParserTest() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e test1 \u003d Parser.findDescriptionParser(\"event borrow book /by 2020-04-04 18:00\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"borrow book\", test1.get(\"taskDescription\"));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"2020-04-04 18:00\", test1.get(\"taskTime\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e test2 \u003d Parser.findDescriptionParser(\"deadline eating a lot /by 2020-04-04 18:00\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"eating a lot\", test2.get(\"taskDescription\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"2020-04-04 18:00\", test2.get(\"taskTime\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findTodoParserTest() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String test1 \u003d Parser.findTodoParser(\"todo borrow book\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"borrow book\", test1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 161
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.DeadlineTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.EventTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import task.TodoTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void todoTaskTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String description \u003d \"Task Example\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoTask todoTask \u003d new TodoTask(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(description, todoTask.getDescription());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[T][X] Task Example\", todoTask.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        todoTask.setDone(true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[T][O] Task Example\", todoTask.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void deadlineTaskTest() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String description \u003d \"Task Example\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"2020-03-04 18:00\", formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeadlineTask deadlineTask \u003d new DeadlineTask(description, localDateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(description, deadlineTask.getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(localDateTime, deadlineTask.getDateTime());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[D][X] Task Example (by: Mar 4 2020, 6 PM)\", deadlineTask.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        deadlineTask.setDone(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(true, deadlineTask.isDone());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[D][O] Task Example (by: Mar 4 2020, 6 PM)\", deadlineTask.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void eventTaskTest() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String description \u003d \"Task Example\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"2020-03-04 18:00\", formatter);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        EventTask eventTask \u003d new EventTask(description, localDateTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(description, eventTask.getDescription());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(localDateTime, eventTask.getDateTime());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[E][X] Task Example (by: Mar 4 2020, 6 PM)\", eventTask.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        eventTask.setDone(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(true, eventTask.isDone());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[E][O] Task Example (by: Mar 4 2020, 6 PM)\", eventTask.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 58
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "--help"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "delete"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "java -classpath ..\\bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 7,
      "-": 19
    }
  }
]
