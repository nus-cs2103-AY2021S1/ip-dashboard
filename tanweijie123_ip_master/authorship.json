[
  {
    "path": "src/main/java/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public enum CommandList {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    bye,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    exit,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    list,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    todo,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    deadline,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    event,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    done,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private String taskBy;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.taskBy \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.taskBy);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        intro();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                process(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                println(de.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } while (!(input.equals(\"bye\") || input.equals(\"exit\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * Prints output enclosed in top and bottom horizontal lines"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     * @param message message to be output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void println(String... message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        for (String s : message) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            System.out.println(\"\\t\" + s);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void printAddTask(Task t) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                \"Got it. I\u0027ve added this task: \", t.toString(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                \"Now you have \" + taskList.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void intro() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(\"Hello! I\u0027m KING!\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void list() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            println(\"I can\u0027t find any task in your list...\", \"Try adding some task using \\\"todo\\\", \\\"deadline\\\" and \\\"event\\\" command\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] output \u003d new String[taskList.size() + 1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        output[0] \u003d \" Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            output[i] \u003d i + \".\" + taskList.get(i-1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        println(output);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void done(String num) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            int selected \u003d Integer.parseInt(num.strip());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            taskList.get(selected-1).setDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            println(\"Nice! I\u0027ve marked this task as done: \", taskList.get(selected-1).toString() );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"This is not a number for \\\"done\\\" command: \" + num);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IndexOutOfBoundsException iooob) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I cannot check this element: \" + num);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void todo(String todo) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (todo.isBlank())"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description of \\\"todo\\\" cannot be empty\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        ToDo todo1 \u003d new ToDo(todo.strip());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        taskList.add(todo1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        printAddTask(todo1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void deadline(String dl) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] split \u003d dl.split(\"/by\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I can\u0027t find the \\\"/by\\\" keyword...\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split[0].isBlank() || split[1].isBlank())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description or deadline of \\\"deadline\\\" cannot be empty\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Deadline deadline \u003d new Deadline(split[0].strip(), split[1].strip());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        printAddTask(deadline);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void event(String ev) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        String[] split \u003d ev.split(\"/at\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I can\u0027t find the \\\"/at\\\" keyword...\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        if (split[0].isBlank() || split[1].isBlank())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"The description or date of \\\"event\\\" cannot be empty\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        Event event \u003d new Event(split[0].strip(), split[1].strip());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        printAddTask(event);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void delete(String num) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            int selected \u003d Integer.parseInt(num.strip());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            Task task \u003d taskList.remove(selected-1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            println( \"Noted. I\u0027ve removed this task: \", task.toString(),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                    \"Now you have \" + taskList.size() + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"This is not a number for \\\"delete\\\" command: \" + num);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IndexOutOfBoundsException iooob) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"I cannot delete this element: \" + num);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private static void process(String msg) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        int idx \u003d msg.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        CommandList command;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            command \u003d (idx \u003e 0) ? CommandList.valueOf(msg.substring(0, idx)) : CommandList.valueOf(msg);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        } catch (IllegalArgumentException iae) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            throw new DukeException(\"This is not in my command list\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case bye:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case exit:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case list:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case todo:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                todo(msg.substring(4));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case deadline:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                deadline(msg.substring(8));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case event:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                event(msg.substring(5));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case done:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                done(msg.substring(4));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "            case delete:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                delete(msg.substring(6));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 158,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(\":( \\n\\tI dont understand this... \\n\\t\" + msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private String taskDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Event(String desc, String taskDateTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.taskDateTime);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this(desc,false);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public Task(String desc, boolean done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[%c] %s\", (this.done) ? \u0027✓\u0027 : \u0027✗\u0027, this.desc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "todo join go home club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "todo do java prog"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanweijie123"
        },
        "content": "@pause"
      }
    ],
    "authorContributionMap": {
      "tanweijie123": 4,
      "-": 20
    }
  }
]
