[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"# duke.duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"1. After the importing is complete, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"yeohhq":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"    archiveBaseName \u003d \"duke-2.0\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yeohhq":18,"-":43}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"done"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"exit $ret"}],"authorContributionMap":{"yeohhq":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"\u0027"}],"authorContributionMap":{"yeohhq":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"\u0027"}],"authorContributionMap":{"yeohhq":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"done"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"exit $ret"}],"authorContributionMap":{"yeohhq":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot Duke. Given below are instructions on how to use it."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"## Setting up in IntelliJ"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File`\u003e `Close Project` to close the existing project dialog first)."},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"2. Set up the correct JDK version, as follows:"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`."},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    2. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    3. Click `OK`."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"3. Import the project into Intellij as follows:"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"    1. Click `Open` or `Import`."},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    2. Select the project directory, and click `OK`."},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    3. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"4. After the importing is complete, locate the `src/main/java/Launcher.java` file, right-click it, and choose `Run Launcher.main()`. "},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    * If errors arise due to missing packages or dependencies, please install them before running Duke."},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"5. If the setup is correct, a GUI window should appear and you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e ![ScreenShot](https://github.com/yeohhq/ip/blob/master/src/main/resources/images/Default.png?raw\u003dtrue)"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"## Types of Tasks"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"1. **Todo**: Simple Todo task."},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"2. **Deadline**:  Deadline task that needs to be completed by a specified date."},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"3. **Event**: Event task specified to be held on a certain date/location."},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"## Command List and Format"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"To view the full list of commands, enter any input that is not identified below."},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"| Command    | Format                                      |"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"|------------|---------------------------------------------|"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"| `list`     | `list`                                      |"},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"| `todo`     | `todo` {description}                        |"},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"| `event`    | `event` {description} `/at` {location/date} |"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"| `deadline` | `deadline` {description} `/by` {YYYY-MM-DD} |"},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"| `done`     | `done` {integer task number}                |"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"| `delete`   | `delete` {integer task number}              |"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"| `find`     | `find` {keyword to find}                    |"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"| `tag`      | `tag` {integer task number} {tag word}      |"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"### `list` - to show your current list of tasks"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"Upon input command `list`, Duke will list your current list of tasks as stored in the `duke.txt` file stored on your local repository."},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"`list`"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":"\u003eHere are the tasks in your list:"},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[D][✓] [HW] homework (by: Aug 24 2020)"},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[D][✓] [HW] homework 2 (by: Aug 12 2020)"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[E][✓] birthday party (at: home)"},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[D][✓] [HW] homework 3 (by: Sep 01 2020)"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[T][✓] [PROJECT] group project"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":60,"author":{"gitId":"yeohhq"},"content":"### `todo` - to add a Todo task"},{"lineNumber":61,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":62,"author":{"gitId":"yeohhq"},"content":"Upon input command `todo`, Duke will add a new Todo task to your current list of tasks."},{"lineNumber":63,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":64,"author":{"gitId":"yeohhq"},"content":"Example of usage: "},{"lineNumber":65,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":66,"author":{"gitId":"yeohhq"},"content":"`todo` homework"},{"lineNumber":67,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":68,"author":{"gitId":"yeohhq"},"content":"Expected outcome:"},{"lineNumber":69,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":70,"author":{"gitId":"yeohhq"},"content":"\u003eGot it. I\u0027ve added this task:"},{"lineNumber":71,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[T][✗] homework"},{"lineNumber":72,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003eNow you have 1 tasks in the list."},{"lineNumber":73,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":74,"author":{"gitId":"yeohhq"},"content":"### `event` - to add an Event task"},{"lineNumber":75,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":76,"author":{"gitId":"yeohhq"},"content":"Upon input command `event`, Duke will add a new Event task to your current list of tasks."},{"lineNumber":77,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":78,"author":{"gitId":"yeohhq"},"content":"Example of usage: "},{"lineNumber":79,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":80,"author":{"gitId":"yeohhq"},"content":"`event` birthday party `/at` home"},{"lineNumber":81,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":82,"author":{"gitId":"yeohhq"},"content":"Expected outcome:"},{"lineNumber":83,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":84,"author":{"gitId":"yeohhq"},"content":"\u003eGot it. I\u0027ve added this task:"},{"lineNumber":85,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[E][✗] birthday party (at: home)"},{"lineNumber":86,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003eNow you have 2 tasks in the list."},{"lineNumber":87,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":88,"author":{"gitId":"yeohhq"},"content":"### `deadline` - to add a Deadline task"},{"lineNumber":89,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":90,"author":{"gitId":"yeohhq"},"content":"Upon input command `deadline`, Duke will add a new Deadline task to your current list of tasks."},{"lineNumber":91,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":92,"author":{"gitId":"yeohhq"},"content":"Example of usage: "},{"lineNumber":93,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":94,"author":{"gitId":"yeohhq"},"content":"`deadline` homework `/by` 2020-08-24"},{"lineNumber":95,"author":{"gitId":"yeohhq"},"content":"* Note: The date after `/by` has to be given in YYYY-MM-DD format."},{"lineNumber":96,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":97,"author":{"gitId":"yeohhq"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":99,"author":{"gitId":"yeohhq"},"content":"\u003eGot it. I\u0027ve added this task:"},{"lineNumber":100,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[D][✗] homework (by: Aug 24 2020)"},{"lineNumber":101,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003eNow you have 3 tasks in the list."},{"lineNumber":102,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":103,"author":{"gitId":"yeohhq"},"content":"### `done` - to mark a task as done"},{"lineNumber":104,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":105,"author":{"gitId":"yeohhq"},"content":"Upon input command `done`, Duke will mark the given task from your current list of tasks as done ."},{"lineNumber":106,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":107,"author":{"gitId":"yeohhq"},"content":"Example of usage: "},{"lineNumber":108,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":109,"author":{"gitId":"yeohhq"},"content":"`done` 1"},{"lineNumber":110,"author":{"gitId":"yeohhq"},"content":"* Note: The integer value must be separated by a whitespace from the `done` command."},{"lineNumber":111,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":112,"author":{"gitId":"yeohhq"},"content":"Expected outcome:"},{"lineNumber":113,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":114,"author":{"gitId":"yeohhq"},"content":"\u003eNice! I\u0027ve marked this task as done:"},{"lineNumber":115,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[T][✓] homework"},{"lineNumber":116,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":117,"author":{"gitId":"yeohhq"},"content":"### `delete` - to delete a task"},{"lineNumber":118,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":119,"author":{"gitId":"yeohhq"},"content":"Upon input command `delete`, Duke will delete the given task from your current list of tasks."},{"lineNumber":120,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":121,"author":{"gitId":"yeohhq"},"content":"Example of usage: "},{"lineNumber":122,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":123,"author":{"gitId":"yeohhq"},"content":"`delete` 1"},{"lineNumber":124,"author":{"gitId":"yeohhq"},"content":"* Note: The integer value must be separated by a whitespace from the `delete` command."},{"lineNumber":125,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":126,"author":{"gitId":"yeohhq"},"content":"Expected outcome:"},{"lineNumber":127,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":128,"author":{"gitId":"yeohhq"},"content":"\u003eNoted. I\u0027ve removed this task:"},{"lineNumber":129,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[T][✓] homework"},{"lineNumber":130,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003eNow you have 2 tasks in the list."},{"lineNumber":131,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":132,"author":{"gitId":"yeohhq"},"content":"### `find` - to find a task with a given keyword"},{"lineNumber":133,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":134,"author":{"gitId":"yeohhq"},"content":"Upon input command `find`, Duke will find all tasks from your current list of tasks that matches the given keyword."},{"lineNumber":135,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":136,"author":{"gitId":"yeohhq"},"content":"Example of usage: "},{"lineNumber":137,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":138,"author":{"gitId":"yeohhq"},"content":"`find` homework"},{"lineNumber":139,"author":{"gitId":"yeohhq"},"content":"* Note: The keyword must be separated by a whitespace from the `find` command."},{"lineNumber":140,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":141,"author":{"gitId":"yeohhq"},"content":"Expected outcome:"},{"lineNumber":142,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":143,"author":{"gitId":"yeohhq"},"content":"\u003eHere are the matching tasks in your list:"},{"lineNumber":144,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[D][✗] homework (by: Aug 24 2020)"},{"lineNumber":145,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":146,"author":{"gitId":"yeohhq"},"content":"### `tag` - to tag a task with a given tag word"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"yeohhq"},"content":"Upon input command `tag`, Duke will tag a given task from your current list of tasks with the given tag word."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"yeohhq"},"content":"`tag` 2 HW"},{"lineNumber":153,"author":{"gitId":"yeohhq"},"content":"* Note: "},{"lineNumber":154,"author":{"gitId":"yeohhq"},"content":"    * The task number must be separated by a whitespace from the `tag` command."},{"lineNumber":155,"author":{"gitId":"yeohhq"},"content":"    * The tag word (eg. \u0027HW\u0027) must also be separated by a whitespace from the task number."},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"yeohhq"},"content":"\u003eGot it, I\u0027ve tagged this task for you:"},{"lineNumber":160,"author":{"gitId":"yeohhq"},"content":"\u003cbr/\u003e[D][✗][HW] homework (by: Aug 24 2020)"}],"authorContributionMap":{"yeohhq":140,"-":20}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"[D][✓] homework (by: Aug 24 2020)"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"[D][✓] homework 2 (by: Aug 12 2020)"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"[E][✓] vacation (at: Switzerland)"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"[D][✓] homework 3 (by: Sep 01 2020)"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"[T][✓] group project"}],"authorContributionMap":{"yeohhq":5}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":" */"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import command.Command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"    protected Storage storage;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"    protected Ui ui;"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    protected Parser parser;"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    protected boolean hasGreeted;"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     * Creates Duke object by loading tasks stored locally in filePath."},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"     * @param filePath File path to .txt file to load tasks stored locally."},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    public Duke(String filePath) {"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"        this.taskList \u003d new TaskList(storage.tasks);"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"        this.parser \u003d new Parser(this);"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"     * Creates Duke object to be used by JavaFX."},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"    public Duke() {"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"        this(\"duke.txt\");"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"     * Runs Duke."},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"    public String run(String input) throws DukeException {"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"        String response \u003d null;"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"            Command command \u003d parser.parse(input, this.taskList);"},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"            response \u003d command.execute();"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"        } catch (DukeException ex) {"},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"            response \u003d ex.getMessage();"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"        if (response.equals(\"exit\")) {"},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"            // Save tasks before terminating program"},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"            this.storage.saveTasks(this.taskList.tasks);"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"            response \u003d this.ui.goodbye();"},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"        return response;"},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":52,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":"     * Runs Duke program."},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"     * @param args"},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"        Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":61,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"yeohhq"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":63,"author":{"gitId":"yeohhq"},"content":"     * Replace this stub with your completed method."},{"lineNumber":64,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"yeohhq"},"content":"    String getResponse(String input) throws DukeException {"},{"lineNumber":66,"author":{"gitId":"yeohhq"},"content":"        String response \u003d this.run(input);"},{"lineNumber":67,"author":{"gitId":"yeohhq"},"content":"        return this.ui.formatResponse(response);"},{"lineNumber":68,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":70,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"yeohhq"},"content":"     * Sets hasGreeted boolean to true;"},{"lineNumber":72,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"yeohhq"},"content":"    void setHasGreeted() {"},{"lineNumber":74,"author":{"gitId":"yeohhq"},"content":"        this.hasGreeted \u003d true;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"},{"lineNumber":77,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":78,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":79,"author":{"gitId":"yeohhq"},"content":""}],"authorContributionMap":{"yeohhq":76,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":" */"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DarkKermit.PNG\"));"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Kermit.PNG\"));"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"        greetUser();"},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"     * Adds greeting to dialog box."},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"    public void greetUser() {"},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"        String response \u003d duke.ui.greetings();"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"        duke.setHasGreeted();"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"                DialogBox.getDukeDialog(response, dukeImage));"},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"yeohhq"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":"    private void handleUserInput() {"},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"        String response \u003d null;"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"            response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"        } catch (DukeException e) {"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":"            e.printStackTrace();"},{"lineNumber":60,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"yeohhq"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":62,"author":{"gitId":"yeohhq"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":63,"author":{"gitId":"yeohhq"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":64,"author":{"gitId":"yeohhq"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":66,"author":{"gitId":"yeohhq"},"content":"        if (userInput.getText().equals(\"bye\")) {"},{"lineNumber":67,"author":{"gitId":"yeohhq"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":68,"author":{"gitId":"yeohhq"},"content":"                    DialogBox.getDukeDialog(duke.ui.goodbye(), dukeImage)"},{"lineNumber":69,"author":{"gitId":"yeohhq"},"content":"            );"},{"lineNumber":70,"author":{"gitId":"yeohhq"},"content":"            System.exit(0); // Closes GUI window."},{"lineNumber":71,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":73,"author":{"gitId":"yeohhq"},"content":"        userInput.clear();"},{"lineNumber":74,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":75}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import command.AddCommand;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"import command.BadCommand;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"import command.Command;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"import command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"import command.DoneCommand;"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"import command.EndCommand;"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"import command.FindCommand;"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"import command.ListCommand;"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"import command.TagCommand;"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"import task.Deadline;"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"import task.Event;"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"import task.Todo;"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    private Duke duke;"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    public Parser(Duke duke) {"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"        this.duke \u003d duke;"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"     * Parses the user input and returns a Command to be executed."},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"     * @param input String input from user."},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"     * @param tasks TaskList being used to handle tasks."},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"     * @return Command to be executed."},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException if user input is invalid or improperly formatted."},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"    public Command parse(String input, TaskList tasks) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"        String command;"},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"        String description \u003d null;"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"        assert input !\u003d null : \"Input is empty.\";"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"        if (input.contains(\" \")) {"},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"            command \u003d input.substring(0, input.indexOf(\" \"));"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"            description \u003d input.substring(input.indexOf(\" \") + 1);"},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"            command \u003d input;"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"        switch (command) {"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"        case \"list\":"},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"            return new ListCommand(tasks);"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"        case \"delete\":"},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"            try {"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"                int deleteTaskNo \u003d Integer.parseInt(description);"},{"lineNumber":52,"author":{"gitId":"yeohhq"},"content":"                return new DeleteCommand(tasks, deleteTaskNo);"},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"                throw new DukeException(\"Please include a task number after \u0027delete\u0027 command.\");"},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"        case \"done\":"},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"            if (description !\u003d null) {"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"                int doneTaskNo \u003d Integer.parseInt(description);"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":"                return new DoneCommand(tasks, doneTaskNo);"},{"lineNumber":60,"author":{"gitId":"yeohhq"},"content":"            } else {"},{"lineNumber":61,"author":{"gitId":"yeohhq"},"content":"                throw new DukeException(\"Please include a task number after \u0027done\u0027 command.\\n\");"},{"lineNumber":62,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"yeohhq"},"content":"        case \"todo\":"},{"lineNumber":64,"author":{"gitId":"yeohhq"},"content":"            if (description !\u003d null) {"},{"lineNumber":65,"author":{"gitId":"yeohhq"},"content":"                Todo newTodo \u003d new Todo(description);"},{"lineNumber":66,"author":{"gitId":"yeohhq"},"content":"                return new AddCommand(tasks, newTodo);"},{"lineNumber":67,"author":{"gitId":"yeohhq"},"content":"            } else {"},{"lineNumber":68,"author":{"gitId":"yeohhq"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\\n\");"},{"lineNumber":69,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"yeohhq"},"content":"        case \"deadline\":"},{"lineNumber":71,"author":{"gitId":"yeohhq"},"content":"            if (description !\u003d null) {"},{"lineNumber":72,"author":{"gitId":"yeohhq"},"content":"                assert description.contains(\"/by\") : \"Deadline must include \u0027/by\u0027.\";"},{"lineNumber":73,"author":{"gitId":"yeohhq"},"content":"                try {"},{"lineNumber":74,"author":{"gitId":"yeohhq"},"content":"                    LocalDate deadlineDate \u003d LocalDate.parse(description.substring(description.indexOf(\"/by\") + 4));"},{"lineNumber":75,"author":{"gitId":"yeohhq"},"content":"                    String deadlineDescription \u003d description.substring(0, description.indexOf(\"/by\") - 1);"},{"lineNumber":76,"author":{"gitId":"yeohhq"},"content":"                    Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineDate);"},{"lineNumber":77,"author":{"gitId":"yeohhq"},"content":"                    return new AddCommand(tasks, newDeadline);"},{"lineNumber":78,"author":{"gitId":"yeohhq"},"content":"                } catch (DateTimeParseException ex) {"},{"lineNumber":79,"author":{"gitId":"yeohhq"},"content":"                    throw new DukeException(\"Please indicate deadline date formatted as: /by YYYY-MM-DD.\");"},{"lineNumber":80,"author":{"gitId":"yeohhq"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"yeohhq"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"yeohhq"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\\n\");"},{"lineNumber":83,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"yeohhq"},"content":"        case \"event\":"},{"lineNumber":85,"author":{"gitId":"yeohhq"},"content":"            if (description !\u003d null) {"},{"lineNumber":86,"author":{"gitId":"yeohhq"},"content":"                assert description.contains(\"/at\") : \"Event must include \u0027/at\u0027.\";"},{"lineNumber":87,"author":{"gitId":"yeohhq"},"content":"                try {"},{"lineNumber":88,"author":{"gitId":"yeohhq"},"content":"                    String eventAt \u003d description.substring(description.indexOf(\"/at\") + 4);"},{"lineNumber":89,"author":{"gitId":"yeohhq"},"content":"                    String eventDescription \u003d description.substring(0, description.indexOf(\"/at\") - 1);"},{"lineNumber":90,"author":{"gitId":"yeohhq"},"content":"                    Event newEvent \u003d new Event(eventDescription, eventAt);"},{"lineNumber":91,"author":{"gitId":"yeohhq"},"content":"                    return new AddCommand(tasks, newEvent);"},{"lineNumber":92,"author":{"gitId":"yeohhq"},"content":"                } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":93,"author":{"gitId":"yeohhq"},"content":"                    throw new DukeException(\"Please indicate event details formatted as: /at ______ .\\n\");"},{"lineNumber":94,"author":{"gitId":"yeohhq"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"yeohhq"},"content":"            } else {"},{"lineNumber":96,"author":{"gitId":"yeohhq"},"content":"                throw new DukeException(\"The description of a event cannot be empty.\\n\");"},{"lineNumber":97,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"yeohhq"},"content":"        case \"bye\":"},{"lineNumber":99,"author":{"gitId":"yeohhq"},"content":"            return new EndCommand(tasks);"},{"lineNumber":100,"author":{"gitId":"yeohhq"},"content":"        case \"find\":"},{"lineNumber":101,"author":{"gitId":"yeohhq"},"content":"            assert description !\u003d null : \"Keyword for \u0027find\u0027 is empty.\";"},{"lineNumber":102,"author":{"gitId":"yeohhq"},"content":"            return new FindCommand(tasks, description);"},{"lineNumber":103,"author":{"gitId":"yeohhq"},"content":"        case \"tag\":"},{"lineNumber":104,"author":{"gitId":"yeohhq"},"content":"            assert description !\u003d null : \"Task number to tag cannot be empty.\";"},{"lineNumber":105,"author":{"gitId":"yeohhq"},"content":"            try {"},{"lineNumber":106,"author":{"gitId":"yeohhq"},"content":"                int tagTaskNo \u003d Integer.parseInt(description.substring(0, description.indexOf(\" \")));"},{"lineNumber":107,"author":{"gitId":"yeohhq"},"content":"                String tag \u003d description.substring(description.indexOf(\" \") + 1);"},{"lineNumber":108,"author":{"gitId":"yeohhq"},"content":"                return new TagCommand(tasks, tagTaskNo, tag);"},{"lineNumber":109,"author":{"gitId":"yeohhq"},"content":"            } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":110,"author":{"gitId":"yeohhq"},"content":"                throw new DukeException(\"Please indicate tag as: tag {taskNo} {tag}.\");"},{"lineNumber":111,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":113,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":114,"author":{"gitId":"yeohhq"},"content":"        default:"},{"lineNumber":115,"author":{"gitId":"yeohhq"},"content":"            return new BadCommand();"},{"lineNumber":116,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":118}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"import java.io.BufferedWriter;"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"import task.Deadline;"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"import task.Event;"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"import task.Task;"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"import task.Todo;"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    protected String filePath;"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     * Creates Storage object by loading tasks stored locally in filePath."},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"     * @param filePath File path to .txt file to load tasks stored locally."},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    public Storage(String filePath) {"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"        loadTasks(tasks);"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"     * Saves tasks stored in tasklist before program is terminated in a \u0027duke.txt\u0027 file."},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"     * @param tasks ArrayList of Tasks to be saved."},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"            // Creates a BufferedWriter"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath));"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"            // Write tasks as strings into file"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"                bufferedWriter.write(tasks.get(i).toString() + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"            // Closes the writer"},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"            bufferedWriter.close();"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"            e.printStackTrace();"},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"     * Loads tasks stored in \u0027duke.txt\u0027 when program is executed."},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"     * @param tasks ArrayList of Tasks to be loaded."},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"    public void loadTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":"        BufferedReader bufferedReader \u003d null;"},{"lineNumber":60,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":61,"author":{"gitId":"yeohhq"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"yeohhq"},"content":"            String currentLine \u003d null;"},{"lineNumber":63,"author":{"gitId":"yeohhq"},"content":"            FileReader file \u003d new FileReader(filePath);"},{"lineNumber":64,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":65,"author":{"gitId":"yeohhq"},"content":"            if (file.ready()) { // file exists to be read"},{"lineNumber":66,"author":{"gitId":"yeohhq"},"content":"                bufferedReader \u003d new BufferedReader(file);"},{"lineNumber":67,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":68,"author":{"gitId":"yeohhq"},"content":"                while ((currentLine \u003d bufferedReader.readLine()) !\u003d null) {"},{"lineNumber":69,"author":{"gitId":"yeohhq"},"content":"                    String taskType \u003d currentLine.substring(1, 2);"},{"lineNumber":70,"author":{"gitId":"yeohhq"},"content":"                    boolean isDone \u003d currentLine.contains(\"✗\") ? false : true;"},{"lineNumber":71,"author":{"gitId":"yeohhq"},"content":"                    String taskDescription \u003d currentLine.substring(currentLine.indexOf(\" \") + 1);"},{"lineNumber":72,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":73,"author":{"gitId":"yeohhq"},"content":"                    switch (taskType) {"},{"lineNumber":74,"author":{"gitId":"yeohhq"},"content":"                    case \"T\":"},{"lineNumber":75,"author":{"gitId":"yeohhq"},"content":"                        tasks.add(new Todo(taskDescription, isDone));"},{"lineNumber":76,"author":{"gitId":"yeohhq"},"content":"                        break;"},{"lineNumber":77,"author":{"gitId":"yeohhq"},"content":"                    case \"D\":"},{"lineNumber":78,"author":{"gitId":"yeohhq"},"content":"                        String deadlineDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(\") - 1);"},{"lineNumber":79,"author":{"gitId":"yeohhq"},"content":"                        String deadlineBy \u003d taskDescription.substring(taskDescription.indexOf(\"by:\") + 4,"},{"lineNumber":80,"author":{"gitId":"yeohhq"},"content":"                                taskDescription.indexOf(\")\"));"},{"lineNumber":81,"author":{"gitId":"yeohhq"},"content":"                        LocalDate deadline \u003d LocalDate.parse(deadlineBy,"},{"lineNumber":82,"author":{"gitId":"yeohhq"},"content":"                                DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":83,"author":{"gitId":"yeohhq"},"content":"                        tasks.add(new Deadline(deadlineDescription, deadline, isDone));"},{"lineNumber":84,"author":{"gitId":"yeohhq"},"content":"                        break;"},{"lineNumber":85,"author":{"gitId":"yeohhq"},"content":"                    case \"E\":"},{"lineNumber":86,"author":{"gitId":"yeohhq"},"content":"                        String eventDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(\") - 1);"},{"lineNumber":87,"author":{"gitId":"yeohhq"},"content":"                        String eventAt \u003d taskDescription.substring(taskDescription.indexOf(\"at:\") + 4,"},{"lineNumber":88,"author":{"gitId":"yeohhq"},"content":"                                taskDescription.indexOf(\")\"));"},{"lineNumber":89,"author":{"gitId":"yeohhq"},"content":"                        tasks.add(new Event(eventDescription, eventAt, isDone));"},{"lineNumber":90,"author":{"gitId":"yeohhq"},"content":"                        break;"},{"lineNumber":91,"author":{"gitId":"yeohhq"},"content":"                    default:"},{"lineNumber":92,"author":{"gitId":"yeohhq"},"content":"                        break;"},{"lineNumber":93,"author":{"gitId":"yeohhq"},"content":"                    }"},{"lineNumber":94,"author":{"gitId":"yeohhq"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"yeohhq"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":97,"author":{"gitId":"yeohhq"},"content":"            System.out.println(\"File not found, an empty duke.txt file has been created for you.\");"},{"lineNumber":98,"author":{"gitId":"yeohhq"},"content":"        } catch (IOException e) {"},{"lineNumber":99,"author":{"gitId":"yeohhq"},"content":"            e.printStackTrace();"},{"lineNumber":100,"author":{"gitId":"yeohhq"},"content":"        } finally {"},{"lineNumber":101,"author":{"gitId":"yeohhq"},"content":"            try {"},{"lineNumber":102,"author":{"gitId":"yeohhq"},"content":"                if (bufferedReader !\u003d null) {"},{"lineNumber":103,"author":{"gitId":"yeohhq"},"content":"                    bufferedReader.close();"},{"lineNumber":104,"author":{"gitId":"yeohhq"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"yeohhq"},"content":"            } catch (IOException ex) {"},{"lineNumber":106,"author":{"gitId":"yeohhq"},"content":"                ex.printStackTrace();"},{"lineNumber":107,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"yeohhq"},"content":"}"},{"lineNumber":111,"author":{"gitId":"yeohhq"},"content":""}],"authorContributionMap":{"yeohhq":111}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"    private Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"     * Greets user immediately when Duke is executed."},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"     * @return String to greet user."},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    public String greetings() {"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"        String greetings \u003d \"Ciao... *evil giggle*\\nI\u0027m your Dark Side...\\n\""},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"                + \"How may I serve you? \u003e:)\\n\";"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        return greetings;"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"     * Bids farewell to user when Duke is terminated with \u0027bye\u0027 command."},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"     * @return String to bid user goodbye."},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    public String goodbye() {"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"        // print goodbye message"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"        String goodbye \u003d \"Sayonara.\\n\";"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"        return goodbye;"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"     * Adds dashed lines to improve separation between user and Duke responses."},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"     * @return String to be displayed for response."},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"    public String formatResponse(String input) {"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"        return \"- - - - - - - - - - - - Dark Side: - - - - - - - - - - - -\\n\\n\""},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"                + input"},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"                + \"\\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\\n\";"},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":35}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public class AddCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected Task task;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     * Creates AddCommand object to execute adding of given task to TaskList."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * @param tasks TaskLists with Tasks."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * @param task Task to be added to tasks."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    public AddCommand(TaskList tasks, Task task) {"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        super(tasks);"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"        this.task \u003d task;"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"     * Adds task to list of tasks."},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     * @return String to inform user task has been added."},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    public String execute() {"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"        return this.tasks.addTask(this.task);"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"}"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":""}],"authorContributionMap":{"yeohhq":28}},{"path":"src/main/java/command/BadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"public class BadCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"     * Warns user of bad input and provides command list."},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"     * @return String to show command list."},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    public String execute() {"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"        return \"I\u0027m sorry, but I don\u0027t know what that means :(\\n\""},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"            + \"Here\u0027s the command list:\\n\""},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"            + \"1. list - show your current list of tasks\\n\""},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"            + \"2. todo - creates a to-do task\\n\""},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"            + \"3. event - creates an event task\\n\""},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"            + \"4. deadline - creates a deadline task\\n\""},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"            + \"5. done - marks task as done\\n\""},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"            + \"6. delete - deletes task from the list\\n\""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"            + \"7. find - finds tasks containing keyword\\n\""},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"            + \"8. tag - tags tasks with given tag\\n\";"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":23}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     * Creates Command object to be executed."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"    public Command() {"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        this.tasks \u003d null;"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"     * Creates Command object to be executed."},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"     * @param tasks TaskLists with Tasks to process through."},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    public Command(TaskList tasks) {"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"     * Executes the command."},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"     * @return String to be printed, if any."},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"    public String execute() throws DukeException {"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"        return null;"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":32}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected int taskNo;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     * Creates DeleteCommand object to execute deletion of given task number."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * @param tasks TaskLists with Tasks to process through."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * @param taskNo int to delete task number in tasks."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    public DeleteCommand(TaskList tasks, int taskNo) {"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        super(tasks);"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"     * Deletes task to list of tasks."},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     * @return String to inform user task has been deleted."},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    public String execute() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"        return this.tasks.deleteTask(taskNo);"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":28}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public class DoneCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected int taskNo;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     * Creates DoneCommand object to execute marking given task as completed."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * @param tasks TaskLists with Tasks to process through."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * @param taskNo int to mark task number in tasks as done."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    public DoneCommand(TaskList tasks, int taskNo) {"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        super(tasks);"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"     * Marks task as done in list of tasks."},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     * @return String to inform user task has been marked as done."},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    public String execute() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"        return this.tasks.markTaskDone(taskNo);"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":28}},{"path":"src/main/java/command/EndCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"public class EndCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    public EndCommand(TaskList tasks) {"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"        super(tasks);"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * Updates isExit boolean to true."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     * @return String \"exit\" to signal termination of program."},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    public String execute() {"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        return \"exit\";"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":19}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public class FindCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected String keyword;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     * Creates FindCommand object to execute finding tasks with given keyword."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * @param tasks TaskLists with Tasks to search through."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * @param keyword String to search Tasks that contains keyword."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    public FindCommand(TaskList tasks, String keyword) {"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        super(tasks);"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"     * Finds task with given keyword in list of tasks."},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     * @return String to inform user task of tasks that match keyword."},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    public String execute() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"        return this.tasks.findTask(keyword);"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":28}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"public class ListCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    public ListCommand(TaskList tasks) {"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"        super(tasks);"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * Lists tasks in list of tasks."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     * @return String that lists all tasks."},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    public String execute() {"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        return this.tasks.list();"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"}"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":""}],"authorContributionMap":{"yeohhq":20}},{"path":"src/main/java/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import task.TaskList;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public class TagCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected int taskNo;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"    protected String tag;"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * Creates TagCommand object to execute tagging task with given tag."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * @param tasks TaskLists with Tasks to process through."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     * @param taskNo int to mark task number in tasks as done."},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"     * @param tag String tag to tag Task."},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    public TagCommand(TaskList tasks, int taskNo, String tag) {"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        super(tasks);"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"        this.tag \u003d tag;"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     * Sets tag for task in list of tasks."},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"     * @return String to inform user task has been tagged."},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"    public String execute() throws DukeException {"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"        return this.tasks.tagTask(tag, taskNo);"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":31}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"    public DukeException(String message) {"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"        super(\"[!] OOPS!!! \" + message);"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":8}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected LocalDate by;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     * Creates Deadline object."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Deadline."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * @param by LocalDate to describe when Deadline occurs."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"     * Creates Event object."},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Deadline."},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"     * @param by LocalDate to describe when Deadline occurs."},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     * @param isDone Boolean to indicate completion status of Deadline."},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"        super(description, isDone);"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"        this.by \u003d by;"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"     * Creates Event object."},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Deadline."},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"     * @param by LocalDate to describe when Deadline occurs."},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"     * @param isDone Boolean to indicate completion status of Deadline."},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"     * @param tag String to tag Event."},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"    public Deadline(String description, LocalDate by, boolean isDone, String tag) {"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"        super(description, isDone, tag);"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"        this.by \u003d by;"},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"     * Returns description of this task and its completion status, with its deadline date."},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"     * @return String that describes task."},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":51}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"     * Creates Event object."},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Event."},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"     * @param at String to describe where/when Event occurs."},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    public Event(String description, String at) {"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        this.at \u003d at;"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"     * Creates Event object."},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Event."},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"     * @param at String to describe where/when Event occurs."},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"     * @param isDone Boolean to indicate completion status of Event."},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    public Event(String description, String at, boolean isDone) {"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"        super(description, isDone);"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"        this.at \u003d at;"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"     * Creates Event object."},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Event."},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"     * @param at String to describe where/when Event occurs."},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"     * @param isDone Boolean to indicate completion status of Event."},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"     * @param tag String to tag Event."},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"    public Event(String description, String at, boolean isDone, String tag) {"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"        super(description, isDone, tag);"},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"        this.at \u003d at;"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"     * Returns description of this task and its completion status, with its event date/location."},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"     * @return String that describes task."},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":47}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"    protected String tag;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"    protected boolean isTagged;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"     * Creates Task object."},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Task."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"        this.tag \u003d null;"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        this.isTagged \u003d false;"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"     * Creates Task object using overloaded contructor to indicate whether Task is completed.."},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Task."},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     * @param isDone Boolean to indicate completion status of Task."},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"        this.description \u003d description;"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"        this.isTagged \u003d false;"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"     * Creates Task object using overloaded contructor to indicate whether Task is completed.."},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":"     * @param description String description to describe Task."},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"     * @param isDone Boolean to indicate completion status of Task."},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"     * @param tag String tag to tag Task."},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"    public Task(String description, boolean isDone, String tag) {"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"        this.description \u003d description;"},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"        this.tag \u003d tag;"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"        this.isTagged \u003d true;"},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"     * Returns the completion status of the task."},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"     * @return Boolean of completion status."},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"    public String getStatusIcon() {"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"        // return tick or X symbols"},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2717\");"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"     * Marks this task as done/completed."},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"    public void markAsDone() {"},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"        this.isDone \u003d true;"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":60,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"yeohhq"},"content":"     * Sets given tag for this task."},{"lineNumber":62,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yeohhq"},"content":"    public void setTag(String tag) {"},{"lineNumber":64,"author":{"gitId":"yeohhq"},"content":"        this.tag \u003d tag;"},{"lineNumber":65,"author":{"gitId":"yeohhq"},"content":"        this.isTagged \u003d true;"},{"lineNumber":66,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":68,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"yeohhq"},"content":"     * Returns description of this task and its completion status."},{"lineNumber":70,"author":{"gitId":"yeohhq"},"content":"     * @return String that describes task."},{"lineNumber":71,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"yeohhq"},"content":"    public String toString() {"},{"lineNumber":74,"author":{"gitId":"yeohhq"},"content":"        if (isTagged) {"},{"lineNumber":75,"author":{"gitId":"yeohhq"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + \"[\" + this.tag + \"] \" + this.description;"},{"lineNumber":76,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"yeohhq"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":78,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":80}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"    public ArrayList\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"     * Creates TaskList object that stores tasks."},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"     * @param tasks ArrayList\u003cTask\u003e\u003c/Task\u003e to be loaded when Duke is run."},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        if (tasks \u003d\u003d null) {"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"            this.tasks \u003d tasks;"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"     * Creates string to print the tasks in the list."},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"     * @return str String to be returned."},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"    public String list() {"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":"        String str \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"            str +\u003d i + \".\" + tasks.get(i - 1).toString() + \u0027\\n\u0027;"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"        return str;"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"     * Adds the tasks to the tasklist."},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"     * @param task Task to be added."},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":"     * @return str String to be returned."},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"    public String addTask(Task task) {"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"        assert this.tasks !\u003d null : \"TaskList has not been initiated properly with ArrayList\u003cTasks\u003e.\";"},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"        this.tasks.add(task);"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"        // inform user item has been added"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"        String str \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":"            + task.toString() + \"\\n\""},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"            + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"        return str;"},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":50,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yeohhq"},"content":"     * Deletes the tasks from the tasklist."},{"lineNumber":52,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"yeohhq"},"content":"     * @param taskNo Task number to be deleted."},{"lineNumber":54,"author":{"gitId":"yeohhq"},"content":"     * @return str String to be returned."},{"lineNumber":55,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"yeohhq"},"content":"    public String deleteTask(int taskNo) throws DukeException {"},{"lineNumber":57,"author":{"gitId":"yeohhq"},"content":"        // verify task number exists, then delete"},{"lineNumber":58,"author":{"gitId":"yeohhq"},"content":"        assert taskNo - 1 \u003c tasks.size() : \"Task number to delete does not exist.\";"},{"lineNumber":59,"author":{"gitId":"yeohhq"},"content":"        if (taskNo - 1 \u003c tasks.size()) {"},{"lineNumber":60,"author":{"gitId":"yeohhq"},"content":"            Task toDelete \u003d tasks.get(taskNo - 1);"},{"lineNumber":61,"author":{"gitId":"yeohhq"},"content":"            tasks.remove(taskNo - 1);"},{"lineNumber":62,"author":{"gitId":"yeohhq"},"content":"            String str \u003d \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":63,"author":{"gitId":"yeohhq"},"content":"                + toDelete.toString() + \"\\n\""},{"lineNumber":64,"author":{"gitId":"yeohhq"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":65,"author":{"gitId":"yeohhq"},"content":"            return str;"},{"lineNumber":66,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"yeohhq"},"content":"            // task number does not exist"},{"lineNumber":68,"author":{"gitId":"yeohhq"},"content":"            throw new DukeException(\"Sorry, this task does not exist!\\n\");"},{"lineNumber":69,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":72,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"yeohhq"},"content":"     * Marks the tasks as completed in the tasklist."},{"lineNumber":74,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"yeohhq"},"content":"     * @param taskNo Task number to be marked as done."},{"lineNumber":76,"author":{"gitId":"yeohhq"},"content":"     * @return str String to be returned."},{"lineNumber":77,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"yeohhq"},"content":"    public String markTaskDone(int taskNo) throws DukeException {"},{"lineNumber":79,"author":{"gitId":"yeohhq"},"content":"        // verify task number exists, then mark as done"},{"lineNumber":80,"author":{"gitId":"yeohhq"},"content":"        assert taskNo - 1 \u003c tasks.size() : \"Task number to mark as done does not exist.\";"},{"lineNumber":81,"author":{"gitId":"yeohhq"},"content":"        if (taskNo - 1 \u003c tasks.size()) {"},{"lineNumber":82,"author":{"gitId":"yeohhq"},"content":"            if (tasks.get(taskNo - 1).isDone) {"},{"lineNumber":83,"author":{"gitId":"yeohhq"},"content":"                // task marked as done already"},{"lineNumber":84,"author":{"gitId":"yeohhq"},"content":"                throw new DukeException(\"Task is already done! :)\\n\");"},{"lineNumber":85,"author":{"gitId":"yeohhq"},"content":"            } else {"},{"lineNumber":86,"author":{"gitId":"yeohhq"},"content":"                tasks.get(taskNo - 1).markAsDone();"},{"lineNumber":87,"author":{"gitId":"yeohhq"},"content":"                String str \u003d \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":88,"author":{"gitId":"yeohhq"},"content":"                    + tasks.get(taskNo - 1).toString();"},{"lineNumber":89,"author":{"gitId":"yeohhq"},"content":"                return str;"},{"lineNumber":90,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"yeohhq"},"content":"            // task number does not exist"},{"lineNumber":93,"author":{"gitId":"yeohhq"},"content":"            throw new DukeException(\"Sorry, this task does not exist!\\n\");"},{"lineNumber":94,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":97,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"yeohhq"},"content":"     * Finds tasks with given keyword and prints them."},{"lineNumber":99,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"yeohhq"},"content":"     * @param keyword String that user wants to find task with."},{"lineNumber":101,"author":{"gitId":"yeohhq"},"content":"     * @return str String to be returned."},{"lineNumber":102,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException if keyword is empty."},{"lineNumber":103,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"yeohhq"},"content":"    public String findTask(String keyword) throws DukeException {"},{"lineNumber":105,"author":{"gitId":"yeohhq"},"content":"        assert keyword !\u003d null : \"Keyword is empty.\";"},{"lineNumber":106,"author":{"gitId":"yeohhq"},"content":"        if (keyword \u003d\u003d null) {"},{"lineNumber":107,"author":{"gitId":"yeohhq"},"content":"            throw new DukeException(\"Please indicate the keyword you wish to use to find tasks with.\");"},{"lineNumber":108,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":109,"author":{"gitId":"yeohhq"},"content":"            String str \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":110,"author":{"gitId":"yeohhq"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":111,"author":{"gitId":"yeohhq"},"content":"                Task task \u003d tasks.get(i);"},{"lineNumber":112,"author":{"gitId":"yeohhq"},"content":"                boolean isFound \u003d task.description.contains(keyword);"},{"lineNumber":113,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":114,"author":{"gitId":"yeohhq"},"content":"                if (isFound) {"},{"lineNumber":115,"author":{"gitId":"yeohhq"},"content":"                    str +\u003d (i + 1) + \".\" + task.toString() + \"\\n\";"},{"lineNumber":116,"author":{"gitId":"yeohhq"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"yeohhq"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"yeohhq"},"content":"            return str;"},{"lineNumber":119,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":122,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"yeohhq"},"content":"     * Tags tasks with given tag."},{"lineNumber":124,"author":{"gitId":"yeohhq"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"yeohhq"},"content":"     * @param tag String that user wants to tag task with"},{"lineNumber":126,"author":{"gitId":"yeohhq"},"content":"     * @param taskNo Task number to be tagged."},{"lineNumber":127,"author":{"gitId":"yeohhq"},"content":"     * @return str String to be returned."},{"lineNumber":128,"author":{"gitId":"yeohhq"},"content":"     * @throws DukeException if tag is empty, or task does not exists."},{"lineNumber":129,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"yeohhq"},"content":"    public String tagTask(String tag, int taskNo) throws DukeException {"},{"lineNumber":131,"author":{"gitId":"yeohhq"},"content":"        assert tag !\u003d null : \"Tag is empty.\";"},{"lineNumber":132,"author":{"gitId":"yeohhq"},"content":"        assert taskNo - 1 \u003c tasks.size() : \"Task number to tag does not exist.\";"},{"lineNumber":133,"author":{"gitId":"yeohhq"},"content":"        if (tag \u003d\u003d null) {"},{"lineNumber":134,"author":{"gitId":"yeohhq"},"content":"            throw new DukeException(\"Please indicate the tag you wish to use to tag tasks with.\");"},{"lineNumber":135,"author":{"gitId":"yeohhq"},"content":"        } else {"},{"lineNumber":136,"author":{"gitId":"yeohhq"},"content":"            tasks.get(taskNo - 1).setTag(tag);"},{"lineNumber":137,"author":{"gitId":"yeohhq"},"content":"            String str \u003d \"Got it, I\u0027ve tagged this task for you:\\n\";"},{"lineNumber":138,"author":{"gitId":"yeohhq"},"content":"            str +\u003d tasks.get(taskNo - 1).toString();"},{"lineNumber":139,"author":{"gitId":"yeohhq"},"content":"            return str;"},{"lineNumber":140,"author":{"gitId":"yeohhq"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":142}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"        super(description, isDone);"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"    public Todo(String description, boolean isDone, String tag) {"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        super(description, isDone, tag);"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"     * Returns description of this task and its completion status."},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"     * @return String that describes task."},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.control.Separator?\u003e"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.shape.Box?\u003e"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"        \u003cLabel fx:id\u003d\"dialog\" textFill\u003d\"#44ff00\" style\u003d\"-fx-padding: 0 20 0 20; -fx-border-color: #44ff00; -fx-border-radius: 20\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"80\"/\u003e"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        \u003cSeparator minWidth\u003d\"10\" style\u003d\"-fx-opacity: 0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" style\u003d\"-fx-padding: 0 10 0 10\" fitHeight\u003d\"150.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"yeohhq":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"653.0\" prefWidth\u003d\"464.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"        \u003cTextField fx:id\u003d\"userInput\" style\u003d\"-fx-background-color: black; -fx-prompt-text-fill:  #44ff00; -fx-text-fill: #44ff00;\" alignment\u003d\"TOP_LEFT\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"464.0\" promptText\u003d\"Enter command:\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"            \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"26.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"            \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" style\u003d\"-fx-background-color: black; -fx-prompt-text-fill:  #44ff00;\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-1.0\" prefHeight\u003d\"604.0\" prefWidth\u003d\"464.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" style\u003d\"-fx-background-color: black;-fx-text-fill: #44ff00; -fx-prompt-text-fill:  #44ff00;\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"600.0\" prefWidth\u003d\"464.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"yeohhq":23}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"import command.Command;"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"import exceptions.DukeException;"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"import task.Task;"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"public class DukeTest {"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"    public void toDoTest() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"        Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"        Command command \u003d parser.parse(\"todo Project\", duke.taskList);"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"        command.execute();"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"        Task taskAdded \u003d duke.taskList.tasks.get(0);"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"        assertEquals(taskAdded.toString(), \"[T][✗] Project\");"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"    public void deadlineTest() throws DukeException {"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"        Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":24,"author":{"gitId":"yeohhq"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":25,"author":{"gitId":"yeohhq"},"content":"        Command command \u003d parser.parse(\"deadline Project Research /by 2020-09-01\", duke.taskList);"},{"lineNumber":26,"author":{"gitId":"yeohhq"},"content":"        command.execute();"},{"lineNumber":27,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":28,"author":{"gitId":"yeohhq"},"content":"        Task taskAdded \u003d duke.taskList.tasks.get(0);"},{"lineNumber":29,"author":{"gitId":"yeohhq"},"content":"        assertEquals(taskAdded.toString(), \"[D][✗] Project Research (by: Sep 01 2020)\");"},{"lineNumber":30,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":31,"author":{"gitId":"yeohhq"},"content":"        command \u003d parser.parse(\"done 1\", duke.taskList);"},{"lineNumber":32,"author":{"gitId":"yeohhq"},"content":"        command.execute();"},{"lineNumber":33,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":34,"author":{"gitId":"yeohhq"},"content":"        Task taskDone \u003d duke.taskList.tasks.get(0);"},{"lineNumber":35,"author":{"gitId":"yeohhq"},"content":"        assertEquals(taskDone.toString(), \"[D][✓] Project Research (by: Sep 01 2020)\");"},{"lineNumber":36,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":37,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":39,"author":{"gitId":"yeohhq"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"yeohhq"},"content":"    public void eventTest() throws DukeException {"},{"lineNumber":41,"author":{"gitId":"yeohhq"},"content":"        Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":42,"author":{"gitId":"yeohhq"},"content":"        Parser parser \u003d new Parser(duke);"},{"lineNumber":43,"author":{"gitId":"yeohhq"},"content":"        Command command1 \u003d parser.parse(\"event Project Meeting /at Zoom\", duke.taskList);"},{"lineNumber":44,"author":{"gitId":"yeohhq"},"content":"        command1.execute();"},{"lineNumber":45,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":46,"author":{"gitId":"yeohhq"},"content":"        Task taskAdded \u003d duke.taskList.tasks.get(0);"},{"lineNumber":47,"author":{"gitId":"yeohhq"},"content":"        assertEquals(taskAdded.toString(), \"[E][✗] Project Meeting (at: Zoom)\");"},{"lineNumber":48,"author":{"gitId":"yeohhq"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yeohhq"},"content":"}"}],"authorContributionMap":{"yeohhq":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeohhq"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"yeohhq"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"yeohhq"},"content":"event"},{"lineNumber":4,"author":{"gitId":"yeohhq"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"yeohhq"},"content":"todoo"},{"lineNumber":6,"author":{"gitId":"yeohhq"},"content":"event aa"},{"lineNumber":7,"author":{"gitId":"yeohhq"},"content":"deadline aa"},{"lineNumber":8,"author":{"gitId":"yeohhq"},"content":"todo read book"},{"lineNumber":9,"author":{"gitId":"yeohhq"},"content":"deadline return book /by June 6th"},{"lineNumber":10,"author":{"gitId":"yeohhq"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":11,"author":{"gitId":"yeohhq"},"content":"todo join sports club"},{"lineNumber":12,"author":{"gitId":"yeohhq"},"content":"todo borrow book"},{"lineNumber":13,"author":{"gitId":"yeohhq"},"content":"deadline return book /by Sunday"},{"lineNumber":14,"author":{"gitId":"yeohhq"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"list"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":"done 2"},{"lineNumber":17,"author":{"gitId":"yeohhq"},"content":"done 4"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"done 6"},{"lineNumber":19,"author":{"gitId":"yeohhq"},"content":"done 8"},{"lineNumber":20,"author":{"gitId":"yeohhq"},"content":"delete 2"},{"lineNumber":21,"author":{"gitId":"yeohhq"},"content":"delete 8"},{"lineNumber":22,"author":{"gitId":"yeohhq"},"content":"list"},{"lineNumber":23,"author":{"gitId":"yeohhq"},"content":"bye"}],"authorContributionMap":{"yeohhq":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"yeohhq"},"content":"export LC_ALL\u003den_GB.UTF-8"},{"lineNumber":16,"author":{"gitId":"yeohhq"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":18,"author":{"gitId":"yeohhq"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"yeohhq":3,"-":37}}]
