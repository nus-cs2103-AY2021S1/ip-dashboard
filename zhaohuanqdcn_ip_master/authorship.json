[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "   Hello! This is Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "   What can I do for you?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 3,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "compileJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "compileTestJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "javadoc.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 5,
      "-": 44
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String line;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Command(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.line \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if the command is an \"exit\" command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return exit or not"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return Parser.isExit(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (Parser.isList(line)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                TaskList.printList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.fileError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isDone(line)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                int index \u003d Integer.parseInt(line.substring(5));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                TaskList.setDone(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.fileError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.commandError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isFind(line)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                String word \u003d line.substring(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                TaskList.findTask(word);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.fileError();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.commandError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (Parser.isDelete(line)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                int index \u003d Integer.parseInt(line.substring(7));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                TaskList.delete(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.fileError();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.commandError();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                TaskType type \u003d Parser.taskType(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    TaskList.add(type, Parser.getName(line));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    TaskList.add(type, Parser.getName(line), Parser.getTime(line));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (NullPointerException"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    | ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    | InvalidParameterException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.commandError();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.fileError();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.line;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 83
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Runs the Duke chat bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Responses constantly until exit until command is received."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static void response() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        boolean exit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        while (!exit) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (line.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Command command \u003d new Command(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (command.isExit()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.exit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                exit \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        response();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 32,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is a \"list\" command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return list or not"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isList(String line) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.equals(\"list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is an \"exit\" command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return exit or not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isExit(String line) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.toLowerCase().contains(\"bye\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is a \"done\" command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return done or not"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isDone(String line) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 4 \u0026\u0026 line.substring(0, 4).equals(\"done\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Checks if a command line is a \"delete\" command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return delete or not"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isDelete(String line) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 6 \u0026\u0026 line.substring(0, 6).equals(\"delete\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isFind(String line) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 4 \u0026\u0026 line.substring(0, 4).equals(\"find\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Extracts task type from a given \"add\" command line"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return task type"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if line is invalid"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static TaskType taskType(String line) throws InvalidParameterException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (line.length() \u003e 8"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.substring(0, 8).equals(\"deadline\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.contains(\" /by \")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (line.length() \u003e 5"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.substring(0, 5).equals(\"event\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.contains(\" /at \")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.EVENT;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else if (line.length() \u003e 4 \u0026\u0026 line.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.TODO;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else throw new InvalidParameterException(\"Invalid input\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Extracts task name from a given \"add\" command line"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if line is invalid"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws NullPointerException      if task name is empty"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String getName(String line) throws NullPointerException, InvalidParameterException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskType(line) \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                name \u003d line.substring(5);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else if (taskType(line) \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                name \u003d line.split(\" /by \")[0].substring(9);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                name \u003d line.split(\" /at \")[0].substring(6);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (InvalidParameterException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Invalid parameters\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new NullPointerException(\"Null Object\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else return name;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Extracts task time from an \"add\" command line of type \"deadline\" or \"event\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param line string of a command"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return time of the task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException if the time does not exist"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String getTime(String line) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskType(line) \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return line.split(\" /by \")[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return line.split(\" /at \")[1];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 119
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final static String filePath \u003d \"list.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Converts parameters of a task into a string representation used in storage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type task type"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param done whether the task is done (0 for undone, 1 for done)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param name task name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param time task time (empty string if not applicable)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return a string representation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static String convertToText(TaskType type, int done, String name, String time) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String t \u003d type \u003d\u003d TaskType.DEADLINE ? \"D\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                : type \u003d\u003d TaskType.EVENT ? \"E\" : \"T\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return t + \",\" + done + \",\" + name"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                + (time.isEmpty() ? \"\" : \",\" + time) + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Converts from a string representation to a task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param text string representation"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return represented task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws Exception if text is invalid"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static Task convertFromText(String text) throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            String[] ans \u003d text.split(\",\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (ans[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Todo todo \u003d new Todo(ans[2]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (ans[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    todo.setDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return todo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else if (ans[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Deadline deadline \u003d new Deadline(ans[2], ans[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (ans[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    deadline.setDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Event event \u003d new Event(ans[2], ans[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (ans[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    event.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Creates a storage file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void createListFile() throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Adds parameters of a task to the storage file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type task type"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param done whether the task is done (0 for undone, 1 for done)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param name task name"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param time task time (empty string if not applicable)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void addToList(TaskType type, int done, String name, String time) throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                createListFile();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.write(convertToText(type, done, name, time));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Reloads the stored task list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return stored list of task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static List\u003cTask\u003e readList() throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                createListFile();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return list;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    Task task \u003d convertFromText(s.nextLine());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                s.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return list;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Updates the task of a given index to \"done\" in the storage file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void setDone(int index) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                String text \u003d s.nextLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (count \u003d\u003d index) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    text \u003d text.replaceFirst(\"0\", \"1\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                content.append(text).append(System.lineSeparator());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.write(content.toString());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Deletes the task of a given index in the storage file"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void delete(int index) throws IOException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                String text \u003d s.nextLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (count !\u003d index) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    content.append(text).append(System.lineSeparator());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.write(content.toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 183
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Creates a task and adds it to the task list: todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type     task type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param taskName task name"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void add(TaskType type, String taskName) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                reloadList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Todo todo \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Storage.addToList(TaskType.TODO, 0, taskName, \"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Ui.userMessage(\"Got it. I\u0027ve added the task:\\n\" + todo.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Ui.userMessage(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Creates a task and adds it to the task list: deadline or event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param type     task type"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param taskName task name"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param time     time of the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void add(TaskType type, String taskName, String time) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                reloadList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskName, time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Storage.addToList(TaskType.DEADLINE, 0, taskName, time);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.userMessage(\"Got it. I\u0027ve added the task:\\n\" + deadline.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Event event \u003d new Event(taskName, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Storage.addToList(TaskType.EVENT, 0, taskName, time);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.userMessage(\"Got it. I\u0027ve added the task:\\n\" + event.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Ui.userMessage(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new IOException(\"File access failed\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void reloadList() throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList \u003d Storage.readList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void findTask(String word) throws IOException, InvalidParameterException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (word.isBlank()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Invalid input\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        int n \u003d taskList.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (n \u003d\u003d 0) { // empty or uninitialized"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            reloadList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            n \u003d taskList.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (n \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                Ui.userMessage(\"There is no task in the list :)\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d n; i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            String task \u003d taskList.get(i - 1).toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (task.contains(word)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                sb.append(\"\\n\").append(count).append(\". \").append(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Ui.userMessage(\"There is no match in the list :(\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Ui.userMessage(sb.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Updates the task of a given index to \"done\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if index is out of bound for task list"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException               if error occurs in file accessing"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void setDone(int index) throws InvalidParameterException, IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            reloadList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (index \u003e taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Out of bound\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Storage.setDone(index - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList.get(index - 1).setDone();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Ui.userMessage(\"Well done! I\u0027ve marked this as done:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Ui.userMessage(taskList.get(index - 1).toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Deletes the task of a given index"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param index index of task to be updated"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws InvalidParameterException if index is out of bound for task list"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException               if error occurs in file accessing"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void delete(int index) throws InvalidParameterException, IOException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            reloadList();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (index \u003e taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Out of bound\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Storage.delete(index - 1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Ui.userMessage(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Ui.userMessage(taskList.get(index - 1).toString());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Ui.userMessage(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Prints out the task list"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @throws IOException if error occurs in file accessing"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void printList() throws IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            int n \u003d taskList.size();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (n \u003d\u003d 0) { // empty or uninitialized"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                reloadList();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                n \u003d taskList.size();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (n \u003d\u003d 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    Ui.userMessage(\"There is no task in the list :)\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d n; i++) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                sb.append(i).append(\". \").append(taskList.get(i - 1).toString());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                if (i !\u003d n) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Ui.userMessage(sb.toString());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Ui.fileError();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 181
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static final String logo \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                      \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Shows the welcome message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        // System.out.println(logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Hello! This is Duke.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Shows the exit message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Bye. Duke is always there for you!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        // System.out.println(logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void commandError() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Sorry, I do not know what that means :(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void fileError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Oops! Something went wrong :(\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Shows a given message to the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param msg message to show"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void userMessage(String msg) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 43
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import utility.DateParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String ddl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private LocalDate date \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Deadline(String name, String ddl) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.ddl \u003d ddl;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d LocalDate.parse(ddl);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[D][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String time \u003d date \u003d\u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                ? String.format(\" (by: %s)\", ddl)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                : \" (by: \" + DateParser.format(date) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName() + time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 30
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import utility.DateParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private LocalDate date \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Event(String name, String eventTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d LocalDate.parse(eventTime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[E][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String time \u003d date \u003d\u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                ? String.format(\" (at: %s)\", eventTime)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                : \" (at: \" + DateParser.format(date) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName() + time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 29
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Gets name of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Sets the task to be done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.getName();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 32
    }
  },
  {
    "path": "src/main/java/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 7
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[T][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 16
    }
  },
  {
    "path": "src/main/java/utility/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * Converts a date from \"yyyy-MM-dd\" to \"Month dd yyyy\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @param date original date representation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     * @return new date representation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String format(LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return date.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                + date.getDayOfMonth() + \" \" + date.getYear();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 16
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String ddl \u003d \"deadline d /by Monday\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String event \u003d \"event e /at 5pm\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private final String todo \u003d \"todo t\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void taskType_validCommand_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(TaskType.DEADLINE, Parser.taskType(ddl));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(TaskType.EVENT, Parser.taskType(event));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(TaskType.TODO, Parser.taskType(todo));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void taskType_missingKeyword_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            assertEquals(TaskType.DEADLINE, Parser.taskType(\"deadline b Monday\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        } catch (InvalidParameterException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            assertEquals(\"Invalid input\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void getName_validCommand_success() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"d\", Parser.getName(ddl));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"e\", Parser.getName(event));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"t\", Parser.getName(todo));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void getTime_validCommand_success() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"Monday\", Parser.getTime(ddl));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"5pm\", Parser.getTime(event));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 47
    }
  },
  {
    "path": "src/test/java/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Event event \u003d new Event(\"e\", \"time\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Deadline ddl \u003d new Deadline(\"d\", \"time\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Todo todo \u003d new Todo(\"t\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void toString_undoneEvent_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[E][✗] e (at: time)\", event.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[D][✗] d (by: time)\", ddl.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[T][✗] t\", todo.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void toString_doneEvent_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        event.setDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        ddl.setDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        todo.setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[E][✓] e (at: time)\", event.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[D][✓] d (by: time)\", ddl.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        assertEquals(\"[T][✓] t\", todo.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "event borrow book /at 2020-12-31"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "find project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin -encoding UTF-8 ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 4,
      "-": 19
    }
  }
]
