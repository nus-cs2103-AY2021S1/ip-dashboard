[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 2,
      "-": 24
    }
  },
  {
    "path": "src/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.EmptyDeadlineException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is adding a \u003ccode\u003eDeadline\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * A \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public AddDeadlineCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Adds the \u003ccode\u003eDeadline\u003c/code\u003e to \u003ccode\u003etasks\u003c/code\u003e and save the \u003ccode\u003eDeadline\u003c/code\u003e to"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003estorage\u003c/code\u003e."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If failed to save to \u003ccode\u003estorage\u003c/code\u003e, no description provided in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003esplitCommand\u003c/code\u003e, or invalid date and time format (the date and time are"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * located inside the command argument)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String argument \u003d splitCommand[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String description \u003d argument.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String deadline \u003d argument.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            Task toAdd \u003d new Deadline(description, LocalDateTime.parse(deadline,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayAddedTask(toAdd, tasks.size());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // No description"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new EmptyDeadlineException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.say(\"The date and time format must be: [dd/MM/yyyy HHmm]\\nFor example, 02/12/2019 1800\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof AddDeadlineCommand) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            AddDeadlineCommand other \u003d (AddDeadlineCommand) o;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 81
    }
  },
  {
    "path": "src/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.EmptyEventException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is adding an \u003ccode\u003eEvent\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eAddEventCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public AddEventCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Adds the \u003ccode\u003eEvent\u003c/code\u003e to \u003ccode\u003etasks\u003c/code\u003e and save the \u003ccode\u003eEvent\u003c/code\u003e to"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003estorage\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If failed to save to \u003ccode\u003estorage\u003c/code\u003e, no description provided in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003esplitCommand\u003c/code\u003e, or invalid date and time format (the date and time are"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * located inside the command argument)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String argument \u003d splitCommand[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String description \u003d argument.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String deadline \u003d argument.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            Task toAdd \u003d new Event(description, LocalDateTime.parse(deadline,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayAddedTask(toAdd, tasks.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // No description"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new EmptyEventException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.say(\"The date and time format must be: [dd/MM/yyyy HHmm]\\nFor example, 02/12/2019 1800\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof AddEventCommand) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            AddEventCommand other \u003d (AddEventCommand) o;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 79
    }
  },
  {
    "path": "src/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.EmptyTodoException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is adding a \u003ccode\u003eToDo\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eAddToDoCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public AddToDoCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Adds the \u003ccode\u003eToDo\u003c/code\u003e to \u003ccode\u003etasks\u003c/code\u003e and save the \u003ccode\u003eToDo\u003c/code\u003e to"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003estorage\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If failed to save to \u003ccode\u003estorage\u003c/code\u003e or no description provided in"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003esplitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String description \u003d splitCommand[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            Task toAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayAddedTask(toAdd, tasks.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // No description"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new EmptyTodoException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof AddToDoCommand) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            AddToDoCommand other \u003d (AddToDoCommand) o;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 72
    }
  },
  {
    "path": "src/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a Command. A \u003ccode\u003eCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    protected String[] splitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Command(String[] splitCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Executes the \u003ccode\u003eCommand\u003c/code\u003e object, in which the execution is based on the type of the \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If the \u003ccode\u003esplitCommand\u003c/code\u003e is not compatible with the execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns whether the \u003ccode\u003eCommand\u003c/code\u003e object indicates exiting the Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the \u003ccode\u003eCommand\u003c/code\u003e object indicates exiting the Duke, \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * otherwise."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 38
    }
  },
  {
    "path": "src/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.EmptyDeleteException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.NoSuchTaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is deleting a \u003ccode\u003eTask\u003c/code\u003e from the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eDeleteCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public DeleteCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Deletes the \u003ccode\u003eTask\u003c/code\u003e from \u003ccode\u003etasks\u003c/code\u003e and \u003ccode\u003estorage\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If failed to save to \u003ccode\u003estorage\u003c/code\u003e, no command argument provided in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003esplitCommand\u003c/code\u003e, or invalid command argument."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String oneBasedIndex \u003d splitCommand[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            int zeroBasedIndex \u003d Integer.parseInt(oneBasedIndex) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            Task toDelete \u003d tasks.remove(zeroBasedIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayDeletedTask(toDelete, tasks.size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // No description"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new EmptyDeleteException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (NoSuchTaskException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            DeleteCommand other \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 73
    }
  },
  {
    "path": "src/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is exiting the \u003ccode\u003eDuke\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eExitCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public ExitCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Uses the \u003ccode\u003eui\u003c/code\u003e to display exiting message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns true to indicate to exit the Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof ExitCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ExitCommand other \u003d (ExitCommand) o;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 52
    }
  },
  {
    "path": "src/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.EmptyFindException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is finding the tasks containing the keyword"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * and using the Ui to display the those tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eFindCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public FindCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Finds the tasks containing the keyword and uses the \u003ccode\u003eui\u003c/code\u003e to display those tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If no keyword is provided in \u003ccode\u003esplitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String keyword \u003d splitCommand[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            for (Task task : tasks.all()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    ui.say(index + \". \" + task.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // No keyword"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new EmptyFindException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            DeleteCommand other \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 67
    }
  },
  {
    "path": "src/command/MarkDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.EmptyDoneException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.NoSuchTaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is marking a \u003ccode\u003eTask\u003c/code\u003e as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eMarkDoneCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class MarkDoneCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public MarkDoneCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Marks the \u003ccode\u003eTask\u003c/code\u003e as done and save the changes to \u003ccode\u003etasks\u003c/code\u003e and \u003ccode\u003estorage\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If failed to save to \u003ccode\u003estorage\u003c/code\u003e, no command argument provided in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * \u003ccode\u003esplitCommand\u003c/code\u003e, or invalid task index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            String oneBasedIndex \u003d splitCommand[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            int zeroBasedIndex \u003d Integer.parseInt(oneBasedIndex) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            Task toMark \u003d tasks.get(zeroBasedIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            toMark.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayMarkedTask(toMark);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // No description"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new EmptyDoneException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (NoSuchTaskException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof MarkDoneCommand) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            MarkDoneCommand other \u003d (MarkDoneCommand) o;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 74
    }
  },
  {
    "path": "src/command/TaskListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is displaying all of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eTaskListCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class TaskListCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public TaskListCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Uses the \u003ccode\u003eui\u003c/code\u003e to display all \u003ccode\u003eTask\u003c/code\u003e in \u003ccode\u003etasks\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ui.displayTasks(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof TaskListCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            TaskListCommand other \u003d (TaskListCommand) o;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 52
    }
  },
  {
    "path": "src/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e whose task is throwing an exception stating that the command is not defined."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * The \u003ccode\u003eUnknownCommand\u003c/code\u003e object contains an array of \u003ccode\u003eString\u003c/code\u003e which is an array"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * containing a command and the argument of the command (if any)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public UnknownCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(splitCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Throws an exception stating that the command is not defined."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param tasks  Task list of the Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param ui Ui of the Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param storage Storage of the Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException In all cases to state that the command is not defined."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        throw new UnknownCommandException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns false to indicate not to exit the Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else if (o instanceof UnknownCommand) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            UnknownCommand other \u003d (UnknownCommand) o;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return Arrays.equals(other.splitCommand, this.splitCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 54
    }
  },
  {
    "path": "src/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.NoSuchTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eDuke\u003c/code\u003e object which is a ChatBot that can keep track of several kinds of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final String DATA_DIRECTORY \u003d \"data\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final String SAVED_FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        storage \u003d new Storage(DATA_DIRECTORY, SAVED_FILE_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            tasks \u003d new TaskList(storage.loadSavedFile());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            ui.sayException(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Runs the \u003ccode\u003eDuke\u003c/code\u003e object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ui.hello();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                ui.showLine(); // show the divider line (\"------\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                ui.sayException(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 55,
      "-": 2
    }
  },
  {
    "path": "src/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.MarkDoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.TaskListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.UnknownCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eParser\u003c/code\u003e object that deals with making sense of the user command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_MARK_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_DISPLAY_TASKS \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_ADD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_ADD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_ADD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_DELETE_TASK \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private final static String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns the appropriate \u003ccode\u003eCommand\u003c/code\u003e object according to the \u003ccode\u003efullCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return the appropriate \u003ccode\u003eCommand\u003c/code\u003e object according to the \u003ccode\u003efullCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        switch (splitCommand[0]) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_MARK_DONE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new MarkDoneCommand(splitCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_ADD_TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new AddToDoCommand(splitCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_ADD_DEADLINE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new AddDeadlineCommand(splitCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_ADD_EVENT:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new AddEventCommand(splitCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_DELETE_TASK:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new DeleteCommand(splitCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_DISPLAY_TASKS:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new TaskListCommand(splitCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_EXIT:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new ExitCommand(splitCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new FindCommand(splitCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return new UnknownCommand(splitCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 55
    }
  },
  {
    "path": "src/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eStorage\u003c/code\u003e object that deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private String dataDirectoryPath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    private String savedFilePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Storage(String dataDirectoryPath, String savedFilePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.dataDirectoryPath \u003d dataDirectoryPath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.savedFilePath \u003d savedFilePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns a List of \u003ccode\u003eTask\u003c/code\u003e loaded from the file containing the saved tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return a List of \u003ccode\u003eTask\u003c/code\u003e loaded from the file containing the saved tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If failed to load the file containing the saved tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public List\u003cTask\u003e loadSavedFile() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        File directory \u003d new File(dataDirectoryPath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        directory.mkdir(); // create the directory if it not existed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        File savedFile \u003d new File(savedFilePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            savedFile.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            Scanner sc \u003d new Scanner(savedFile);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                String taskString \u003d sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                String[] taskComponents \u003d taskString.split(\" - \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                String taskType \u003d taskComponents[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                boolean isDone \u003d taskComponents[1].equals(\"1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                String description \u003d taskComponents[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                Task toAdd;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    toAdd \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    toAdd \u003d new Deadline(description, LocalDateTime.parse(taskComponents[3],"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")), isDone);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    toAdd \u003d new Event(description, LocalDateTime.parse(taskComponents[3],"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")), isDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                    throw new IllegalArgumentException(\"Saved file contains incorrect format\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                tasks.add(toAdd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Writes all the \u003ccode\u003eTask\u003c/code\u003e inside \u003ccode\u003etasks\u003c/code\u003e into the destined file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws DukeException If failed to write the tasks into the destined file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        FileWriter fw \u003d new FileWriter(savedFilePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        for (Task task : tasks.all()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            fw.write(task.simplifiedTaskString() + \"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 88
    }
  },
  {
    "path": "src/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.NoSuchTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eTaskList\u003c/code\u003e object that contains the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public List\u003cTask\u003e all() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns the task based on the index provided."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return the task based on the index provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws NoSuchTaskException If the index not available in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Task get(int zeroBasedIndex) throws NoSuchTaskException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return tasks.get(zeroBasedIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new NoSuchTaskException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Returns the task based on the index provided and removes it from the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @return the task based on the index provided."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @throws NoSuchTaskException If the index not available in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Task remove(int zeroBasedIndex) throws NoSuchTaskException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            return tasks.remove(zeroBasedIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            throw new NoSuchTaskException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 58
    }
  },
  {
    "path": "src/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.NoSuchTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents a \u003ccode\u003eUi\u003c/code\u003e that deals with interactions with the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays \u003ccode\u003etext\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void say(String text) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays the \u003ccode\u003eString\u003c/code\u003e representation of \u003ccode\u003ee\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * @param e Exception whose \u003ccode\u003eString\u003c/code\u003e representation will be displayed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void sayException(Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays a line of \"-\"."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        System.out.println(\"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays a hello message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void hello() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        say(\"Hello! I\u0027m duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays an exiting message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        say(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays a message indicating the \u003ccode\u003eTask\u003c/code\u003e has been added."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void sayAddedTask(Task task, int tasksTotal) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        say(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + tasksTotal + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays a message indicating the \u003ccode\u003eTask\u003c/code\u003e has been deleted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void sayDeletedTask(Task task, int tasksTotal) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        say(\"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \" + tasksTotal + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays a message indicating the \u003ccode\u003eTask\u003c/code\u003e has been marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void sayMarkedTask(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        say( \"Nice! I\u0027ve marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     * Displays all \u003ccode\u003eTask\u003c/code\u003e inside \u003ccode\u003etasks\u003c/code\u003e."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void displayTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            boolean isLastTask \u003d i \u003d\u003d tasks.size() - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                text +\u003d ((i + 1) + \". \" + tasks.get(i).toString() + (isLastTask ? \"\" : \"\\n\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            } catch (NoSuchTaskException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                sayException(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        say(text);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 95
    }
  },
  {
    "path": "src/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception related to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "       return \"☹ OOPS!!!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 11
    }
  },
  {
    "path": "src/exception/EmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception stating the description of the \u003ccode\u003eDeadline\u003c/code\u003e to be added is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class EmptyDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"The description or deadline of a deadline cannot be empty. Format: \" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                \"deadline [description] /by [deadline]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 12
    }
  },
  {
    "path": "src/exception/EmptyDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception stating the index of the task to be deleted is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class EmptyDeleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"The index of what to be deleted cannot be empty.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 11
    }
  },
  {
    "path": "src/exception/EmptyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception stating the index of the task to be marked as done is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class EmptyDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"The index of what is done cannot be empty.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 11
    }
  },
  {
    "path": "src/exception/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception stating the description of the \u003ccode\u003eEvent\u003c/code\u003e to be added is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class EmptyEventException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"The description or time of an event cannot be empty. Format: \" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                \"event [description] /at [time]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 12
    }
  },
  {
    "path": "src/exception/EmptyFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception stating the keyword to find is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class EmptyFindException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"The keyword cannot be empty\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 11
    }
  },
  {
    "path": "src/exception/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception stating the description of the \u003ccode\u003eToDo\u003c/code\u003e to be added is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class EmptyTodoException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"The description of a todo cannot be empty. Format: todo [description]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 11
    }
  },
  {
    "path": "src/exception/NoSuchTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exception stating the task is not within the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class NoSuchTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"The index provided is not within the task list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 11
    }
  },
  {
    "path": "src/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " * Represents an exceptions stating the command is not defined."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" \" + \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 11
    }
  },
  {
    "path": "src/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    LocalDateTime deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM dd yyyy, HH:mm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" (by: \" + deadline.format(formatter) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String simplifiedTaskString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.simplifiedTaskString() + \" - \" + this.deadline.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 40
    }
  },
  {
    "path": "src/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Event(String description, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM dd yyyy, HH:mm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.toString() + \" (at: \" + time.format(formatter) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String simplifiedTaskString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return super.simplifiedTaskString() + \" - \" + this.time.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 37
    }
  },
  {
    "path": "src/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String X \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return (isDone ? tick : X); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public abstract String getTaskType();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return \"[\" + this.getTaskType() + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String simplifiedTaskString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return this.getTaskType() + \" - \" + (this.isDone ? \"1\" : \"0\") + \" - \" + this.getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 42
    }
  },
  {
    "path": "src/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 18
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.MarkDoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.TaskListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import command.UnknownCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseAddDeadline(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"deadline\", \"homework /by 18/02/2020 1900\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"deadline homework /by 18/02/2020 1900\"), new AddDeadlineCommand(splitCommand));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseAddEvent(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"event\", \"workshop /at 18/02/2020 1900\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"event workshop /at 18/02/2020 1900\"), new AddEventCommand(splitCommand));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseAddToDo(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"todo\", \"watch TV\"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"todo watch TV\"), new AddToDoCommand(splitCommand));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseDeleteCommand(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"delete\", \"1\"};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"delete 1\"), new DeleteCommand(splitCommand));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseExit(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"bye\"};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"bye\"), new ExitCommand(splitCommand));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseMarkDone(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"done\", \"3\"};"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"done 3\"), new MarkDoneCommand(splitCommand));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseTaskList(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"list\"};"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"list\"), new TaskListCommand(splitCommand));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void parseUnknown(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        String[] splitCommand \u003d {\"hehehe\"};"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(Parser.parse(\"hehehe\"), new UnknownCommand(splitCommand));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 65
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import exception.NoSuchTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void get_success(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"watch TV\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(toDo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Deadline(\"homework\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Event(\"event\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(tasks.get(0), toDo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (NoSuchTaskException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void get_exceptionThrown() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new ToDo(\"watch TV\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Deadline(\"homework\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Event(\"event\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(tasks.get(10), null);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (NoSuchTaskException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The index provided is not within the task list\", e.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void size(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"watch TV\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(toDo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Deadline(\"homework\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Event(\"event\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(tasks.size(), 3);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void all(){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"watch TV\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(toDo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Deadline(\"homework\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Event(\"event\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        assertEquals(tasks.all(), list);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void remove_success(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"watch TV\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(toDo);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Deadline(\"homework\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Event(\"event\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(tasks.remove(0), toDo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(tasks.size(), 2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (NoSuchTaskException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The index provided is not within the task list\", e.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    public void remove_exceptionThrown(){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"watch TV\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(toDo);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Deadline(\"homework\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        list.add(new Event(\"event\", LocalDateTime.parse(\"16/02/2019 1900\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(tasks.remove(100), toDo);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(tasks.size(), 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        } catch (NoSuchTaskException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The index provided is not within the task list\", e.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 118
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "todo first todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "deadline return book /by 18/09/2020 1600"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "event project meeting /at 18/09/2020 1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "deadline going out /by i 18/09/2020 1600"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dhafinrazaq"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dhafinrazaq": 2,
      "-": 36
    }
  }
]
