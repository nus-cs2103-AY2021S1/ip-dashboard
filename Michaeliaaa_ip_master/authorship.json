[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 18,
      "-": 44
    }
  },
  {
    "path": "data/listOfTasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "T | 0 | CS2100 Lab 3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "T | 0 | CS2101 OP1 Script"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "E | 0 | CS2101 OP1 Rehearsal  | 2020-09-07"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 3
    }
  },
  {
    "path": "src/main/java/duke/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import static duke.DukeCommandType.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * CommandHandler class will handle all the related mechanisms initiated by user\u0027s command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Input\u0027s command type */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected DukeCommandType commandType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** User\u0027s input */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises CommandHandler with user\u0027s input and its command type."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public CommandHandler(String input, DukeCommandType commandType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Handles user\u0027s inputs depending on command type."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String handleCommands(String input, DukeCommandType commandType, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                task \u003d input.split(\"todo \")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                Task newTask \u003d new ToDos(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                output +\u003d tasks.addTask(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.MISSING_DESCRIPTION, TODO);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    output +\u003d e;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                if (input.split(\"deadline \").length \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DEADLINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else if (input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DEADLINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else if (!input.contains(\"/by \")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    if (input.equals(\"deadline /by\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DEADLINE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, DEADLINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else if (input.split(\"/by \").length \u003c 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DEADLINE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        task \u003d input.split(\"deadline \")[1].split(\"/by \")[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        String due \u003d input.split(\"deadline \")[1].split(\"/by \")[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        if (task.equals(\"\") \u0026\u0026 due.equals(\"\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DEADLINE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.MISSING_DESCRIPTION, DEADLINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else if (due.equals(\"\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, DEADLINE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                Task newTask \u003d new Deadlines(task, due);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                output +\u003d tasks.addTask(newTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                DukeException.wrongTimeFormat();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        output +\u003d e;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                output +\u003d e;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                if (input.split(\"event \").length \u003c 2) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, EVENT);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, EVENT);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else if (!input.contains(\"/at \")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    if (input.equals(\"event /at\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, EVENT);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, EVENT);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else if (input.split(\"/at \").length \u003c 2) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, EVENT);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        task \u003d input.split(\"event \")[1].split(\"/at \")[0];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        String due \u003d input.split(\"event \")[1].split(\"/at \")[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        if (task.equals(\"\") \u0026\u0026 due.equals(\"\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, EVENT);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.MISSING_DESCRIPTION, DEADLINE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else if (due.equals(\"\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, DEADLINE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            Task newTask \u003d new Events(task, due);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            output +\u003d tasks.addTask(newTask);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        output +\u003d e;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        DukeException.wrongTimeFormat();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                output +\u003d e;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d tasks.getListOfTasks();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            String keyword \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            System.out.println(keyword);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                output +\u003d tasks.done(index);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.INVALID_INDEX, DONE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    output +\u003d e;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                output +\u003d tasks.delete(index);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.INVALID_INDEX, DELETE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    output +\u003d e;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d Ui.getListOfCommands();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d Ui.exit();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                throw new DukeException(\"\", DukeExceptionType.UNKNOWN);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                output +\u003d e;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 178
    }
  },
  {
    "path": "src/main/java/duke/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Deadlines class will handle tasks categorised as deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Deadline in LocalDate format */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Deadline in String format */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private String due;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises Deadlines using description and deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadlines(String description, String deadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.due \u003d deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises Deadlines using description, deadline and isDone."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Used when knowledge about isDone is needed, eg. loading existing list from hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public Deadlines(String description, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.due \u003d deadline;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of deadline"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of deadline that will be written on a text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of deadline"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return \"D\" + super.writeToFile() + \" | \" + due;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 51,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Duke class is the main class to use in order to run the bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** User\u0027s storage */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** User\u0027s task list */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Ui to interact with user */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Parser to parse user\u0027s inputs */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises Duke and objects required."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @SuppressWarnings(\"checkstyle:WhitespaceAround\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            storage.load(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            Ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        Ui.greeting();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        boolean isExit \u003d ui.isExit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            ui.readInput();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            isExit \u003d ui.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        storage.save(TaskList.tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Entry point for Duke to start."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        storage.save(TaskList.tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return parser.parseInputs(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 58,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeCommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * DukeCommandType stores all types of commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public enum DukeCommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    UNKNOWN,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    EXIT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 17
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * DukeException stores all duke-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Exception type */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected DukeExceptionType exceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Command type */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected DukeCommandType commandType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises DukeException using exception type."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param exceptionType"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises DukeException using exception type and command type."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param exceptionType"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param commandType"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType, DukeCommandType commandType) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns error messages depending on the exception type and command type."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return error messages"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String error \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        switch (exceptionType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case EMPTY_LIST:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            error +\u003d \"Your list is empty...\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case UNKNOWN:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            error +\u003d \"Huh? I don\u0027t understand what you mean...\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case NO_MATCHING_FOUND:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            error +\u003d \"I can\u0027t find anything :-(\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case WRONG_FORMAT:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in adding deadline: Wrong format\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"\\nFormat: deadline \u003cdescription\u003e /by \u003cdatetime\u003e\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in adding event: Wrong format\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"\\nFormat: event \u003cdescription\u003e /at \u003cdatetime\u003e\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in adding todo: Missing description\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in adding deadline: Missing description\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in adding event: Missing description\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case MISSING_TIMING:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in adding deadline: Missing due date\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in adding event: Missing scheduled date\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        case INVALID_INDEX:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in marking task done: Invalid index\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"Error in deleting task: Invalid index\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns error in user\u0027s input due to wrong time format."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String wrongTimeFormat() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String error \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        error +\u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        error +\u003d \"Error in adding deadline: Wrong format\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        error +\u003d \"\\nFormat: YYYY-MM-DD\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        error +\u003d \"\\n_____________________________________________________\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 139
    }
  },
  {
    "path": "src/main/java/duke/DukeExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * DukeExceptionType stores all types of duke-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    EMPTY_LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    MISSING_DESCRIPTION,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    MISSING_TIMING,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    INVALID_INDEX,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    NO_MATCHING_FOUND,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    WRONG_FORMAT,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    UNKNOWN,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 14
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Events class will handle tasks categorised as event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Scheduled event date in LocalDate format */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected LocalDate scheduled;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Scheduled event date in String format */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises Events using description and scheduled event date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param scheduled"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public Events(String description, String scheduled) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.date \u003d scheduled;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.scheduled \u003d LocalDate.parse(scheduled);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises Events using description, scheduled event date and isDone."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Used when knowledge about isDone is needed, eg. loading existing list from hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param scheduled"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public Events(String description, String scheduled, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.date \u003d scheduled;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.scheduled \u003d LocalDate.parse(scheduled);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + scheduled.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of event that will be written on a text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of event"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return \"E\" + super.writeToFile() + \" | \" + date;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 51,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Koya.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/RJ.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String greeting() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m RJ\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\nHow can I help you?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return greet;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        DialogBox greeting \u003d DialogBox.getDukeDialog(MainWindow.greeting(), dukeImage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        dialogContainer.getChildren().add(greeting);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 69
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Parser class will take in user\u0027s inputs and make sense of it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Interprets the command type from user\u0027s input and calls CommandHandler to process the commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String parseInputs(String input) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        if (input.equals(\"bye\")) { "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.EXIT, tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.HELP, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.LIST, tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.TODO, tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.DEADLINE, tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.EVENT, tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.DONE, tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.DELETE, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.FIND, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            output +\u003d CommandHandler.handleCommands(input, DukeCommandType.UNKNOWN, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 40
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Storage class will save changes made to the task list and load user\u0027s existing tasks when ran."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** File path */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private final String path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises storage to a designated general file path"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.path \u003d \"data/listOfTasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Loads data from the file to the bot when the bot just started running."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void load(TaskList tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            File file \u003d new File(this.path);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                String[] details \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                boolean isDone \u003d details[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                switch (details[0]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        tasks.addStoredTask(new ToDos(details[2], isDone));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        tasks.addStoredTask(new Deadlines(details[2], details[3], isDone));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        tasks.addStoredTask(new Events(details[2], details[3], isDone));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            System.err.println (e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Saves changes of the list to the file when bot stopped running."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            File file \u003d new File(this.path);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            FileWriter fw;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                fw \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                fw.write(task.writeToFile() + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            System.err.println (e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 82
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Task class will handle user\u0027s tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Status of the completion of the task */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises Task using description only."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises Task using description and isDone."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Used when knowledge about isDone is needed, eg. loading existing list from hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns symbol representation about the completion status of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return tick (completed) or X (not completed) symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns number representation about the completion status of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return 1 (completed) or 0 (not completed)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String getStatusIndex() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Gets description of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of to-do task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of to-do task that will be written on a text file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of to-do task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return \" | \" + getStatusIndex() + \" | \" + description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 63,
      "-": 20
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * TaskList class contains the task list and all operations that modify task in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** User\u0027s list of tasks */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises user\u0027s list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Adds task into user\u0027s list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String str \u003d \"_____________________________________________________\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\nGot it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n\" + task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\nNow you have \" + tasks.size() + \" task(s) in the list.\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n\" + task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "   /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    * Adds task from listOfTasks.txt into user\u0027s list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    * @param task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "   public static void addStoredTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "       tasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "   }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Prints user\u0027s list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String getListOfTasks() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                throw new DukeException(\"\", DukeExceptionType.EMPTY_LIST);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                str +\u003d e;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            String lst \u003d \"_____________________________________________________\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                    + \"\\nHere are the tasks in your list:\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            String lst \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                lst +\u003d \"\\n\" + index + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            lst +\u003d \"\\n_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            str \u003d lst;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Marks a task as done when user completes it."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String done(Integer index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String str \u003d \"_____________________________________________________\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "////                + \"\\nNice! I\u0027ve marked this task as done:\\n      \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "////                + tasks.get(index - 1)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "////                + \"\\n_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d \"Nice! I\u0027ve marked this task as done:\\n      \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + tasks.get(index - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String delete(Integer index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String str \u003d \"_____________________________________________________\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\nNoted. I\u0027ve removed this task:\\n      \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + tasks.remove(index - 1)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n    Now you have \" + tasks.size() + \" task(s) in the list.\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d \"Noted. I\u0027ve removed this task:\\n      \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + tasks.remove(index - 1)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n    Now you have \" + tasks.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Finds matching tasks based on keyword provided by user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String findTasks(String keyword) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                throw new DukeException(\"\", DukeExceptionType.NO_MATCHING_FOUND);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                str +\u003d e;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            str +\u003d \"_____________________________________________________\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "////                    + \"\\nHere are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            str +\u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            for (Task task : matchingTasks) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                str +\u003d \"\\n\" + index + \". \" + task;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//            str +\u003d \"\\n_____________________________________________________\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 142
    }
  },
  {
    "path": "src/main/java/duke/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * ToDos class will handle tasks categorised as to-do"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises ToDos using description only."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Initialises ToDos using description and isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Used when knowledge about isDone is needed, eg. loading existing list from hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public ToDos(String description, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of to-do task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of to-do task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Returns string format of to-do task that will be written on a text file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return String description of to-do task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return \"T\" + super.writeToFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 37,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " * Ui class will handle the interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Parser for parsing user\u0027s inputs */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /** Boolean to determine if Duke should stop running */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Constructs a new Ui object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @param parser the parser that deals with user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public Ui(Parser parser) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Determines whether or not Duke should stop running."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * @return true if Duke should stop running"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Prints logo and greets the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String greeting() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String greet \u003d \"\\n____________________________________________________________\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n Hello! I\u0027m Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n What can I do for you?\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m Duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n What can I do for you?\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String str \u003d logo + greet;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d greet;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Prints a list of commands which the user can use."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String getListOfCommands() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String commands \u003d \"__________________________________________________\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\nHere are all your commands:\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\nlist - show all tasks\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\ntodo \u003cyour task\u003e - add task\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\ndeadline \u003cyour task\u003e /by \u003cyour deadline\u003e - add task with deadline\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\nevent \u003cyour event\u003e /at \u003cevent\u0027s timing\u003e - add event\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\ndone \u003cindex of task\u003e - mark task as done\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\ndelete \u003cindex of task\u003e - delete task from list\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n__________________________________________________\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d \"Here are all your commands:\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\nlist - show all tasks\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\ntodo \u003cyour task\u003e - add task\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\ndeadline \u003cyour task\u003e /by \u003cyour deadline\u003e - add task with deadline\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\nevent \u003cyour event\u003e /at \u003cevent\u0027s timing\u003e - add event\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\ndone \u003cindex of task\u003e - mark task as done\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\ndelete \u003cindex of task\u003e - delete task from list\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Prints bye and quit the bot."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String exit() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//        String bye \u003d \"________________________________________________\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\nBye! Hope to see you again soon.\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "//                + \"\\n___________________________________________________\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String str \u003d \"Bye! Hope to see you again soon.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Prints error in loading the data from the file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static String showLoadingError() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return \"    ERROR IN LOADING YOUR DATA :-(\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     * Reads the user\u0027s inputs and then passes them to parser for parsing."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void readInput() throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            System.out.println(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                this.isExit \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                String reply \u003d parser.parseInputs(input);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                System.out.println(reply);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 112
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003cHBox fx:id\u003d\"speechBubble\" maxHeight\u003d\"-Infinity\" styleClass\u003d\"speech-bubble\" stylesheets\u003d\"@duke.css\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" promptText\u003d\"Please type in your message here...\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"40\" stylesheets\u003d\"@duke.css\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"552.0\" prefWidth\u003d\"${scrollPane.width}\" styleClass\u003d\"anchor\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 20
    }
  },
  {
    "path": "src/test/java/duke/DeadlinesTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "class DeadlinesTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void testDeadlines() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        assertEquals(\"D | 0 | meeting | 2020-08-16\", new Deadlines(\"meeting\", \"2020-08-16\").writeToFile());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 12
    }
  },
  {
    "path": "src/test/java/duke/EventsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "class EventsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void testEvents() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        assertEquals(\"E | 0 | meeting | 2020-08-16\", new Events(\"meeting\", \"2020-08-16\").writeToFile());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 12
    }
  },
  {
    "path": "src/test/java/duke/ToDosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "class ToDosTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public void testToDos() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        assertEquals(\"T | 0 | meeting\", new ToDos(\"meeting\").writeToFile());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "hey"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 6,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.ToDos.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.DukeCommandType.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/DukeStorage.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.Events.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.DukeExceptionType.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.Deadlines.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "../src/main/java/duke.DukeException.java"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 9
    }
  }
]
