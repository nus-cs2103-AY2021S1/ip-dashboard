[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    LocalDateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hhmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Deadline(String work, LocalDateTime date){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(work, date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.deadline \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String description(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return super.isDone()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                ? \"[D][✓]\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                : \"[D][✗]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Deadline(String work, String end){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(work + \"(by: \" + end);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + deadline.format(format) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.ui \u003d new UI(storage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        ui.escape();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        new Duke(\"Data/duke.txt\").run();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 16,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5
    }
  },
  {
    "path": "src/main/java/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class EmptyTodoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public EmptyTodoException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(\"A todo cannot be empty\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    LocalDateTime date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hhmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Event(String work, LocalDateTime date){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(work, date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Event(String work, String deadline){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(work + \"(at:\" + deadline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + date.format(format) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String description(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return super.isDone()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                ? \"[E][✓]\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                : \"[E][✗]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 25
    }
  },
  {
    "path": "src/main/java/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class InvalidDateException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public InvalidDateException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(\"Wrong date Provided\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class InvalidDeadlineException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public InvalidDeadlineException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(\"OOPS, this deadline activity is invalid\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class InvalidEventException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public InvalidEventException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(\"Oops you have not entered a valid event, maybe check you /at tag again\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5
    }
  },
  {
    "path": "src/main/java/InvalidNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class InvalidNumberException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public InvalidNumberException(String msg){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void delete(String request, TaskList list){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            int index \u003d Integer.parseInt(request);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            isNumeric(index, list);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"The event has been removed as per your request: \\n \" + list.get(index));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            list.delete(index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list+ \\n_____________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"You have not provided a valid number\\n_____________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } catch (InvalidNumberException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"The number provided was greater or lesser than the number of items in the list\\n_____________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void update(String request, TaskList list){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            int index \u003d Integer.parseInt(request);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            isNumeric(index, list);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            list.updateStatus(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n \" + list.get(index));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list \\n_____________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"You have not provided a valid number\\n_____________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } catch (InvalidNumberException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"The number provided was greater or lesser than the number of items in the list\\n_____________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void addTodo(String request, TaskList list){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            ToDos todo \u003d getTodo(request);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\" + todo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            list.update(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\\n_____________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } catch (EmptyTodoException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"Oops!!! I\u0027m sorry, but the description of a todo cannot be empty\\n_____________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void isNumeric(int n, TaskList list) throws InvalidNumberException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (list.getSize() \u003c n || n \u003c\u003d 0){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            throw new InvalidNumberException(\"The number provided is bigger tha the list size\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void getDeadline(String word, TaskList list) throws InvalidDeadlineException{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (word.contains(\"/by\") \u0026\u0026 !word.substring(word.indexOf(\"/by\") + 3).equals(\"\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            word \u003d word.substring(8);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            int index \u003d word.indexOf(\"/by\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String str \u003d word.substring(index + 3).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String datestr \u003d str.replaceAll(\"-\", \"/\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String[] datearr \u003d datestr.split(\"/\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (datearr.length \u003c 2){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (datearr[0].length() \u003c 2){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datestr \u003d \"0\" + datestr;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datearr[0] \u003d \"0\" + datearr[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (datearr[1].length() \u003c 2){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datestr \u003d datearr[0] + \"/0\" + datearr[1] + \"/\" + datearr[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (!datestr.contains(\":\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                String[] arr \u003d datestr.split(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                if (arr.length \u003e 2){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                arr[1] \u003d arr[1].substring(0, 2) + \":\" + arr[1].substring(2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datestr \u003d arr[0] + \" \" + arr[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                LocalDateTime date \u003d LocalDateTime.parse(datestr, formatter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                Deadline deadline \u003d new Deadline(word.substring(0, index), date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                list.update(deadline);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \" + deadline);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"Invalid date provided\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void getEvent(String word, TaskList list) throws InvalidEventException{"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (word.contains(\"/at\") \u0026\u0026 !word.substring(word.indexOf(\"/at\") + 3).equals(\"\")){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            word \u003d word.substring(5);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            int index \u003d word.indexOf(\"/at\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String str \u003d word.substring(index + 3).trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String datestr \u003d str.replaceAll(\"-\", \"/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String[] datearr \u003d datestr.split(\"/\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (datearr.length \u003c 2){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                throw new InvalidEventException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (datearr[0].length() \u003c 2){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datestr \u003d \"0\" + datestr;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datearr[0] \u003d \"0\" + datearr[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (datearr[1].length() \u003c 2){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datestr \u003d datearr[0] + \"/0\" + datearr[1] + \"/\" + datearr[2];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (!datestr.contains(\":\")){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                String[] arr \u003d datestr.split(\" \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                if (arr.length \u003e 2){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    throw new InvalidEventException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                arr[1] \u003d arr[1].substring(0, 2) + \":\" + arr[1].substring(2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                datestr \u003d arr[0] + \" \" + arr[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                LocalDateTime date \u003d LocalDateTime.parse(datestr, formatter);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                Event event \u003d  new Event(word.substring(0, index), date);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + event);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                list.update(event);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"Incorrect Date format used\");;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            throw new InvalidEventException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static void validity(String line) throws UnknownCommandException{"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e(Arrays.asList(\"delete\", \"done\", \"todo\", \"event\", \"deadline\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (list.contains(words[0]) \u0026\u0026 words.length \u003e 1){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public static ToDos getTodo(String work) throws EmptyTodoException{"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (work.length() \u003e 4){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            return new ToDos(work.substring(4));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            throw new EmptyTodoException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 150
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Storage (String filepath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            FileReader file \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(file);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                tasks.add(getTask(line));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private Task getTask(String line){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (line.charAt(1) \u003d\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            task \u003d new ToDos(line.substring(6));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } else if (line.charAt(1) \u003d\u003d \u0027D\u0027){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            int index \u003d line.indexOf(\"|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            LocalDateTime date \u003d LocalDateTime.parse(line.substring(index + 1).trim(), formatter);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            task \u003d new Deadline(line.substring(6, index), date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            int index \u003d line.indexOf(\"|\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            LocalDateTime date \u003d LocalDateTime.parse(line.substring(index + 1).trim(), formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            task \u003d new Event(line.substring(6, index), date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (line.charAt(4) \u003d\u003d \u0027✓\u0027){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            task.updateStatus();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public TaskList load(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.list \u003d new TaskList(this.tasks) ;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void save(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            writer.write(list.save());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"No File found\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 62
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private String work;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Task(String work){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.work \u003d work;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Task(String work, LocalDateTime date){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.work \u003d work;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String description(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                ? \"[T][✓]\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                : \"[T][✗]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void updateStatus(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String getWork(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return work;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public boolean istodo(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        if (!this.done){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            return \"[✗]\" + this.work;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            return \"[✓]\" + this.work;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//    public TaskList(String filepath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            FileReader file \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            BufferedReader reader \u003d new BufferedReader(file);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            String line;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            while ((line \u003d reader.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//                tasks.add(getTask(line));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            file.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        } catch (IOException e){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//    private Task getTask(String line){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        Task task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        if (line.charAt(1) \u003d\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            task \u003d new ToDos(line.substring(6));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        } else if (line.charAt(1) \u003d\u003d \u0027D\u0027){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            int index \u003d line.indexOf(\"|\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            LocalDateTime date \u003d LocalDateTime.parse(line.substring(index + 1).trim(), formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            task \u003d new Deadline(line.substring(6, index), date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            int index \u003d line.indexOf(\"|\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            LocalDateTime date \u003d LocalDateTime.parse(line.substring(index + 1).trim(), formatter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            task \u003d new Event(line.substring(6, index), date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        if (line.charAt(4) \u003d\u003d \u0027✓\u0027){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//            task.updateStatus();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//        return task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void update(Task task){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public Task get(int i){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return tasks.get(i - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void delete(int i){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        tasks.remove(i - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void updateStatus(int i){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        tasks.get(i - 1).updateStatus();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String save(){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        StringBuilder line \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        for (Task task : tasks){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (!task.istodo()){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                String append \u003d task.description() + task.getWork() + \"|\" + task.getDate() + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                line.append(append);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String append \u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            line.append(append);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return line.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        StringBuilder line \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            line.append(task.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            line.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return line.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 87
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public ToDos(String work) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(work);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public boolean istodo(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 14
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public UI(Storage store) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.storage \u003d store;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        TaskList list \u003d storage.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            input \u003d input.trim().replaceAll(\"\\\\s{2,}\", \" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            String[] request \u003d input.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                Parser.validity(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                if (request[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    Parser.update(request[1], list);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                } else if (request[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    Parser.addTodo(input, list);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                } else if (request[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                        Parser.getDeadline(input, list);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    } catch (InvalidDeadlineException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                        System.out.println(\"Oops, somewhere your deadline was wrong. Please check whether you used a /by tag\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                        System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                } else if (request[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                        Parser.getEvent(input, list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    } catch (InvalidEventException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                        System.out.println(\"Oops seems like your event is invalid. Please check your /at tag\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                        System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                    Parser.delete(request[1], list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            } catch (UnknownCommandException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n_____________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public void escape(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        System.out.println(\"_____________________________\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n_____________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 66
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "public class UnknownCommandException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    public UnknownCommandException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\banik\\OneDrive\\Desktop\\NUS Y2S1\\CS2103\\Duke ChatBot"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ebolaeater"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Ebolaeater": 5,
      "-": 18
    }
  }
]
