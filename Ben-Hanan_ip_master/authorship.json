[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "# Duke Chat Bot User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "## User Interface"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "![UI](docs/Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### Task Manager"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Duke Chat Bot is a personal task manager. It allows users to add, delete and search tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 1. `bye` - Exits application"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Exits Duke Chat Bot application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "bye"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Application closes"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 2. `deadline \u003cdescription\u003e /by \u003cdatetime\u003e` - Adds a deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Adds a Deadline Task to task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "deadline lab submission /by 2020-01-01 16:30"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[D][✘] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 1 task in the list!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 3. `delete \u003ctaskId\u003e` - Deletes a task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Deletes a task from task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Noted! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[D][✘] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 0 tasks in the list!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 4. `done \u003ctaskId\u003e` - Marks a task as done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Marks a task as done in task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[D][✓] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 5. `event \u003cdescription\u003e /at \u003cdatetime\u003e` - Adds an event"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Adds an Event Task to task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "event OP1 Presentation /at 2020-12-31 09:55"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[E][✘] OP1 Presentation (at: 31 Dec 2020 09:55am)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 2 tasks in the list!"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 6. `todo \u003cdescription\u003e` - Adds a Todo Task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Adds a Todo Task to task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 3 tasks in the list!"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 7. `find \u003ckeyword\u003e` - Searches tasks"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Searches tasks by keyword in the task list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "find Presentation"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "1.[E][✘] OP1 Presentation (at: 31 Dec 2020 09:55am)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 8. `list` - Lists tasks"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Lists all tasks in the task list."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "1.[D][✓] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "2.[E][✘] OP1 Presentation (at: 31 Dec 2020 09:55am)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 148,
      "-": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 17,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "# Duke Chat Bot User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "## User Interface"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "![UI](Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### Task Manager"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Duke Chat Bot is a personal task manager. It allows users to add, delete and search tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 1. `bye` - Exits application"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Exits Duke Chat Bot application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "bye"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Application closes"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 2. `deadline \u003cdescription\u003e /by \u003cdatetime\u003e` - Adds a deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Adds a Deadline Task to task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "deadline lab submission /by 2020-01-01 16:30"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[D][✘] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 1 task in the list!"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 3. `delete \u003ctaskId\u003e` - Deletes a task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Deletes a task from task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Noted! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[D][✘] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 0 tasks in the list!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 4. `done \u003ctaskId\u003e` - Marks a task as done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Marks a task as done in task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[D][✓] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 5. `event \u003cdescription\u003e /at \u003cdatetime\u003e` - Adds an event"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Adds an Event Task to task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "event OP1 Presentation /at 2020-12-31 09:55"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[E][✘] OP1 Presentation (at: 31 Dec 2020 09:55am)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 2 tasks in the list!"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 6. `todo \u003cdescription\u003e` - Adds a Todo Task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Adds a Todo Task to task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Now you have 3 tasks in the list!"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 7. `find \u003ckeyword\u003e` - Searches tasks"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Searches tasks by keyword in the task list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "find Presentation"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "1.[E][✘] OP1 Presentation (at: 31 Dec 2020 09:55am)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "### 8. `list` - Lists tasks"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Lists all tasks in the task list."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "1.[D][✓] lab submission (by: 1 Jan 2020 4:30pm)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "2.[E][✘] OP1 Presentation (at: 31 Dec 2020 09:55am)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 136,
      "-": 13
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Personal chat bot to keep track of user\u0027s tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The file path of where the data is stored."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private static final Path filePath \u003d Paths.get(\".\", \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new Duke Object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Tries to load existing tasks from an existing data file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * If that fails, a new task list instance is made."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.storage \u003d new Storage(Duke.filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.tasks \u003d new TaskList(this.storage.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Gets a response from the duke chat bot to reply the user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param input input by the user through the GUI."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return the response given by Duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return (e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 59
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Launcher class to launch the Duke Chat bot."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Creates a GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            stage.setTitle(\"Duke chat bot\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 32
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Parses the user\u0027s inputs and decides what to do depending on the input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a command object according to what the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Checks for the integrity of the command and rejects it if it fails by throwing and error."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param input User\u0027s input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException If the command fails the integrity checks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        String[] commandDetail \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        if (commandDetail.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Be sure to follow the exact format of the commands!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        Commands command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            command \u003d Commands.valueOf(commandDetail[0].toUpperCase());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Sorry! I don\u0027t recognize that command!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            if (commandDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                throw new DukeException(\"Please key in a task to find!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return new FindCommand(commandDetail[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            if (commandDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                throw new DukeException(\"Please key in a task to be marked as done!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return new DoneCommand(commandDetail[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            if (commandDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                throw new DukeException(\"Please key in a task to delete!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return new DeleteCommand(commandDetail[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            if (commandDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                throw new DukeException(\"Please input a task to add!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return new AddCommand(command, commandDetail[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Sorry! I don\u0027t recognize that command!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 74
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * The link between the {@link duke.task.TaskList} and a local .txt file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The filepath whether the data will be stored on the local machine."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * A list of the tasks currently stored."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private List\u003cString\u003e tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new storage object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Tries to create the needed directories and files if it doesn\u0027t exist yet."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param filePath the path at which data will be stored at."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    Storage(Path filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            // create directory if directory doesn\u0027t exist"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            Path parentPath \u003d filePath.getParent();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            Files.createDirectories(parentPath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            // create file if file doesn\u0027t exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Files.createFile(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.tasks \u003d Files.readAllLines(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            System.out.println(\"duke.Storage error\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a list of tasks based on the data stored currently."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Handles the creation of the task objects by manipulating the strings the tasks are stored in."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException if program fails at any point."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public List\u003cTask\u003e getTasks() throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        for (String task : this.tasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String[] split \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            assert (split.length \u003e\u003d 3) : \"Tasks are being saved wrongly.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String type \u003d split[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            assert (type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\")) : \"Tasks are being saved wrongly\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            boolean isDone \u003d split[1].equals(\"1\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String desc \u003d split[2];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                tasks.add(new Todo(desc, isDone));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                assert (split.length \u003d\u003d 4) : \"Deadlines are being saved wrongly.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                String by \u003d split[3].trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    tasks.add(new Deadline(desc, by, isDone));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    throw new DukeException(\"Date was not stored properly!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                assert (split.length \u003d\u003d 4) : \"Events are being saved wrongly.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                String at \u003d split[3].trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    tasks.add(new Event(desc, at, isDone));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    throw new DukeException(\"Date was not stored properly!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                throw new DukeException(\"I received an unknown task!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Joins all the strings in the List of tasks in strings and separates them with a linebreak"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * before writing it to a file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws IOException If the program fails at any point."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void write() throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        String data \u003d String.join(\"\\n\", this.tasks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        Files.writeString(filePath, data, StandardCharsets.UTF_8, StandardOpenOption.WRITE,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                StandardOpenOption.TRUNCATE_EXISTING);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Saves a new task to the .txt file."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param task new task to be saved."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException if the program fails to write."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void saveTask(Task task) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.tasks.add(task.getSaveFormat());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.write();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t save this task!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Updates an existing task in the current tasks."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param id ID of task to update."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param task Task to update."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException if the program fails to write."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void updateTask(int id, Task task) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.tasks.set(id - 1, task.getSaveFormat());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.write();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t save this task!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Deletes a task from the current tasks."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param id ID of the task to delete."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException If the program fails to write."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void deleteTask(int id) throws DukeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.tasks.remove(id - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.write();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t save this task!\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 166
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a command that will add a task according the the input it is given."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The command that will determine the type of task added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final Commands command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The user given input that determines the details of the task added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new AddCommand instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param command   The command that determines the type of task added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param input     The details of the task added."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public AddCommand(Commands command, String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the Todo, Deadline and Event commands by creating a task according to the command given."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList          The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui                The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage           The storage used by the chat bot."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return                  Chat bot message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the execution fails at any step."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        switch (this.command) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            Task newTodoTask \u003d new Todo(this.input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return addTask(newTodoTask, taskList, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                String[] detailsDateTime \u003d this.input.split(\" /by \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Task newDeadlineTask \u003d new Deadline(detailsDateTime[0], detailsDateTime[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                return addTask(newDeadlineTask, taskList, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                throw new DukeException(\"Please enter a deadline to complete the task by\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                        + \" or follow the exact command format!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                String[] detailsDateTime \u003d this.input.split(\" /at \", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Task newEventTask \u003d new Event(detailsDateTime[0], detailsDateTime[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                return addTask(newEventTask, taskList, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                throw new DukeException(\"Please enter the time at which the event will take place\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                        + \" or follow the exact command format!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Sorry! I don\u0027t recognize the type of task you\u0027re tyring to add!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Adds and stores a new task in the task list and storage then prints out a message indicating that"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * the task was successfully added."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param newTask           The new task to be added"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList          The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui                The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage           The storage used by the chat bot."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return                  Chat bot message"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the execution fails at any step."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String addTask(Task newTask, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            storage.saveTask(newTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String message \u003d String.format(\"%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    newTask.toString(), taskList.size());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return ui.replyAdd(message);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t add the task to the database!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 100
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a command that will stop the chat bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the bye command by printing out a goodbye message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList          The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui                The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage           The storage used by the chat bot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return                  Chat bot message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return ui.showGoodbye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Gives a boolean to tell the bot to stop."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return boolean that will break the while loop."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 35
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a command that will be sent to the chat bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList          The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui                The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage           The storage used by the chat bot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the execution fails at any step."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a flag which will end the while loop and terminate the bot."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e by default."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 32
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * The list of commands this bot supports."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    LIST, DONE, DELETE, TODO, DEADLINE, EVENT, BYE, FIND, HELP"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 8
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a command that will execute the delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * User given input to indicate which task to delete."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new instance of deleteCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param input ID of task to delete."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the deletion of a task from the bot task list and storage then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * prints out a message upon success."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList          The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui                The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage           The storage used by the chat bot."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return                  Chat bot message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the execution fails at any step."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            int taskID \u003d Integer.parseInt(this.input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            Task curr \u003d taskList.deleteTask(taskID); // throws IndexOutOfBoundsException if taskID \u003c\u003d 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            storage.deleteTask(taskID);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String numTasks \u003d \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return ui.replyDelete(String.format(\"%s\\n%s\", curr.toString(), numTasks));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Please key in the number of an existing task to be removed!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 49
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a command that will mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * User given input which will specify which task to mark as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new DoneCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param input ID of task to mark as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the done command by marking the task with the given ID as done, updating the storage and"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * printing a message upon success."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList          The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui                The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage           The storage used by the chat bot."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return                  Chat bot message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the execution fails at any step."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            int taskID \u003d Integer.parseInt(this.input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            Task curr \u003d taskList.getTask(taskID); // throws IndexOutOfBoundsException if taskID is \u003c\u003d 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            curr.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            storage.updateTask(taskID, curr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return ui.replyDone(curr.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Please key in the number of an existing task to be marked as done!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 49
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a command that will find a list of tasks corresponding to the given keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The user given input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new instance of a FindCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param input The keyword to search for."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.input \u003d input.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the find command by searching for tasks with the keyword in the taskList and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * then prints a message either listing the matching tasks or stating that no tasks were found."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList  The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui        The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage   The storage used by the chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return          Chat bot message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        TaskList filtered \u003d taskList.searchTasks(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        if (filtered.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return ui.replyNoTasksFound();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return ui.replyFoundTasks(filtered.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 42
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a help command that will display the help message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the bye command by printing out a goodbye message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList          The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui                The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage           The storage used by the chat bot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return                  Chat bot message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return ui.replyHelp();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a command that will show all the current tasks in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Executes the list command by printing out the current task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param taskList  The list of tasks known by the chat bot."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param ui        The Ui that is used by the chat bot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param storage   The storage used by the chat bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return          Chat bot message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            return ui.showError(\"No tasks found\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return ui.replyList(taskList.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates possible exception that can occur from the {@link duke} package."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new instance with a \u003ccode\u003eOOPS!!!\u003c/code\u003e followed by the error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param message the error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        super(\"OOPS!!! \" + message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a task that needs to be done by a certain date and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Constant that determines the representation of this task\u0027s type."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected static final String TASK_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Constant that stores the date to finish the task by."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected LocalDate dateBy;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * constant that store the time to finish the task by."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected LocalTime timeBy;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new Deadline object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Converts the date and time to attend the event to LocalDate and LocalTime objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description       The task to be completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param by                The date and time when it must be completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the program fails at any point."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String[] dateTime \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.dateBy \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.timeBy \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Please input date and time in correct format:\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    + \" \u0027yyyy-MM-dd HH:MM\u0027 (24-hour time format).\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new Deadline object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Converts the date and time to attend the event to LocalDate and LocalTime objects."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description       The task to be completed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param by                The date and time when it must be completed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param isDone            Whether the task is done or not."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the program fails at any point."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String[] parts \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.dateBy \u003d LocalDate.parse(parts[0]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.timeBy \u003d LocalTime.parse(parts[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Please input date and time in correct format:\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    + \" \u0027yyyy-MM-dd HH:MM\u0027 (24-hour time format)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task in a save friendly format."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The way it is saved affects how the .txt file is read in {@link duke.Storage}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Save-friendly string of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"%s | %s | %s %s\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Deadline.TASK_TYPE,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                super.getSaveFormat(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.dateBy.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.timeBy.format(DateTimeFormatter.ofPattern(\"HH:mm\")));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Task is prepended by Deadline.TASK_TYPE."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Data of the task in string format."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        String modifier \u003d (this.timeBy.isAfter(LocalTime.NOON)) ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"[%s]%s (at: %s, %s)\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Deadline.TASK_TYPE,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.dateBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.timeBy.format(DateTimeFormatter.ofPattern(\"hh:mm\")) + modifier);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 102
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a task that has to be attended by a specified and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Constant that determines the representation of this task\u0027s type."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected static final String TASK_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Constant that stores the date to finish the task by."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected LocalDate dateBy;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * constant that store the time to finish the task by."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected LocalTime timeBy;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new Event object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Converts the date and time to attend the event to LocalDate and LocalTime objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description       The task to be completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param at                The date and time when it must be attended."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the program fails at any point."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String[] dateTime \u003d at.split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.dateBy \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.timeBy \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Please input date and time in correct format:\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    + \" \u0027yyyy-MM-dd HH:MM\u0027 (24-hour time format).\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new Event object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Converts the date and time to attend the event to LocalDate and LocalTime objects."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description       The task to be completed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param at                The date and time when it must be attended."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param isDone            Whether the task is done or not."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @throws DukeException    If the program fails at any point."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            String[] parts \u003d at.split(\" \", 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.dateBy \u003d LocalDate.parse(parts[0]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            this.timeBy \u003d LocalTime.parse(parts[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            throw new DukeException(\"Please input date and time in correct format:\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    + \" \u0027yyyy-MM-dd HH:MM\u0027 (24-hour time format)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task in a save friendly format."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The way it is saved affects how the .txt file is read in {@link duke.Storage}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Save-friendly string of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"%s | %s | %s %s\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Event.TASK_TYPE,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                super.getSaveFormat(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.dateBy.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.timeBy.format(DateTimeFormatter.ofPattern(\"HH:mm\")));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Task is prepended by Event.TASK_TYPE."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Data of the task in string format."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        String modifier \u003d (this.timeBy.isAfter(LocalTime.NOON)) ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"[%s]%s (by: %s, %s)\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Event.TASK_TYPE,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.dateBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                this.timeBy.format(DateTimeFormatter.ofPattern(\"hh:mm\")) + modifier);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 102
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The description of the task to be done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Whether the task is done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initialize a new Task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description the details of the task to be done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initialize a new Task object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description the details of the task to be done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param isDone whether the task is done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a visual representation of whether the task is done or not."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Tick for done, Cross for not done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Get the description of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return description of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns the result of a check whether a task contains a keyword or not."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param keyword user specified keyword."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if contains, \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.description.toLowerCase().contains(keyword.toLowerCase());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task in a save friendly format."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The way it is saved affects how the .txt file is read in {@link duke.Storage}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Save-friendly string of the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"%s | %s\", this.isDone ? \"1\" : \"0\", this.getDescription());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Data of the task in string format."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"[%s]%s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 92
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new task list object using an existing List."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param tasks existing list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initializes a new task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Gets a given task in the task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param id the ID of the task to get."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Task with the given ID."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Task getTask(int id) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.tasks.get(id - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param task the task to add."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if task is added, \u003ccode\u003efalse\u003c/code\u003e if not."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public boolean addTask(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Deletes a task in a task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param id Task to be deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Task that was deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Task deleteTask(int id) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.tasks.remove(id - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns the number of tasks in the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return number of tasks in the task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a task list of all the tasks containing the specified keyword."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param keyword User input keyword."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Task(s) that contain the keyword."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public TaskList searchTasks(String keyword) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        List\u003cTask\u003e filtered \u003d this.tasks.stream().filter(task -\u003e task.containsKeyword(keyword))"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return new TaskList(filtered);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of all the tasks in the task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Each task has a number of it\u0027s index + 1 and is separated by a newline."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return String comprising of all the tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return IntStream.range(0, this.tasks.size())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                .mapToObj(i -\u003e String.format(\"%d. %s\\n\", i + 1, tasks.get(i)))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                .collect(Collectors.joining(\"\\n\")).trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 97
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Encapsulates a task to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Constant that determines the representation of this task\u0027s type."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    protected static final String TASK_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initialize a new To do object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description details of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initialize a new to do object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param description details of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param isDone whether the task is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task in a save friendly format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The way it is saved affects how the .txt file is read in {@link duke.Storage}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Save-friendly string of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"%s | %s\", Todo.TASK_TYPE, super.getSaveFormat());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Task is prepended by Todo.TASK_TYPE."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return Data of the task in string format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return String.format(\"[%s]%s\", Todo.TASK_TYPE, super.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 53
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Controller for the dialog box."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        BackgroundFill backFill \u003d new BackgroundFill("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Color.web(\"#99EDCC\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                new CornerRadii(20),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                new Insets(5, 5, 5, 5)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        db.setBackground(new Background(backFill));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        BackgroundFill backFill \u003d new BackgroundFill("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Color.web(\"FFF8F0\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                new CornerRadii(20),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                new Insets(5, 5, 5, 5)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        db.setBackground(new Background(backFill));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 80
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * Controller for the main window."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Initialize main window with a scroll pane and background color."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        String style \u003d \"-fx-background-color: rgba(16,79,85,1);\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        this.dialogContainer.setStyle(style);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 60
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " * User interaction class that handles how the bot replies."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * The messages that the chat bot sends out."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String TASK_NOT_FOUND_MESSAGE \u003d \"No matching tasks found!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String TASK_FOUND_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String LOADING_ERROR_MESSAGE \u003d \"Something went wrong when loading previously saved tasks!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            + \"Starting with an empty tasks list instead...\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String HELP_INTRO \u003d \"Here are the list of commands I support!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String[] COMMANDS \u003d {\"list\", \"bye\", \"todo\", \"deadline\", \"event\", \"done\", \"find\", \"delete\", \"help\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String LIST_HELP \u003d \"To list out all existing tasks, type \u0027list\u0027.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String BYE_HELP \u003d \"To exit the chat bot, type \u0027bye\u0027.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String TODO_HELP \u003d \"To add a new Todo, type \u0027todo \u003cdescription\u003e\u0027.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String DEADLINE_HELP \u003d \"To add a new Deadline, type \u0027deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HH:mm\u003e\u0027.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String EVENT_HELP \u003d \"To add a new Event, type \u0027event \u003cdescription\u003e /at \u003cyyyy-MM-dd HH:mm\u003e\u0027.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String DONE_HELP \u003d \"To mark a task as done, type \u0027done \u003ctaskId\u003e\u0027.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String FIND_HELP \u003d \"To find all items containing a keyword in its description, type \u0027find \u003ckeyword\u003e\u0027.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    static final String DELETE_HELP \u003d \"To delete a task, type \u0027delete \u003ctaskId\u003e\u0027.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Formats chat bot replies and returns them as a string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param message the message to send."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String botReply(String... message) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        StringBuilder out \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        for (String s : message) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            out.append(s).append(\"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return out.toString().trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted error message if there is a problem with the UI."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.LOADING_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a welcome message as a string."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted goodbye message as a string."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.EXIT_MESSAGE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted standard list message with the list of tasks as a string."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param content list of tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String replyList(String content) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.LIST_MESSAGE, content);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted standard done message with the done task as a string."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param content the task that was just marked as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String replyDone(String content) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.DONE_MESSAGE, content);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted standard added task message with the added task as a string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param content the added task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String replyAdd(String content) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.TASK_ADDED_MESSAGE, content);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted standard delete message with the deleted task as a string."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param content the deleted task."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String replyDelete(String content) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.DELETE_MESSAGE, content);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted standard task not found message as a string."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String replyNoTasksFound() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.TASK_NOT_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted standard found message with the found task(s) as a string."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param content task(s)."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String replyFoundTasks(String content) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.TASK_FOUND_MESSAGE, content);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply for the command help."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String replyHelp() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        StringBuilder commands \u003d new StringBuilder();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        for (String command : Ui.COMMANDS) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            commands.append(String.format(\"%s, \", command));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(Ui.HELP_INTRO, commands.toString().trim(), Ui.LIST_HELP, Ui.BYE_HELP,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                Ui.TODO_HELP, Ui.DEADLINE_HELP, Ui.EVENT_HELP, Ui.DONE_HELP, Ui.FIND_HELP, Ui.DELETE_HELP);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * Returns a reply formatted error message as a string."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @param message error message"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     * @return chat bot reply."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        return this.botReply(message);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 156
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            \u003cclip\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                \u003cCircle centerX\u003d\"48.0\" centerY\u003d\"48.0\" radius\u003d\"48.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            \u003c/clip\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    void new_validDateTime_noExceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            new Deadline(\"test desc\", \"2020-08-25 22:00\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    void new_invalidDateTime_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            new Deadline(\"test desc\", \"2020-8-25 2359\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            assertEquals(\"OOPS!!! Please input date and time in correct format:\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    + \" \u0027yyyy-MM-dd HH:MM\u0027 (24-hour time format).\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 31
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    void new_validDateTime_noExceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            new Event(\"test desc\", \"2020-08-25 22:00\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    void new_invalidDateTime_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            new Event(\"test desc\", \"2020-8-25 2359\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "            assertEquals(\"OOPS!!! Please input date and time in correct format:\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "                    + \" \u0027yyyy-MM-dd HH:MM\u0027 (24-hour time format).\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "give me money"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "del data"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ben-Hanan"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Ben-Hanan": 4,
      "-": 19
    }
  }
]
